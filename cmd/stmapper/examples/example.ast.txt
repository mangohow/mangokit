     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: example.go:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: example.go:1:9
     5  .  .  Name: "examples"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 29) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  TokPos: example.go:3:1
    12  .  .  .  Tok: import
    13  .  .  .  Lparen: example.go:3:8
    14  .  .  .  Specs: []ast.Spec (len = 4) {
    15  .  .  .  .  0: *ast.ImportSpec {
    16  .  .  .  .  .  Doc: nil
    17  .  .  .  .  .  Name: nil
    18  .  .  .  .  .  Path: *ast.BasicLit {
    19  .  .  .  .  .  .  ValuePos: example.go:4:2
    20  .  .  .  .  .  .  Kind: STRING
    21  .  .  .  .  .  .  Value: "\"fmt\""
    22  .  .  .  .  .  }
    23  .  .  .  .  .  Comment: nil
    24  .  .  .  .  .  EndPos: -
    25  .  .  .  .  }
    26  .  .  .  .  1: *ast.ImportSpec {
    27  .  .  .  .  .  Doc: nil
    28  .  .  .  .  .  Name: nil
    29  .  .  .  .  .  Path: *ast.BasicLit {
    30  .  .  .  .  .  .  ValuePos: example.go:5:2
    31  .  .  .  .  .  .  Kind: STRING
    32  .  .  .  .  .  .  Value: "\"github.com/mangohow/mangokit/cmd/stmapper/examples/model\""
    33  .  .  .  .  .  }
    34  .  .  .  .  .  Comment: nil
    35  .  .  .  .  .  EndPos: -
    36  .  .  .  .  }
    37  .  .  .  .  2: *ast.ImportSpec {
    38  .  .  .  .  .  Doc: nil
    39  .  .  .  .  .  Name: nil
    40  .  .  .  .  .  Path: *ast.BasicLit {
    41  .  .  .  .  .  .  ValuePos: example.go:6:2
    42  .  .  .  .  .  .  Kind: STRING
    43  .  .  .  .  .  .  Value: "\"github.com/mangohow/mangokit/stmapper\""
    44  .  .  .  .  .  }
    45  .  .  .  .  .  Comment: nil
    46  .  .  .  .  .  EndPos: -
    47  .  .  .  .  }
    48  .  .  .  .  3: *ast.ImportSpec {
    49  .  .  .  .  .  Doc: nil
    50  .  .  .  .  .  Name: nil
    51  .  .  .  .  .  Path: *ast.BasicLit {
    52  .  .  .  .  .  .  ValuePos: example.go:7:2
    53  .  .  .  .  .  .  Kind: STRING
    54  .  .  .  .  .  .  Value: "\"time\""
    55  .  .  .  .  .  }
    56  .  .  .  .  .  Comment: nil
    57  .  .  .  .  .  EndPos: -
    58  .  .  .  .  }
    59  .  .  .  }
    60  .  .  .  Rparen: example.go:8:1
    61  .  .  }
    62  .  .  1: *ast.GenDecl {
    63  .  .  .  Doc: nil
    64  .  .  .  TokPos: example.go:10:1
    65  .  .  .  Tok: type
    66  .  .  .  Lparen: -
    67  .  .  .  Specs: []ast.Spec (len = 1) {
    68  .  .  .  .  0: *ast.TypeSpec {
    69  .  .  .  .  .  Doc: nil
    70  .  .  .  .  .  Name: *ast.Ident {
    71  .  .  .  .  .  .  NamePos: example.go:10:6
    72  .  .  .  .  .  .  Name: "TestType"
    73  .  .  .  .  .  .  Obj: *ast.Object {
    74  .  .  .  .  .  .  .  Kind: type
    75  .  .  .  .  .  .  .  Name: "TestType"
    76  .  .  .  .  .  .  .  Decl: *(obj @ 68)
    77  .  .  .  .  .  .  .  Data: nil
    78  .  .  .  .  .  .  .  Type: nil
    79  .  .  .  .  .  .  }
    80  .  .  .  .  .  }
    81  .  .  .  .  .  TypeParams: nil
    82  .  .  .  .  .  Assign: -
    83  .  .  .  .  .  Type: *ast.Ident {
    84  .  .  .  .  .  .  NamePos: example.go:10:15
    85  .  .  .  .  .  .  Name: "string"
    86  .  .  .  .  .  .  Obj: nil
    87  .  .  .  .  .  }
    88  .  .  .  .  .  Comment: nil
    89  .  .  .  .  }
    90  .  .  .  }
    91  .  .  .  Rparen: -
    92  .  .  }
    93  .  .  2: *ast.GenDecl {
    94  .  .  .  Doc: nil
    95  .  .  .  TokPos: example.go:12:1
    96  .  .  .  Tok: type
    97  .  .  .  Lparen: -
    98  .  .  .  Specs: []ast.Spec (len = 1) {
    99  .  .  .  .  0: *ast.TypeSpec {
   100  .  .  .  .  .  Doc: nil
   101  .  .  .  .  .  Name: *ast.Ident {
   102  .  .  .  .  .  .  NamePos: example.go:12:6
   103  .  .  .  .  .  .  Name: "TypeTestType"
   104  .  .  .  .  .  .  Obj: *ast.Object {
   105  .  .  .  .  .  .  .  Kind: type
   106  .  .  .  .  .  .  .  Name: "TypeTestType"
   107  .  .  .  .  .  .  .  Decl: *(obj @ 99)
   108  .  .  .  .  .  .  .  Data: nil
   109  .  .  .  .  .  .  .  Type: nil
   110  .  .  .  .  .  .  }
   111  .  .  .  .  .  }
   112  .  .  .  .  .  TypeParams: nil
   113  .  .  .  .  .  Assign: -
   114  .  .  .  .  .  Type: *ast.Ident {
   115  .  .  .  .  .  .  NamePos: example.go:12:19
   116  .  .  .  .  .  .  Name: "TestType"
   117  .  .  .  .  .  .  Obj: *(obj @ 73)
   118  .  .  .  .  .  }
   119  .  .  .  .  .  Comment: nil
   120  .  .  .  .  }
   121  .  .  .  }
   122  .  .  .  Rparen: -
   123  .  .  }
   124  .  .  3: *ast.GenDecl {
   125  .  .  .  Doc: nil
   126  .  .  .  TokPos: example.go:14:1
   127  .  .  .  Tok: type
   128  .  .  .  Lparen: -
   129  .  .  .  Specs: []ast.Spec (len = 1) {
   130  .  .  .  .  0: *ast.TypeSpec {
   131  .  .  .  .  .  Doc: nil
   132  .  .  .  .  .  Name: *ast.Ident {
   133  .  .  .  .  .  .  NamePos: example.go:14:6
   134  .  .  .  .  .  .  Name: "MyInteger"
   135  .  .  .  .  .  .  Obj: *ast.Object {
   136  .  .  .  .  .  .  .  Kind: type
   137  .  .  .  .  .  .  .  Name: "MyInteger"
   138  .  .  .  .  .  .  .  Decl: *(obj @ 130)
   139  .  .  .  .  .  .  .  Data: nil
   140  .  .  .  .  .  .  .  Type: nil
   141  .  .  .  .  .  .  }
   142  .  .  .  .  .  }
   143  .  .  .  .  .  TypeParams: nil
   144  .  .  .  .  .  Assign: -
   145  .  .  .  .  .  Type: *ast.SelectorExpr {
   146  .  .  .  .  .  .  X: *ast.Ident {
   147  .  .  .  .  .  .  .  NamePos: example.go:14:16
   148  .  .  .  .  .  .  .  Name: "model"
   149  .  .  .  .  .  .  .  Obj: nil
   150  .  .  .  .  .  .  }
   151  .  .  .  .  .  .  Sel: *ast.Ident {
   152  .  .  .  .  .  .  .  NamePos: example.go:14:22
   153  .  .  .  .  .  .  .  Name: "Integer"
   154  .  .  .  .  .  .  .  Obj: nil
   155  .  .  .  .  .  .  }
   156  .  .  .  .  .  }
   157  .  .  .  .  .  Comment: nil
   158  .  .  .  .  }
   159  .  .  .  }
   160  .  .  .  Rparen: -
   161  .  .  }
   162  .  .  4: *ast.GenDecl {
   163  .  .  .  Doc: nil
   164  .  .  .  TokPos: example.go:16:1
   165  .  .  .  Tok: type
   166  .  .  .  Lparen: -
   167  .  .  .  Specs: []ast.Spec (len = 1) {
   168  .  .  .  .  0: *ast.TypeSpec {
   169  .  .  .  .  .  Doc: nil
   170  .  .  .  .  .  Name: *ast.Ident {
   171  .  .  .  .  .  .  NamePos: example.go:16:6
   172  .  .  .  .  .  .  Name: "MyIntegerPointer"
   173  .  .  .  .  .  .  Obj: *ast.Object {
   174  .  .  .  .  .  .  .  Kind: type
   175  .  .  .  .  .  .  .  Name: "MyIntegerPointer"
   176  .  .  .  .  .  .  .  Decl: *(obj @ 168)
   177  .  .  .  .  .  .  .  Data: nil
   178  .  .  .  .  .  .  .  Type: nil
   179  .  .  .  .  .  .  }
   180  .  .  .  .  .  }
   181  .  .  .  .  .  TypeParams: nil
   182  .  .  .  .  .  Assign: -
   183  .  .  .  .  .  Type: *ast.StarExpr {
   184  .  .  .  .  .  .  Star: example.go:16:23
   185  .  .  .  .  .  .  X: *ast.SelectorExpr {
   186  .  .  .  .  .  .  .  X: *ast.Ident {
   187  .  .  .  .  .  .  .  .  NamePos: example.go:16:24
   188  .  .  .  .  .  .  .  .  Name: "model"
   189  .  .  .  .  .  .  .  .  Obj: nil
   190  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  Sel: *ast.Ident {
   192  .  .  .  .  .  .  .  .  NamePos: example.go:16:30
   193  .  .  .  .  .  .  .  .  Name: "Integer"
   194  .  .  .  .  .  .  .  .  Obj: nil
   195  .  .  .  .  .  .  .  }
   196  .  .  .  .  .  .  }
   197  .  .  .  .  .  }
   198  .  .  .  .  .  Comment: nil
   199  .  .  .  .  }
   200  .  .  .  }
   201  .  .  .  Rparen: -
   202  .  .  }
   203  .  .  5: *ast.GenDecl {
   204  .  .  .  Doc: nil
   205  .  .  .  TokPos: example.go:18:1
   206  .  .  .  Tok: type
   207  .  .  .  Lparen: -
   208  .  .  .  Specs: []ast.Spec (len = 1) {
   209  .  .  .  .  0: *ast.TypeSpec {
   210  .  .  .  .  .  Doc: nil
   211  .  .  .  .  .  Name: *ast.Ident {
   212  .  .  .  .  .  .  NamePos: example.go:18:6
   213  .  .  .  .  .  .  Name: "OuterStruct"
   214  .  .  .  .  .  .  Obj: *ast.Object {
   215  .  .  .  .  .  .  .  Kind: type
   216  .  .  .  .  .  .  .  Name: "OuterStruct"
   217  .  .  .  .  .  .  .  Decl: *(obj @ 209)
   218  .  .  .  .  .  .  .  Data: nil
   219  .  .  .  .  .  .  .  Type: nil
   220  .  .  .  .  .  .  }
   221  .  .  .  .  .  }
   222  .  .  .  .  .  TypeParams: nil
   223  .  .  .  .  .  Assign: -
   224  .  .  .  .  .  Type: *ast.SelectorExpr {
   225  .  .  .  .  .  .  X: *ast.Ident {
   226  .  .  .  .  .  .  .  NamePos: example.go:18:18
   227  .  .  .  .  .  .  .  Name: "model"
   228  .  .  .  .  .  .  .  Obj: nil
   229  .  .  .  .  .  .  }
   230  .  .  .  .  .  .  Sel: *ast.Ident {
   231  .  .  .  .  .  .  .  NamePos: example.go:18:24
   232  .  .  .  .  .  .  .  Name: "Username"
   233  .  .  .  .  .  .  .  Obj: nil
   234  .  .  .  .  .  .  }
   235  .  .  .  .  .  }
   236  .  .  .  .  .  Comment: nil
   237  .  .  .  .  }
   238  .  .  .  }
   239  .  .  .  Rparen: -
   240  .  .  }
   241  .  .  6: *ast.GenDecl {
   242  .  .  .  Doc: nil
   243  .  .  .  TokPos: example.go:20:1
   244  .  .  .  Tok: type
   245  .  .  .  Lparen: -
   246  .  .  .  Specs: []ast.Spec (len = 1) {
   247  .  .  .  .  0: *ast.TypeSpec {
   248  .  .  .  .  .  Doc: nil
   249  .  .  .  .  .  Name: *ast.Ident {
   250  .  .  .  .  .  .  NamePos: example.go:20:6
   251  .  .  .  .  .  .  Name: "OuterStructPointer"
   252  .  .  .  .  .  .  Obj: *ast.Object {
   253  .  .  .  .  .  .  .  Kind: type
   254  .  .  .  .  .  .  .  Name: "OuterStructPointer"
   255  .  .  .  .  .  .  .  Decl: *(obj @ 247)
   256  .  .  .  .  .  .  .  Data: nil
   257  .  .  .  .  .  .  .  Type: nil
   258  .  .  .  .  .  .  }
   259  .  .  .  .  .  }
   260  .  .  .  .  .  TypeParams: nil
   261  .  .  .  .  .  Assign: -
   262  .  .  .  .  .  Type: *ast.SelectorExpr {
   263  .  .  .  .  .  .  X: *ast.Ident {
   264  .  .  .  .  .  .  .  NamePos: example.go:20:25
   265  .  .  .  .  .  .  .  Name: "model"
   266  .  .  .  .  .  .  .  Obj: nil
   267  .  .  .  .  .  .  }
   268  .  .  .  .  .  .  Sel: *ast.Ident {
   269  .  .  .  .  .  .  .  NamePos: example.go:20:31
   270  .  .  .  .  .  .  .  Name: "Username"
   271  .  .  .  .  .  .  .  Obj: nil
   272  .  .  .  .  .  .  }
   273  .  .  .  .  .  }
   274  .  .  .  .  .  Comment: nil
   275  .  .  .  .  }
   276  .  .  .  }
   277  .  .  .  Rparen: -
   278  .  .  }
   279  .  .  7: *ast.GenDecl {
   280  .  .  .  Doc: nil
   281  .  .  .  TokPos: example.go:22:1
   282  .  .  .  Tok: type
   283  .  .  .  Lparen: -
   284  .  .  .  Specs: []ast.Spec (len = 1) {
   285  .  .  .  .  0: *ast.TypeSpec {
   286  .  .  .  .  .  Doc: nil
   287  .  .  .  .  .  Name: *ast.Ident {
   288  .  .  .  .  .  .  NamePos: example.go:22:6
   289  .  .  .  .  .  .  Name: "St"
   290  .  .  .  .  .  .  Obj: *ast.Object {
   291  .  .  .  .  .  .  .  Kind: type
   292  .  .  .  .  .  .  .  Name: "St"
   293  .  .  .  .  .  .  .  Decl: *(obj @ 285)
   294  .  .  .  .  .  .  .  Data: nil
   295  .  .  .  .  .  .  .  Type: nil
   296  .  .  .  .  .  .  }
   297  .  .  .  .  .  }
   298  .  .  .  .  .  TypeParams: nil
   299  .  .  .  .  .  Assign: -
   300  .  .  .  .  .  Type: *ast.StructType {
   301  .  .  .  .  .  .  Struct: example.go:22:9
   302  .  .  .  .  .  .  Fields: *ast.FieldList {
   303  .  .  .  .  .  .  .  Opening: example.go:22:16
   304  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   305  .  .  .  .  .  .  .  .  0: *ast.Field {
   306  .  .  .  .  .  .  .  .  .  Doc: nil
   307  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   308  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   309  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:23:2
   310  .  .  .  .  .  .  .  .  .  .  .  Name: "XXX"
   311  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   312  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   313  .  .  .  .  .  .  .  .  .  .  .  .  Name: "XXX"
   314  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 305)
   315  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   316  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   317  .  .  .  .  .  .  .  .  .  .  .  }
   318  .  .  .  .  .  .  .  .  .  .  }
   319  .  .  .  .  .  .  .  .  .  }
   320  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   321  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:23:6
   322  .  .  .  .  .  .  .  .  .  .  Name: "string"
   323  .  .  .  .  .  .  .  .  .  .  Obj: nil
   324  .  .  .  .  .  .  .  .  .  }
   325  .  .  .  .  .  .  .  .  .  Tag: nil
   326  .  .  .  .  .  .  .  .  .  Comment: nil
   327  .  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  .  }
   329  .  .  .  .  .  .  .  Closing: example.go:24:1
   330  .  .  .  .  .  .  }
   331  .  .  .  .  .  .  Incomplete: false
   332  .  .  .  .  .  }
   333  .  .  .  .  .  Comment: nil
   334  .  .  .  .  }
   335  .  .  .  }
   336  .  .  .  Rparen: -
   337  .  .  }
   338  .  .  8: *ast.GenDecl {
   339  .  .  .  Doc: nil
   340  .  .  .  TokPos: example.go:26:1
   341  .  .  .  Tok: type
   342  .  .  .  Lparen: -
   343  .  .  .  Specs: []ast.Spec (len = 1) {
   344  .  .  .  .  0: *ast.TypeSpec {
   345  .  .  .  .  .  Doc: nil
   346  .  .  .  .  .  Name: *ast.Ident {
   347  .  .  .  .  .  .  NamePos: example.go:26:6
   348  .  .  .  .  .  .  Name: "Interface"
   349  .  .  .  .  .  .  Obj: *ast.Object {
   350  .  .  .  .  .  .  .  Kind: type
   351  .  .  .  .  .  .  .  Name: "Interface"
   352  .  .  .  .  .  .  .  Decl: *(obj @ 344)
   353  .  .  .  .  .  .  .  Data: nil
   354  .  .  .  .  .  .  .  Type: nil
   355  .  .  .  .  .  .  }
   356  .  .  .  .  .  }
   357  .  .  .  .  .  TypeParams: nil
   358  .  .  .  .  .  Assign: -
   359  .  .  .  .  .  Type: *ast.InterfaceType {
   360  .  .  .  .  .  .  Interface: example.go:26:16
   361  .  .  .  .  .  .  Methods: *ast.FieldList {
   362  .  .  .  .  .  .  .  Opening: example.go:26:26
   363  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   364  .  .  .  .  .  .  .  .  0: *ast.Field {
   365  .  .  .  .  .  .  .  .  .  Doc: nil
   366  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   367  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   368  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:27:2
   369  .  .  .  .  .  .  .  .  .  .  .  Name: "AAA"
   370  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   371  .  .  .  .  .  .  .  .  .  .  .  .  Kind: func
   372  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AAA"
   373  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 364)
   374  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   375  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   376  .  .  .  .  .  .  .  .  .  .  .  }
   377  .  .  .  .  .  .  .  .  .  .  }
   378  .  .  .  .  .  .  .  .  .  }
   379  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   380  .  .  .  .  .  .  .  .  .  .  Func: -
   381  .  .  .  .  .  .  .  .  .  .  TypeParams: nil
   382  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   383  .  .  .  .  .  .  .  .  .  .  .  Opening: example.go:27:5
   384  .  .  .  .  .  .  .  .  .  .  .  List: nil
   385  .  .  .  .  .  .  .  .  .  .  .  Closing: example.go:27:6
   386  .  .  .  .  .  .  .  .  .  .  }
   387  .  .  .  .  .  .  .  .  .  .  Results: nil
   388  .  .  .  .  .  .  .  .  .  }
   389  .  .  .  .  .  .  .  .  .  Tag: nil
   390  .  .  .  .  .  .  .  .  .  Comment: nil
   391  .  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  .  }
   393  .  .  .  .  .  .  .  Closing: example.go:28:1
   394  .  .  .  .  .  .  }
   395  .  .  .  .  .  .  Incomplete: false
   396  .  .  .  .  .  }
   397  .  .  .  .  .  Comment: nil
   398  .  .  .  .  }
   399  .  .  .  }
   400  .  .  .  Rparen: -
   401  .  .  }
   402  .  .  9: *ast.GenDecl {
   403  .  .  .  Doc: nil
   404  .  .  .  TokPos: example.go:30:1
   405  .  .  .  Tok: type
   406  .  .  .  Lparen: -
   407  .  .  .  Specs: []ast.Spec (len = 1) {
   408  .  .  .  .  0: *ast.TypeSpec {
   409  .  .  .  .  .  Doc: nil
   410  .  .  .  .  .  Name: *ast.Ident {
   411  .  .  .  .  .  .  NamePos: example.go:30:6
   412  .  .  .  .  .  .  Name: "UserProto"
   413  .  .  .  .  .  .  Obj: *ast.Object {
   414  .  .  .  .  .  .  .  Kind: type
   415  .  .  .  .  .  .  .  Name: "UserProto"
   416  .  .  .  .  .  .  .  Decl: *(obj @ 408)
   417  .  .  .  .  .  .  .  Data: nil
   418  .  .  .  .  .  .  .  Type: nil
   419  .  .  .  .  .  .  }
   420  .  .  .  .  .  }
   421  .  .  .  .  .  TypeParams: nil
   422  .  .  .  .  .  Assign: -
   423  .  .  .  .  .  Type: *ast.StructType {
   424  .  .  .  .  .  .  Struct: example.go:30:16
   425  .  .  .  .  .  .  Fields: *ast.FieldList {
   426  .  .  .  .  .  .  .  Opening: example.go:30:23
   427  .  .  .  .  .  .  .  List: []*ast.Field (len = 36) {
   428  .  .  .  .  .  .  .  .  0: *ast.Field {
   429  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   430  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   431  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   432  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:31:2
   433  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 基本类型"
   434  .  .  .  .  .  .  .  .  .  .  .  }
   435  .  .  .  .  .  .  .  .  .  .  }
   436  .  .  .  .  .  .  .  .  .  }
   437  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   438  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   439  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:32:2
   440  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
   441  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   442  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   443  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
   444  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 428)
   445  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   446  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   447  .  .  .  .  .  .  .  .  .  .  .  }
   448  .  .  .  .  .  .  .  .  .  .  }
   449  .  .  .  .  .  .  .  .  .  }
   450  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   451  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:32:5
   452  .  .  .  .  .  .  .  .  .  .  Name: "int"
   453  .  .  .  .  .  .  .  .  .  .  Obj: nil
   454  .  .  .  .  .  .  .  .  .  }
   455  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   456  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:32:9
   457  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   458  .  .  .  .  .  .  .  .  .  .  Value: "`stmapper:\"id\"`"
   459  .  .  .  .  .  .  .  .  .  }
   460  .  .  .  .  .  .  .  .  .  Comment: nil
   461  .  .  .  .  .  .  .  .  }
   462  .  .  .  .  .  .  .  .  1: *ast.Field {
   463  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   464  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   465  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   466  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:33:2
   467  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 基本类型指针"
   468  .  .  .  .  .  .  .  .  .  .  .  }
   469  .  .  .  .  .  .  .  .  .  .  }
   470  .  .  .  .  .  .  .  .  .  }
   471  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   472  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   473  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:34:2
   474  .  .  .  .  .  .  .  .  .  .  .  Name: "IdP"
   475  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   476  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   477  .  .  .  .  .  .  .  .  .  .  .  .  Name: "IdP"
   478  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 462)
   479  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   480  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   481  .  .  .  .  .  .  .  .  .  .  .  }
   482  .  .  .  .  .  .  .  .  .  .  }
   483  .  .  .  .  .  .  .  .  .  }
   484  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   485  .  .  .  .  .  .  .  .  .  .  Star: example.go:34:6
   486  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   487  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:34:7
   488  .  .  .  .  .  .  .  .  .  .  .  Name: "int"
   489  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   490  .  .  .  .  .  .  .  .  .  .  }
   491  .  .  .  .  .  .  .  .  .  }
   492  .  .  .  .  .  .  .  .  .  Tag: nil
   493  .  .  .  .  .  .  .  .  .  Comment: nil
   494  .  .  .  .  .  .  .  .  }
   495  .  .  .  .  .  .  .  .  2: *ast.Field {
   496  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   497  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   498  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   499  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:35:2
   500  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 底层是基本类型的自定义类型"
   501  .  .  .  .  .  .  .  .  .  .  .  }
   502  .  .  .  .  .  .  .  .  .  .  }
   503  .  .  .  .  .  .  .  .  .  }
   504  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   505  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   506  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:36:2
   507  .  .  .  .  .  .  .  .  .  .  .  Name: "A"
   508  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   509  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   510  .  .  .  .  .  .  .  .  .  .  .  .  Name: "A"
   511  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 495)
   512  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   513  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   514  .  .  .  .  .  .  .  .  .  .  .  }
   515  .  .  .  .  .  .  .  .  .  .  }
   516  .  .  .  .  .  .  .  .  .  }
   517  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   518  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:36:4
   519  .  .  .  .  .  .  .  .  .  .  Name: "TestType"
   520  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   521  .  .  .  .  .  .  .  .  .  }
   522  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   523  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:36:13
   524  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   525  .  .  .  .  .  .  .  .  .  .  Value: "`stmapper:\"a\"`"
   526  .  .  .  .  .  .  .  .  .  }
   527  .  .  .  .  .  .  .  .  .  Comment: nil
   528  .  .  .  .  .  .  .  .  }
   529  .  .  .  .  .  .  .  .  3: *ast.Field {
   530  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   531  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   532  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   533  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:37:2
   534  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 底层是基本类型的自定义类型指针"
   535  .  .  .  .  .  .  .  .  .  .  .  }
   536  .  .  .  .  .  .  .  .  .  .  }
   537  .  .  .  .  .  .  .  .  .  }
   538  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   539  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   540  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:38:2
   541  .  .  .  .  .  .  .  .  .  .  .  Name: "AA"
   542  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   543  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   544  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AA"
   545  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 529)
   546  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   547  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   548  .  .  .  .  .  .  .  .  .  .  .  }
   549  .  .  .  .  .  .  .  .  .  .  }
   550  .  .  .  .  .  .  .  .  .  }
   551  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   552  .  .  .  .  .  .  .  .  .  .  Star: example.go:38:5
   553  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   554  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:38:6
   555  .  .  .  .  .  .  .  .  .  .  .  Name: "TestType"
   556  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   557  .  .  .  .  .  .  .  .  .  .  }
   558  .  .  .  .  .  .  .  .  .  }
   559  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   560  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:38:15
   561  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   562  .  .  .  .  .  .  .  .  .  .  Value: "`stmapper:\"aa\"`"
   563  .  .  .  .  .  .  .  .  .  }
   564  .  .  .  .  .  .  .  .  .  Comment: nil
   565  .  .  .  .  .  .  .  .  }
   566  .  .  .  .  .  .  .  .  4: *ast.Field {
   567  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   568  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   569  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   570  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:39:2
   571  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 切片类型"
   572  .  .  .  .  .  .  .  .  .  .  .  }
   573  .  .  .  .  .  .  .  .  .  .  }
   574  .  .  .  .  .  .  .  .  .  }
   575  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   576  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   577  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:40:2
   578  .  .  .  .  .  .  .  .  .  .  .  Name: "AAA"
   579  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   580  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   581  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AAA"
   582  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 566)
   583  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   584  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   585  .  .  .  .  .  .  .  .  .  .  .  }
   586  .  .  .  .  .  .  .  .  .  .  }
   587  .  .  .  .  .  .  .  .  .  }
   588  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   589  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:40:6
   590  .  .  .  .  .  .  .  .  .  .  Len: nil
   591  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   592  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:40:8
   593  .  .  .  .  .  .  .  .  .  .  .  Name: "TestType"
   594  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   595  .  .  .  .  .  .  .  .  .  .  }
   596  .  .  .  .  .  .  .  .  .  }
   597  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   598  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:40:17
   599  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   600  .  .  .  .  .  .  .  .  .  .  Value: "`stmapper:\"aaa\"`"
   601  .  .  .  .  .  .  .  .  .  }
   602  .  .  .  .  .  .  .  .  .  Comment: nil
   603  .  .  .  .  .  .  .  .  }
   604  .  .  .  .  .  .  .  .  5: *ast.Field {
   605  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   606  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   607  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   608  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:41:2
   609  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为指针的切片"
   610  .  .  .  .  .  .  .  .  .  .  .  }
   611  .  .  .  .  .  .  .  .  .  .  }
   612  .  .  .  .  .  .  .  .  .  }
   613  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   614  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   615  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:42:2
   616  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAA"
   617  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   618  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   619  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAA"
   620  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 604)
   621  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   622  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   623  .  .  .  .  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  .  .  .  .  }
   625  .  .  .  .  .  .  .  .  .  }
   626  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   627  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:42:7
   628  .  .  .  .  .  .  .  .  .  .  Len: nil
   629  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   630  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:42:9
   631  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   632  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:42:10
   633  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TestType"
   634  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
   635  .  .  .  .  .  .  .  .  .  .  .  }
   636  .  .  .  .  .  .  .  .  .  .  }
   637  .  .  .  .  .  .  .  .  .  }
   638  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
   639  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:42:19
   640  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   641  .  .  .  .  .  .  .  .  .  .  Value: "`stmapper:\"aaaa\"`"
   642  .  .  .  .  .  .  .  .  .  }
   643  .  .  .  .  .  .  .  .  .  Comment: nil
   644  .  .  .  .  .  .  .  .  }
   645  .  .  .  .  .  .  .  .  6: *ast.Field {
   646  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   647  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   648  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   649  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:43:2
   650  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为空接口的切片"
   651  .  .  .  .  .  .  .  .  .  .  .  }
   652  .  .  .  .  .  .  .  .  .  .  }
   653  .  .  .  .  .  .  .  .  .  }
   654  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   655  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   656  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:44:2
   657  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAAA"
   658  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   659  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   660  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAAA"
   661  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 645)
   662  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   663  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   664  .  .  .  .  .  .  .  .  .  .  .  }
   665  .  .  .  .  .  .  .  .  .  .  }
   666  .  .  .  .  .  .  .  .  .  }
   667  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   668  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:44:8
   669  .  .  .  .  .  .  .  .  .  .  Len: nil
   670  .  .  .  .  .  .  .  .  .  .  Elt: *ast.InterfaceType {
   671  .  .  .  .  .  .  .  .  .  .  .  Interface: example.go:44:10
   672  .  .  .  .  .  .  .  .  .  .  .  Methods: *ast.FieldList {
   673  .  .  .  .  .  .  .  .  .  .  .  .  Opening: example.go:44:19
   674  .  .  .  .  .  .  .  .  .  .  .  .  List: nil
   675  .  .  .  .  .  .  .  .  .  .  .  .  Closing: example.go:44:20
   676  .  .  .  .  .  .  .  .  .  .  .  }
   677  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
   678  .  .  .  .  .  .  .  .  .  .  }
   679  .  .  .  .  .  .  .  .  .  }
   680  .  .  .  .  .  .  .  .  .  Tag: nil
   681  .  .  .  .  .  .  .  .  .  Comment: nil
   682  .  .  .  .  .  .  .  .  }
   683  .  .  .  .  .  .  .  .  7: *ast.Field {
   684  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   685  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   686  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   687  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:45:2
   688  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为空接口指针的切片"
   689  .  .  .  .  .  .  .  .  .  .  .  }
   690  .  .  .  .  .  .  .  .  .  .  }
   691  .  .  .  .  .  .  .  .  .  }
   692  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   693  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   694  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:46:2
   695  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAAAA"
   696  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   697  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   698  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAAAA"
   699  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 683)
   700  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   701  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   702  .  .  .  .  .  .  .  .  .  .  .  }
   703  .  .  .  .  .  .  .  .  .  .  }
   704  .  .  .  .  .  .  .  .  .  }
   705  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   706  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:46:9
   707  .  .  .  .  .  .  .  .  .  .  Len: nil
   708  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   709  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:46:11
   710  .  .  .  .  .  .  .  .  .  .  .  X: *ast.InterfaceType {
   711  .  .  .  .  .  .  .  .  .  .  .  .  Interface: example.go:46:12
   712  .  .  .  .  .  .  .  .  .  .  .  .  Methods: *ast.FieldList {
   713  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: example.go:46:21
   714  .  .  .  .  .  .  .  .  .  .  .  .  .  List: nil
   715  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: example.go:46:22
   716  .  .  .  .  .  .  .  .  .  .  .  .  }
   717  .  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
   718  .  .  .  .  .  .  .  .  .  .  .  }
   719  .  .  .  .  .  .  .  .  .  .  }
   720  .  .  .  .  .  .  .  .  .  }
   721  .  .  .  .  .  .  .  .  .  Tag: nil
   722  .  .  .  .  .  .  .  .  .  Comment: nil
   723  .  .  .  .  .  .  .  .  }
   724  .  .  .  .  .  .  .  .  8: *ast.Field {
   725  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   726  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   727  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   728  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:47:2
   729  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为空接口别名的切片"
   730  .  .  .  .  .  .  .  .  .  .  .  }
   731  .  .  .  .  .  .  .  .  .  .  }
   732  .  .  .  .  .  .  .  .  .  }
   733  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   734  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   735  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:2
   736  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAAAAA"
   737  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   738  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   739  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAAAAA"
   740  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 724)
   741  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   742  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   743  .  .  .  .  .  .  .  .  .  .  .  }
   744  .  .  .  .  .  .  .  .  .  .  }
   745  .  .  .  .  .  .  .  .  .  }
   746  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   747  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:48:10
   748  .  .  .  .  .  .  .  .  .  .  Len: nil
   749  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   750  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:48:12
   751  .  .  .  .  .  .  .  .  .  .  .  Name: "any"
   752  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   753  .  .  .  .  .  .  .  .  .  .  }
   754  .  .  .  .  .  .  .  .  .  }
   755  .  .  .  .  .  .  .  .  .  Tag: nil
   756  .  .  .  .  .  .  .  .  .  Comment: nil
   757  .  .  .  .  .  .  .  .  }
   758  .  .  .  .  .  .  .  .  9: *ast.Field {
   759  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   760  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   761  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   762  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:49:2
   763  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为空接口别名指针的切片"
   764  .  .  .  .  .  .  .  .  .  .  .  }
   765  .  .  .  .  .  .  .  .  .  .  }
   766  .  .  .  .  .  .  .  .  .  }
   767  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   768  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   769  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:50:2
   770  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAAAAAA"
   771  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   772  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   773  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AAAAAAAA"
   774  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 758)
   775  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   776  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   777  .  .  .  .  .  .  .  .  .  .  .  }
   778  .  .  .  .  .  .  .  .  .  .  }
   779  .  .  .  .  .  .  .  .  .  }
   780  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   781  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:50:11
   782  .  .  .  .  .  .  .  .  .  .  Len: nil
   783  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   784  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:50:13
   785  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   786  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:50:14
   787  .  .  .  .  .  .  .  .  .  .  .  .  Name: "any"
   788  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   789  .  .  .  .  .  .  .  .  .  .  .  }
   790  .  .  .  .  .  .  .  .  .  .  }
   791  .  .  .  .  .  .  .  .  .  }
   792  .  .  .  .  .  .  .  .  .  Tag: nil
   793  .  .  .  .  .  .  .  .  .  Comment: nil
   794  .  .  .  .  .  .  .  .  }
   795  .  .  .  .  .  .  .  .  10: *ast.Field {
   796  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   797  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   798  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   799  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:51:2
   800  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 结构体类型"
   801  .  .  .  .  .  .  .  .  .  .  .  }
   802  .  .  .  .  .  .  .  .  .  .  }
   803  .  .  .  .  .  .  .  .  .  }
   804  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   805  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   806  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:52:2
   807  .  .  .  .  .  .  .  .  .  .  .  Name: "B"
   808  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   809  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   810  .  .  .  .  .  .  .  .  .  .  .  .  Name: "B"
   811  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 795)
   812  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   813  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   814  .  .  .  .  .  .  .  .  .  .  .  }
   815  .  .  .  .  .  .  .  .  .  .  }
   816  .  .  .  .  .  .  .  .  .  }
   817  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   818  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:52:4
   819  .  .  .  .  .  .  .  .  .  .  Name: "St"
   820  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 290)
   821  .  .  .  .  .  .  .  .  .  }
   822  .  .  .  .  .  .  .  .  .  Tag: nil
   823  .  .  .  .  .  .  .  .  .  Comment: nil
   824  .  .  .  .  .  .  .  .  }
   825  .  .  .  .  .  .  .  .  11: *ast.Field {
   826  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   827  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   828  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   829  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:53:2
   830  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 结构体类型指针"
   831  .  .  .  .  .  .  .  .  .  .  .  }
   832  .  .  .  .  .  .  .  .  .  .  }
   833  .  .  .  .  .  .  .  .  .  }
   834  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   835  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   836  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:54:2
   837  .  .  .  .  .  .  .  .  .  .  .  Name: "C"
   838  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   839  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   840  .  .  .  .  .  .  .  .  .  .  .  .  Name: "C"
   841  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 825)
   842  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   843  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   844  .  .  .  .  .  .  .  .  .  .  .  }
   845  .  .  .  .  .  .  .  .  .  .  }
   846  .  .  .  .  .  .  .  .  .  }
   847  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   848  .  .  .  .  .  .  .  .  .  .  Star: example.go:54:4
   849  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   850  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:54:5
   851  .  .  .  .  .  .  .  .  .  .  .  Name: "St"
   852  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 290)
   853  .  .  .  .  .  .  .  .  .  .  }
   854  .  .  .  .  .  .  .  .  .  }
   855  .  .  .  .  .  .  .  .  .  Tag: nil
   856  .  .  .  .  .  .  .  .  .  Comment: nil
   857  .  .  .  .  .  .  .  .  }
   858  .  .  .  .  .  .  .  .  12: *ast.Field {
   859  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   860  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   861  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   862  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:55:2
   863  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为基本类型的切片"
   864  .  .  .  .  .  .  .  .  .  .  .  }
   865  .  .  .  .  .  .  .  .  .  .  }
   866  .  .  .  .  .  .  .  .  .  }
   867  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   868  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   869  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:56:2
   870  .  .  .  .  .  .  .  .  .  .  .  Name: "D"
   871  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   872  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   873  .  .  .  .  .  .  .  .  .  .  .  .  Name: "D"
   874  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 858)
   875  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   876  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   877  .  .  .  .  .  .  .  .  .  .  .  }
   878  .  .  .  .  .  .  .  .  .  .  }
   879  .  .  .  .  .  .  .  .  .  }
   880  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   881  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:56:4
   882  .  .  .  .  .  .  .  .  .  .  Len: nil
   883  .  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   884  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:56:6
   885  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   886  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   887  .  .  .  .  .  .  .  .  .  .  }
   888  .  .  .  .  .  .  .  .  .  }
   889  .  .  .  .  .  .  .  .  .  Tag: nil
   890  .  .  .  .  .  .  .  .  .  Comment: nil
   891  .  .  .  .  .  .  .  .  }
   892  .  .  .  .  .  .  .  .  13: *ast.Field {
   893  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   894  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   895  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   896  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:57:2
   897  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为基本类型指针的切片"
   898  .  .  .  .  .  .  .  .  .  .  .  }
   899  .  .  .  .  .  .  .  .  .  .  }
   900  .  .  .  .  .  .  .  .  .  }
   901  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   902  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   903  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:58:2
   904  .  .  .  .  .  .  .  .  .  .  .  Name: "E"
   905  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   906  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   907  .  .  .  .  .  .  .  .  .  .  .  .  Name: "E"
   908  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 892)
   909  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   910  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   911  .  .  .  .  .  .  .  .  .  .  .  }
   912  .  .  .  .  .  .  .  .  .  .  }
   913  .  .  .  .  .  .  .  .  .  }
   914  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   915  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:58:4
   916  .  .  .  .  .  .  .  .  .  .  Len: nil
   917  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
   918  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:58:6
   919  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   920  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:58:7
   921  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   922  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   923  .  .  .  .  .  .  .  .  .  .  .  }
   924  .  .  .  .  .  .  .  .  .  .  }
   925  .  .  .  .  .  .  .  .  .  }
   926  .  .  .  .  .  .  .  .  .  Tag: nil
   927  .  .  .  .  .  .  .  .  .  Comment: nil
   928  .  .  .  .  .  .  .  .  }
   929  .  .  .  .  .  .  .  .  14: *ast.Field {
   930  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   931  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   932  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   933  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:59:2
   934  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 外部结构体类型"
   935  .  .  .  .  .  .  .  .  .  .  .  }
   936  .  .  .  .  .  .  .  .  .  .  }
   937  .  .  .  .  .  .  .  .  .  }
   938  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   939  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   940  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:60:2
   941  .  .  .  .  .  .  .  .  .  .  .  Name: "F"
   942  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   943  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   944  .  .  .  .  .  .  .  .  .  .  .  .  Name: "F"
   945  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 929)
   946  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   947  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   948  .  .  .  .  .  .  .  .  .  .  .  }
   949  .  .  .  .  .  .  .  .  .  .  }
   950  .  .  .  .  .  .  .  .  .  }
   951  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   952  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   953  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:60:4
   954  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
   955  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   956  .  .  .  .  .  .  .  .  .  .  }
   957  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   958  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:60:10
   959  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
   960  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   961  .  .  .  .  .  .  .  .  .  .  }
   962  .  .  .  .  .  .  .  .  .  }
   963  .  .  .  .  .  .  .  .  .  Tag: nil
   964  .  .  .  .  .  .  .  .  .  Comment: nil
   965  .  .  .  .  .  .  .  .  }
   966  .  .  .  .  .  .  .  .  15: *ast.Field {
   967  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   968  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
   969  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   970  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:61:2
   971  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 外部结构体指针类型"
   972  .  .  .  .  .  .  .  .  .  .  .  }
   973  .  .  .  .  .  .  .  .  .  .  }
   974  .  .  .  .  .  .  .  .  .  }
   975  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   976  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   977  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:62:2
   978  .  .  .  .  .  .  .  .  .  .  .  Name: "G"
   979  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   980  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   981  .  .  .  .  .  .  .  .  .  .  .  .  Name: "G"
   982  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 966)
   983  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   984  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   985  .  .  .  .  .  .  .  .  .  .  .  }
   986  .  .  .  .  .  .  .  .  .  .  }
   987  .  .  .  .  .  .  .  .  .  }
   988  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   989  .  .  .  .  .  .  .  .  .  .  Star: example.go:62:4
   990  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   991  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   992  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:62:5
   993  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
   994  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   995  .  .  .  .  .  .  .  .  .  .  .  }
   996  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   997  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:62:11
   998  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
   999  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1000  .  .  .  .  .  .  .  .  .  .  .  }
  1001  .  .  .  .  .  .  .  .  .  .  }
  1002  .  .  .  .  .  .  .  .  .  }
  1003  .  .  .  .  .  .  .  .  .  Tag: nil
  1004  .  .  .  .  .  .  .  .  .  Comment: nil
  1005  .  .  .  .  .  .  .  .  }
  1006  .  .  .  .  .  .  .  .  16: *ast.Field {
  1007  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1008  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1009  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1010  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:63:2
  1011  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为外部结构体的切片"
  1012  .  .  .  .  .  .  .  .  .  .  .  }
  1013  .  .  .  .  .  .  .  .  .  .  }
  1014  .  .  .  .  .  .  .  .  .  }
  1015  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1016  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1017  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:64:2
  1018  .  .  .  .  .  .  .  .  .  .  .  Name: "H"
  1019  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1020  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1021  .  .  .  .  .  .  .  .  .  .  .  .  Name: "H"
  1022  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1006)
  1023  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1024  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1025  .  .  .  .  .  .  .  .  .  .  .  }
  1026  .  .  .  .  .  .  .  .  .  .  }
  1027  .  .  .  .  .  .  .  .  .  }
  1028  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  1029  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:64:4
  1030  .  .  .  .  .  .  .  .  .  .  Len: nil
  1031  .  .  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
  1032  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1033  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:64:6
  1034  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1035  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1036  .  .  .  .  .  .  .  .  .  .  .  }
  1037  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1038  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:64:12
  1039  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
  1040  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1041  .  .  .  .  .  .  .  .  .  .  .  }
  1042  .  .  .  .  .  .  .  .  .  .  }
  1043  .  .  .  .  .  .  .  .  .  }
  1044  .  .  .  .  .  .  .  .  .  Tag: nil
  1045  .  .  .  .  .  .  .  .  .  Comment: nil
  1046  .  .  .  .  .  .  .  .  }
  1047  .  .  .  .  .  .  .  .  17: *ast.Field {
  1048  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1049  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1050  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1051  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:65:2
  1052  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 元素为外部结构体指针的切片"
  1053  .  .  .  .  .  .  .  .  .  .  .  }
  1054  .  .  .  .  .  .  .  .  .  .  }
  1055  .  .  .  .  .  .  .  .  .  }
  1056  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1057  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1058  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:66:2
  1059  .  .  .  .  .  .  .  .  .  .  .  Name: "I"
  1060  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1061  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1062  .  .  .  .  .  .  .  .  .  .  .  .  Name: "I"
  1063  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1047)
  1064  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1065  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1066  .  .  .  .  .  .  .  .  .  .  .  }
  1067  .  .  .  .  .  .  .  .  .  .  }
  1068  .  .  .  .  .  .  .  .  .  }
  1069  .  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  1070  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:66:4
  1071  .  .  .  .  .  .  .  .  .  .  Len: nil
  1072  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  1073  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:66:6
  1074  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1075  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1076  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:66:7
  1077  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1078  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1079  .  .  .  .  .  .  .  .  .  .  .  .  }
  1080  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1081  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:66:13
  1082  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
  1083  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1084  .  .  .  .  .  .  .  .  .  .  .  .  }
  1085  .  .  .  .  .  .  .  .  .  .  .  }
  1086  .  .  .  .  .  .  .  .  .  .  }
  1087  .  .  .  .  .  .  .  .  .  }
  1088  .  .  .  .  .  .  .  .  .  Tag: nil
  1089  .  .  .  .  .  .  .  .  .  Comment: nil
  1090  .  .  .  .  .  .  .  .  }
  1091  .  .  .  .  .  .  .  .  18: *ast.Field {
  1092  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1093  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1094  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1095  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:67:2
  1096  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 空接口"
  1097  .  .  .  .  .  .  .  .  .  .  .  }
  1098  .  .  .  .  .  .  .  .  .  .  }
  1099  .  .  .  .  .  .  .  .  .  }
  1100  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1101  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1102  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:68:2
  1103  .  .  .  .  .  .  .  .  .  .  .  Name: "J"
  1104  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1105  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1106  .  .  .  .  .  .  .  .  .  .  .  .  Name: "J"
  1107  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1091)
  1108  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1109  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1110  .  .  .  .  .  .  .  .  .  .  .  }
  1111  .  .  .  .  .  .  .  .  .  .  }
  1112  .  .  .  .  .  .  .  .  .  }
  1113  .  .  .  .  .  .  .  .  .  Type: *ast.InterfaceType {
  1114  .  .  .  .  .  .  .  .  .  .  Interface: example.go:68:4
  1115  .  .  .  .  .  .  .  .  .  .  Methods: *ast.FieldList {
  1116  .  .  .  .  .  .  .  .  .  .  .  Opening: example.go:68:13
  1117  .  .  .  .  .  .  .  .  .  .  .  List: nil
  1118  .  .  .  .  .  .  .  .  .  .  .  Closing: example.go:68:14
  1119  .  .  .  .  .  .  .  .  .  .  }
  1120  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  1121  .  .  .  .  .  .  .  .  .  }
  1122  .  .  .  .  .  .  .  .  .  Tag: nil
  1123  .  .  .  .  .  .  .  .  .  Comment: nil
  1124  .  .  .  .  .  .  .  .  }
  1125  .  .  .  .  .  .  .  .  19: *ast.Field {
  1126  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1127  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1128  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1129  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:69:2
  1130  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 空接口指针"
  1131  .  .  .  .  .  .  .  .  .  .  .  }
  1132  .  .  .  .  .  .  .  .  .  .  }
  1133  .  .  .  .  .  .  .  .  .  }
  1134  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1135  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1136  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:70:2
  1137  .  .  .  .  .  .  .  .  .  .  .  Name: "K"
  1138  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1139  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1140  .  .  .  .  .  .  .  .  .  .  .  .  Name: "K"
  1141  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1125)
  1142  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1143  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1144  .  .  .  .  .  .  .  .  .  .  .  }
  1145  .  .  .  .  .  .  .  .  .  .  }
  1146  .  .  .  .  .  .  .  .  .  }
  1147  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1148  .  .  .  .  .  .  .  .  .  .  Star: example.go:70:4
  1149  .  .  .  .  .  .  .  .  .  .  X: *ast.InterfaceType {
  1150  .  .  .  .  .  .  .  .  .  .  .  Interface: example.go:70:5
  1151  .  .  .  .  .  .  .  .  .  .  .  Methods: *ast.FieldList {
  1152  .  .  .  .  .  .  .  .  .  .  .  .  Opening: example.go:70:14
  1153  .  .  .  .  .  .  .  .  .  .  .  .  List: nil
  1154  .  .  .  .  .  .  .  .  .  .  .  .  Closing: example.go:70:15
  1155  .  .  .  .  .  .  .  .  .  .  .  }
  1156  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  1157  .  .  .  .  .  .  .  .  .  .  }
  1158  .  .  .  .  .  .  .  .  .  }
  1159  .  .  .  .  .  .  .  .  .  Tag: nil
  1160  .  .  .  .  .  .  .  .  .  Comment: nil
  1161  .  .  .  .  .  .  .  .  }
  1162  .  .  .  .  .  .  .  .  20: *ast.Field {
  1163  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1164  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1165  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1166  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:71:2
  1167  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 空接口别名"
  1168  .  .  .  .  .  .  .  .  .  .  .  }
  1169  .  .  .  .  .  .  .  .  .  .  }
  1170  .  .  .  .  .  .  .  .  .  }
  1171  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1172  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1173  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:72:2
  1174  .  .  .  .  .  .  .  .  .  .  .  Name: "L"
  1175  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1176  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1177  .  .  .  .  .  .  .  .  .  .  .  .  Name: "L"
  1178  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1162)
  1179  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1180  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1181  .  .  .  .  .  .  .  .  .  .  .  }
  1182  .  .  .  .  .  .  .  .  .  .  }
  1183  .  .  .  .  .  .  .  .  .  }
  1184  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1185  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:72:4
  1186  .  .  .  .  .  .  .  .  .  .  Name: "any"
  1187  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1188  .  .  .  .  .  .  .  .  .  }
  1189  .  .  .  .  .  .  .  .  .  Tag: nil
  1190  .  .  .  .  .  .  .  .  .  Comment: nil
  1191  .  .  .  .  .  .  .  .  }
  1192  .  .  .  .  .  .  .  .  21: *ast.Field {
  1193  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1194  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1195  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1196  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:73:2
  1197  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 空接口别名指针"
  1198  .  .  .  .  .  .  .  .  .  .  .  }
  1199  .  .  .  .  .  .  .  .  .  .  }
  1200  .  .  .  .  .  .  .  .  .  }
  1201  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1202  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1203  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:74:2
  1204  .  .  .  .  .  .  .  .  .  .  .  Name: "M"
  1205  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1206  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1207  .  .  .  .  .  .  .  .  .  .  .  .  Name: "M"
  1208  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1192)
  1209  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1210  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1211  .  .  .  .  .  .  .  .  .  .  .  }
  1212  .  .  .  .  .  .  .  .  .  .  }
  1213  .  .  .  .  .  .  .  .  .  }
  1214  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1215  .  .  .  .  .  .  .  .  .  .  Star: example.go:74:4
  1216  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1217  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:74:5
  1218  .  .  .  .  .  .  .  .  .  .  .  Name: "any"
  1219  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1220  .  .  .  .  .  .  .  .  .  .  }
  1221  .  .  .  .  .  .  .  .  .  }
  1222  .  .  .  .  .  .  .  .  .  Tag: nil
  1223  .  .  .  .  .  .  .  .  .  Comment: nil
  1224  .  .  .  .  .  .  .  .  }
  1225  .  .  .  .  .  .  .  .  22: *ast.Field {
  1226  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1227  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1228  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1229  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:75:2
  1230  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 外部接口"
  1231  .  .  .  .  .  .  .  .  .  .  .  }
  1232  .  .  .  .  .  .  .  .  .  .  }
  1233  .  .  .  .  .  .  .  .  .  }
  1234  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1235  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1236  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:76:2
  1237  .  .  .  .  .  .  .  .  .  .  .  Name: "N"
  1238  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1239  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1240  .  .  .  .  .  .  .  .  .  .  .  .  Name: "N"
  1241  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1225)
  1242  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1243  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1244  .  .  .  .  .  .  .  .  .  .  .  }
  1245  .  .  .  .  .  .  .  .  .  .  }
  1246  .  .  .  .  .  .  .  .  .  }
  1247  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1248  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1249  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:76:4
  1250  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1251  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1252  .  .  .  .  .  .  .  .  .  .  }
  1253  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1254  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:76:8
  1255  .  .  .  .  .  .  .  .  .  .  .  Name: "Stringer"
  1256  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1257  .  .  .  .  .  .  .  .  .  .  }
  1258  .  .  .  .  .  .  .  .  .  }
  1259  .  .  .  .  .  .  .  .  .  Tag: nil
  1260  .  .  .  .  .  .  .  .  .  Comment: nil
  1261  .  .  .  .  .  .  .  .  }
  1262  .  .  .  .  .  .  .  .  23: *ast.Field {
  1263  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1264  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1265  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1266  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:77:2
  1267  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 外部接口指针"
  1268  .  .  .  .  .  .  .  .  .  .  .  }
  1269  .  .  .  .  .  .  .  .  .  .  }
  1270  .  .  .  .  .  .  .  .  .  }
  1271  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1272  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1273  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:78:2
  1274  .  .  .  .  .  .  .  .  .  .  .  Name: "O"
  1275  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1276  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1277  .  .  .  .  .  .  .  .  .  .  .  .  Name: "O"
  1278  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1262)
  1279  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1280  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1281  .  .  .  .  .  .  .  .  .  .  .  }
  1282  .  .  .  .  .  .  .  .  .  .  }
  1283  .  .  .  .  .  .  .  .  .  }
  1284  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1285  .  .  .  .  .  .  .  .  .  .  Star: example.go:78:4
  1286  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1287  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1288  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:78:5
  1289  .  .  .  .  .  .  .  .  .  .  .  .  Name: "fmt"
  1290  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1291  .  .  .  .  .  .  .  .  .  .  .  }
  1292  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1293  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:78:9
  1294  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stringer"
  1295  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1296  .  .  .  .  .  .  .  .  .  .  .  }
  1297  .  .  .  .  .  .  .  .  .  .  }
  1298  .  .  .  .  .  .  .  .  .  }
  1299  .  .  .  .  .  .  .  .  .  Tag: nil
  1300  .  .  .  .  .  .  .  .  .  Comment: nil
  1301  .  .  .  .  .  .  .  .  }
  1302  .  .  .  .  .  .  .  .  24: *ast.Field {
  1303  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1304  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1305  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1306  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:79:2
  1307  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 接口"
  1308  .  .  .  .  .  .  .  .  .  .  .  }
  1309  .  .  .  .  .  .  .  .  .  .  }
  1310  .  .  .  .  .  .  .  .  .  }
  1311  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1312  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1313  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:80:2
  1314  .  .  .  .  .  .  .  .  .  .  .  Name: "P"
  1315  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1316  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1317  .  .  .  .  .  .  .  .  .  .  .  .  Name: "P"
  1318  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1302)
  1319  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1320  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1321  .  .  .  .  .  .  .  .  .  .  .  }
  1322  .  .  .  .  .  .  .  .  .  .  }
  1323  .  .  .  .  .  .  .  .  .  }
  1324  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1325  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:80:4
  1326  .  .  .  .  .  .  .  .  .  .  Name: "Interface"
  1327  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 349)
  1328  .  .  .  .  .  .  .  .  .  }
  1329  .  .  .  .  .  .  .  .  .  Tag: nil
  1330  .  .  .  .  .  .  .  .  .  Comment: nil
  1331  .  .  .  .  .  .  .  .  }
  1332  .  .  .  .  .  .  .  .  25: *ast.Field {
  1333  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1334  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1335  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1336  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:81:2
  1337  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 接口指针"
  1338  .  .  .  .  .  .  .  .  .  .  .  }
  1339  .  .  .  .  .  .  .  .  .  .  }
  1340  .  .  .  .  .  .  .  .  .  }
  1341  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1342  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1343  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:82:2
  1344  .  .  .  .  .  .  .  .  .  .  .  Name: "Q"
  1345  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1346  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1347  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Q"
  1348  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1332)
  1349  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1350  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1351  .  .  .  .  .  .  .  .  .  .  .  }
  1352  .  .  .  .  .  .  .  .  .  .  }
  1353  .  .  .  .  .  .  .  .  .  }
  1354  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1355  .  .  .  .  .  .  .  .  .  .  Star: example.go:82:4
  1356  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1357  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:82:5
  1358  .  .  .  .  .  .  .  .  .  .  .  Name: "Interface"
  1359  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 349)
  1360  .  .  .  .  .  .  .  .  .  .  }
  1361  .  .  .  .  .  .  .  .  .  }
  1362  .  .  .  .  .  .  .  .  .  Tag: nil
  1363  .  .  .  .  .  .  .  .  .  Comment: nil
  1364  .  .  .  .  .  .  .  .  }
  1365  .  .  .  .  .  .  .  .  26: *ast.Field {
  1366  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1367  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1368  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1369  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:83:2
  1370  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 从外部类型定义的基本类型"
  1371  .  .  .  .  .  .  .  .  .  .  .  }
  1372  .  .  .  .  .  .  .  .  .  .  }
  1373  .  .  .  .  .  .  .  .  .  }
  1374  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1375  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1376  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:84:2
  1377  .  .  .  .  .  .  .  .  .  .  .  Name: "R"
  1378  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1379  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1380  .  .  .  .  .  .  .  .  .  .  .  .  Name: "R"
  1381  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1365)
  1382  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1383  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1384  .  .  .  .  .  .  .  .  .  .  .  }
  1385  .  .  .  .  .  .  .  .  .  .  }
  1386  .  .  .  .  .  .  .  .  .  }
  1387  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1388  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:84:4
  1389  .  .  .  .  .  .  .  .  .  .  Name: "MyInteger"
  1390  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 135)
  1391  .  .  .  .  .  .  .  .  .  }
  1392  .  .  .  .  .  .  .  .  .  Tag: nil
  1393  .  .  .  .  .  .  .  .  .  Comment: nil
  1394  .  .  .  .  .  .  .  .  }
  1395  .  .  .  .  .  .  .  .  27: *ast.Field {
  1396  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1397  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1398  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1399  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:85:2
  1400  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 从外部类型定义的基本类型指针"
  1401  .  .  .  .  .  .  .  .  .  .  .  }
  1402  .  .  .  .  .  .  .  .  .  .  }
  1403  .  .  .  .  .  .  .  .  .  }
  1404  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1405  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1406  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:86:2
  1407  .  .  .  .  .  .  .  .  .  .  .  Name: "S"
  1408  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1409  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1410  .  .  .  .  .  .  .  .  .  .  .  .  Name: "S"
  1411  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1395)
  1412  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1413  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1414  .  .  .  .  .  .  .  .  .  .  .  }
  1415  .  .  .  .  .  .  .  .  .  .  }
  1416  .  .  .  .  .  .  .  .  .  }
  1417  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1418  .  .  .  .  .  .  .  .  .  .  Star: example.go:86:4
  1419  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1420  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:86:5
  1421  .  .  .  .  .  .  .  .  .  .  .  Name: "MyInteger"
  1422  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 135)
  1423  .  .  .  .  .  .  .  .  .  .  }
  1424  .  .  .  .  .  .  .  .  .  }
  1425  .  .  .  .  .  .  .  .  .  Tag: nil
  1426  .  .  .  .  .  .  .  .  .  Comment: nil
  1427  .  .  .  .  .  .  .  .  }
  1428  .  .  .  .  .  .  .  .  28: *ast.Field {
  1429  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1430  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1431  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1432  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:87:2
  1433  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 从外部类型定义的指针基本类型"
  1434  .  .  .  .  .  .  .  .  .  .  .  }
  1435  .  .  .  .  .  .  .  .  .  .  }
  1436  .  .  .  .  .  .  .  .  .  }
  1437  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1438  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1439  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:88:2
  1440  .  .  .  .  .  .  .  .  .  .  .  Name: "T"
  1441  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1442  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1443  .  .  .  .  .  .  .  .  .  .  .  .  Name: "T"
  1444  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1428)
  1445  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1446  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1447  .  .  .  .  .  .  .  .  .  .  .  }
  1448  .  .  .  .  .  .  .  .  .  .  }
  1449  .  .  .  .  .  .  .  .  .  }
  1450  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1451  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:88:4
  1452  .  .  .  .  .  .  .  .  .  .  Name: "MyIntegerPointer"
  1453  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 173)
  1454  .  .  .  .  .  .  .  .  .  }
  1455  .  .  .  .  .  .  .  .  .  Tag: nil
  1456  .  .  .  .  .  .  .  .  .  Comment: nil
  1457  .  .  .  .  .  .  .  .  }
  1458  .  .  .  .  .  .  .  .  29: *ast.Field {
  1459  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1460  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1461  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1462  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:89:2
  1463  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 从外部类型定义的指针基本类型指针"
  1464  .  .  .  .  .  .  .  .  .  .  .  }
  1465  .  .  .  .  .  .  .  .  .  .  }
  1466  .  .  .  .  .  .  .  .  .  }
  1467  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1468  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1469  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:90:2
  1470  .  .  .  .  .  .  .  .  .  .  .  Name: "U"
  1471  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1472  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1473  .  .  .  .  .  .  .  .  .  .  .  .  Name: "U"
  1474  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1458)
  1475  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1476  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1477  .  .  .  .  .  .  .  .  .  .  .  }
  1478  .  .  .  .  .  .  .  .  .  .  }
  1479  .  .  .  .  .  .  .  .  .  }
  1480  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1481  .  .  .  .  .  .  .  .  .  .  Star: example.go:90:4
  1482  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1483  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:90:5
  1484  .  .  .  .  .  .  .  .  .  .  .  Name: "MyIntegerPointer"
  1485  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 173)
  1486  .  .  .  .  .  .  .  .  .  .  }
  1487  .  .  .  .  .  .  .  .  .  }
  1488  .  .  .  .  .  .  .  .  .  Tag: nil
  1489  .  .  .  .  .  .  .  .  .  Comment: nil
  1490  .  .  .  .  .  .  .  .  }
  1491  .  .  .  .  .  .  .  .  30: *ast.Field {
  1492  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1493  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1494  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1495  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:91:2
  1496  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 从外部结构体定义的类型"
  1497  .  .  .  .  .  .  .  .  .  .  .  }
  1498  .  .  .  .  .  .  .  .  .  .  }
  1499  .  .  .  .  .  .  .  .  .  }
  1500  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1501  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1502  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:92:2
  1503  .  .  .  .  .  .  .  .  .  .  .  Name: "V"
  1504  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1505  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1506  .  .  .  .  .  .  .  .  .  .  .  .  Name: "V"
  1507  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1491)
  1508  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1509  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1510  .  .  .  .  .  .  .  .  .  .  .  }
  1511  .  .  .  .  .  .  .  .  .  .  }
  1512  .  .  .  .  .  .  .  .  .  }
  1513  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1514  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:92:4
  1515  .  .  .  .  .  .  .  .  .  .  Name: "OuterStruct"
  1516  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
  1517  .  .  .  .  .  .  .  .  .  }
  1518  .  .  .  .  .  .  .  .  .  Tag: nil
  1519  .  .  .  .  .  .  .  .  .  Comment: nil
  1520  .  .  .  .  .  .  .  .  }
  1521  .  .  .  .  .  .  .  .  31: *ast.Field {
  1522  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1523  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1524  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1525  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:93:2
  1526  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 从外部结构体定义的类型指针"
  1527  .  .  .  .  .  .  .  .  .  .  .  }
  1528  .  .  .  .  .  .  .  .  .  .  }
  1529  .  .  .  .  .  .  .  .  .  }
  1530  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1531  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1532  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:94:2
  1533  .  .  .  .  .  .  .  .  .  .  .  Name: "W"
  1534  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1535  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1536  .  .  .  .  .  .  .  .  .  .  .  .  Name: "W"
  1537  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1521)
  1538  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1539  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1540  .  .  .  .  .  .  .  .  .  .  .  }
  1541  .  .  .  .  .  .  .  .  .  .  }
  1542  .  .  .  .  .  .  .  .  .  }
  1543  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1544  .  .  .  .  .  .  .  .  .  .  Star: example.go:94:4
  1545  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1546  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:94:5
  1547  .  .  .  .  .  .  .  .  .  .  .  Name: "OuterStruct"
  1548  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 214)
  1549  .  .  .  .  .  .  .  .  .  .  }
  1550  .  .  .  .  .  .  .  .  .  }
  1551  .  .  .  .  .  .  .  .  .  Tag: nil
  1552  .  .  .  .  .  .  .  .  .  Comment: nil
  1553  .  .  .  .  .  .  .  .  }
  1554  .  .  .  .  .  .  .  .  32: *ast.Field {
  1555  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1556  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1557  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1558  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:95:2
  1559  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 从外部结构体定义的指针类型"
  1560  .  .  .  .  .  .  .  .  .  .  .  }
  1561  .  .  .  .  .  .  .  .  .  .  }
  1562  .  .  .  .  .  .  .  .  .  }
  1563  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1564  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1565  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:96:2
  1566  .  .  .  .  .  .  .  .  .  .  .  Name: "X"
  1567  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1568  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1569  .  .  .  .  .  .  .  .  .  .  .  .  Name: "X"
  1570  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1554)
  1571  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1572  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1573  .  .  .  .  .  .  .  .  .  .  .  }
  1574  .  .  .  .  .  .  .  .  .  .  }
  1575  .  .  .  .  .  .  .  .  .  }
  1576  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1577  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:96:4
  1578  .  .  .  .  .  .  .  .  .  .  Name: "OuterStructPointer"
  1579  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 252)
  1580  .  .  .  .  .  .  .  .  .  }
  1581  .  .  .  .  .  .  .  .  .  Tag: nil
  1582  .  .  .  .  .  .  .  .  .  Comment: nil
  1583  .  .  .  .  .  .  .  .  }
  1584  .  .  .  .  .  .  .  .  33: *ast.Field {
  1585  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1586  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1587  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1588  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:97:2
  1589  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 从外部结构体定义的指针类型指针"
  1590  .  .  .  .  .  .  .  .  .  .  .  }
  1591  .  .  .  .  .  .  .  .  .  .  }
  1592  .  .  .  .  .  .  .  .  .  }
  1593  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1594  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1595  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:98:2
  1596  .  .  .  .  .  .  .  .  .  .  .  Name: "Y"
  1597  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1598  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1599  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Y"
  1600  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1584)
  1601  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1602  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1603  .  .  .  .  .  .  .  .  .  .  .  }
  1604  .  .  .  .  .  .  .  .  .  .  }
  1605  .  .  .  .  .  .  .  .  .  }
  1606  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1607  .  .  .  .  .  .  .  .  .  .  Star: example.go:98:4
  1608  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1609  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:98:5
  1610  .  .  .  .  .  .  .  .  .  .  .  Name: "OuterStructPointer"
  1611  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 252)
  1612  .  .  .  .  .  .  .  .  .  .  }
  1613  .  .  .  .  .  .  .  .  .  }
  1614  .  .  .  .  .  .  .  .  .  Tag: nil
  1615  .  .  .  .  .  .  .  .  .  Comment: nil
  1616  .  .  .  .  .  .  .  .  }
  1617  .  .  .  .  .  .  .  .  34: *ast.Field {
  1618  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
  1619  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 1) {
  1620  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
  1621  .  .  .  .  .  .  .  .  .  .  .  .  Slash: example.go:99:2
  1622  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// 时间类型"
  1623  .  .  .  .  .  .  .  .  .  .  .  }
  1624  .  .  .  .  .  .  .  .  .  .  }
  1625  .  .  .  .  .  .  .  .  .  }
  1626  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1627  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1628  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:100:2
  1629  .  .  .  .  .  .  .  .  .  .  .  Name: "TT"
  1630  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1631  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1632  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TT"
  1633  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1617)
  1634  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1635  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1636  .  .  .  .  .  .  .  .  .  .  .  }
  1637  .  .  .  .  .  .  .  .  .  .  }
  1638  .  .  .  .  .  .  .  .  .  }
  1639  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1640  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1641  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:100:6
  1642  .  .  .  .  .  .  .  .  .  .  .  Name: "time"
  1643  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1644  .  .  .  .  .  .  .  .  .  .  }
  1645  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1646  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:100:11
  1647  .  .  .  .  .  .  .  .  .  .  .  Name: "Time"
  1648  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1649  .  .  .  .  .  .  .  .  .  .  }
  1650  .  .  .  .  .  .  .  .  .  }
  1651  .  .  .  .  .  .  .  .  .  Tag: nil
  1652  .  .  .  .  .  .  .  .  .  Comment: nil
  1653  .  .  .  .  .  .  .  .  }
  1654  .  .  .  .  .  .  .  .  35: *ast.Field {
  1655  .  .  .  .  .  .  .  .  .  Doc: nil
  1656  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1657  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1658  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:101:2
  1659  .  .  .  .  .  .  .  .  .  .  .  Name: "TTT"
  1660  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1661  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1662  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TTT"
  1663  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1654)
  1664  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1665  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1666  .  .  .  .  .  .  .  .  .  .  .  }
  1667  .  .  .  .  .  .  .  .  .  .  }
  1668  .  .  .  .  .  .  .  .  .  }
  1669  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1670  .  .  .  .  .  .  .  .  .  .  Star: example.go:101:6
  1671  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1672  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1673  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:101:7
  1674  .  .  .  .  .  .  .  .  .  .  .  .  Name: "time"
  1675  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1676  .  .  .  .  .  .  .  .  .  .  .  }
  1677  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1678  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:101:12
  1679  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Time"
  1680  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1681  .  .  .  .  .  .  .  .  .  .  .  }
  1682  .  .  .  .  .  .  .  .  .  .  }
  1683  .  .  .  .  .  .  .  .  .  }
  1684  .  .  .  .  .  .  .  .  .  Tag: nil
  1685  .  .  .  .  .  .  .  .  .  Comment: nil
  1686  .  .  .  .  .  .  .  .  }
  1687  .  .  .  .  .  .  .  }
  1688  .  .  .  .  .  .  .  Closing: example.go:102:1
  1689  .  .  .  .  .  .  }
  1690  .  .  .  .  .  .  Incomplete: false
  1691  .  .  .  .  .  }
  1692  .  .  .  .  .  Comment: nil
  1693  .  .  .  .  }
  1694  .  .  .  }
  1695  .  .  .  Rparen: -
  1696  .  .  }
  1697  .  .  10: *ast.GenDecl {
  1698  .  .  .  Doc: nil
  1699  .  .  .  TokPos: example.go:104:1
  1700  .  .  .  Tok: type
  1701  .  .  .  Lparen: -
  1702  .  .  .  Specs: []ast.Spec (len = 1) {
  1703  .  .  .  .  0: *ast.TypeSpec {
  1704  .  .  .  .  .  Doc: nil
  1705  .  .  .  .  .  Name: *ast.Ident {
  1706  .  .  .  .  .  .  NamePos: example.go:104:6
  1707  .  .  .  .  .  .  Name: "User"
  1708  .  .  .  .  .  .  Obj: *ast.Object {
  1709  .  .  .  .  .  .  .  Kind: type
  1710  .  .  .  .  .  .  .  Name: "User"
  1711  .  .  .  .  .  .  .  Decl: *(obj @ 1703)
  1712  .  .  .  .  .  .  .  Data: nil
  1713  .  .  .  .  .  .  .  Type: nil
  1714  .  .  .  .  .  .  }
  1715  .  .  .  .  .  }
  1716  .  .  .  .  .  TypeParams: nil
  1717  .  .  .  .  .  Assign: -
  1718  .  .  .  .  .  Type: *ast.StructType {
  1719  .  .  .  .  .  .  Struct: example.go:104:11
  1720  .  .  .  .  .  .  Fields: *ast.FieldList {
  1721  .  .  .  .  .  .  .  Opening: example.go:104:18
  1722  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1723  .  .  .  .  .  .  .  .  0: *ast.Field {
  1724  .  .  .  .  .  .  .  .  .  Doc: nil
  1725  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1726  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1727  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:105:2
  1728  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  1729  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1730  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
  1731  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  1732  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1723)
  1733  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
  1734  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
  1735  .  .  .  .  .  .  .  .  .  .  .  }
  1736  .  .  .  .  .  .  .  .  .  .  }
  1737  .  .  .  .  .  .  .  .  .  }
  1738  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
  1739  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:105:5
  1740  .  .  .  .  .  .  .  .  .  .  Name: "int"
  1741  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1742  .  .  .  .  .  .  .  .  .  }
  1743  .  .  .  .  .  .  .  .  .  Tag: *ast.BasicLit {
  1744  .  .  .  .  .  .  .  .  .  .  ValuePos: example.go:105:9
  1745  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1746  .  .  .  .  .  .  .  .  .  .  Value: "`stmapper:\"id\"`"
  1747  .  .  .  .  .  .  .  .  .  }
  1748  .  .  .  .  .  .  .  .  .  Comment: nil
  1749  .  .  .  .  .  .  .  .  }
  1750  .  .  .  .  .  .  .  }
  1751  .  .  .  .  .  .  .  Closing: example.go:106:1
  1752  .  .  .  .  .  .  }
  1753  .  .  .  .  .  .  Incomplete: false
  1754  .  .  .  .  .  }
  1755  .  .  .  .  .  Comment: nil
  1756  .  .  .  .  }
  1757  .  .  .  }
  1758  .  .  .  Rparen: -
  1759  .  .  }
  1760  .  .  11: *ast.FuncDecl {
  1761  .  .  .  Doc: nil
  1762  .  .  .  Recv: nil
  1763  .  .  .  Name: *ast.Ident {
  1764  .  .  .  .  NamePos: example.go:108:6
  1765  .  .  .  .  Name: "Conv"
  1766  .  .  .  .  Obj: *ast.Object {
  1767  .  .  .  .  .  Kind: func
  1768  .  .  .  .  .  Name: "Conv"
  1769  .  .  .  .  .  Decl: *(obj @ 1760)
  1770  .  .  .  .  .  Data: nil
  1771  .  .  .  .  .  Type: nil
  1772  .  .  .  .  }
  1773  .  .  .  }
  1774  .  .  .  Type: *ast.FuncType {
  1775  .  .  .  .  Func: example.go:108:1
  1776  .  .  .  .  TypeParams: nil
  1777  .  .  .  .  Params: *ast.FieldList {
  1778  .  .  .  .  .  Opening: example.go:108:10
  1779  .  .  .  .  .  List: []*ast.Field (len = 2) {
  1780  .  .  .  .  .  .  0: *ast.Field {
  1781  .  .  .  .  .  .  .  Doc: nil
  1782  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1783  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1784  .  .  .  .  .  .  .  .  .  NamePos: example.go:108:11
  1785  .  .  .  .  .  .  .  .  .  Name: "up"
  1786  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1787  .  .  .  .  .  .  .  .  .  .  Kind: var
  1788  .  .  .  .  .  .  .  .  .  .  Name: "up"
  1789  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1780)
  1790  .  .  .  .  .  .  .  .  .  .  Data: nil
  1791  .  .  .  .  .  .  .  .  .  .  Type: nil
  1792  .  .  .  .  .  .  .  .  .  }
  1793  .  .  .  .  .  .  .  .  }
  1794  .  .  .  .  .  .  .  }
  1795  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1796  .  .  .  .  .  .  .  .  Star: example.go:108:14
  1797  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1798  .  .  .  .  .  .  .  .  .  NamePos: example.go:108:15
  1799  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  1800  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 413)
  1801  .  .  .  .  .  .  .  .  }
  1802  .  .  .  .  .  .  .  }
  1803  .  .  .  .  .  .  .  Tag: nil
  1804  .  .  .  .  .  .  .  Comment: nil
  1805  .  .  .  .  .  .  }
  1806  .  .  .  .  .  .  1: *ast.Field {
  1807  .  .  .  .  .  .  .  Doc: nil
  1808  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1809  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1810  .  .  .  .  .  .  .  .  .  NamePos: example.go:108:26
  1811  .  .  .  .  .  .  .  .  .  Name: "u"
  1812  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1813  .  .  .  .  .  .  .  .  .  .  Kind: var
  1814  .  .  .  .  .  .  .  .  .  .  Name: "u"
  1815  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1806)
  1816  .  .  .  .  .  .  .  .  .  .  Data: nil
  1817  .  .  .  .  .  .  .  .  .  .  Type: nil
  1818  .  .  .  .  .  .  .  .  .  }
  1819  .  .  .  .  .  .  .  .  }
  1820  .  .  .  .  .  .  .  }
  1821  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1822  .  .  .  .  .  .  .  .  Star: example.go:108:28
  1823  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1824  .  .  .  .  .  .  .  .  .  NamePos: example.go:108:29
  1825  .  .  .  .  .  .  .  .  .  Name: "User"
  1826  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1708)
  1827  .  .  .  .  .  .  .  .  }
  1828  .  .  .  .  .  .  .  }
  1829  .  .  .  .  .  .  .  Tag: nil
  1830  .  .  .  .  .  .  .  Comment: nil
  1831  .  .  .  .  .  .  }
  1832  .  .  .  .  .  }
  1833  .  .  .  .  .  Closing: example.go:108:33
  1834  .  .  .  .  }
  1835  .  .  .  .  Results: nil
  1836  .  .  .  }
  1837  .  .  .  Body: *ast.BlockStmt {
  1838  .  .  .  .  Lbrace: example.go:108:35
  1839  .  .  .  .  List: []ast.Stmt (len = 1) {
  1840  .  .  .  .  .  0: *ast.ExprStmt {
  1841  .  .  .  .  .  .  X: *ast.CallExpr {
  1842  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1843  .  .  .  .  .  .  .  .  NamePos: example.go:109:2
  1844  .  .  .  .  .  .  .  .  Name: "panic"
  1845  .  .  .  .  .  .  .  .  Obj: nil
  1846  .  .  .  .  .  .  .  }
  1847  .  .  .  .  .  .  .  Lparen: example.go:109:7
  1848  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1849  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1850  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1851  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1852  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:109:8
  1853  .  .  .  .  .  .  .  .  .  .  .  Name: "stmapper"
  1854  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1855  .  .  .  .  .  .  .  .  .  .  }
  1856  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1857  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:109:17
  1858  .  .  .  .  .  .  .  .  .  .  .  Name: "BuildMapping"
  1859  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1860  .  .  .  .  .  .  .  .  .  .  }
  1861  .  .  .  .  .  .  .  .  .  }
  1862  .  .  .  .  .  .  .  .  .  Lparen: example.go:109:29
  1863  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1864  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1865  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:109:30
  1866  .  .  .  .  .  .  .  .  .  .  .  Name: "up"
  1867  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1786)
  1868  .  .  .  .  .  .  .  .  .  .  }
  1869  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  1870  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:109:34
  1871  .  .  .  .  .  .  .  .  .  .  .  Name: "u"
  1872  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1812)
  1873  .  .  .  .  .  .  .  .  .  .  }
  1874  .  .  .  .  .  .  .  .  .  }
  1875  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1876  .  .  .  .  .  .  .  .  .  Rparen: example.go:109:35
  1877  .  .  .  .  .  .  .  .  }
  1878  .  .  .  .  .  .  .  }
  1879  .  .  .  .  .  .  .  Ellipsis: -
  1880  .  .  .  .  .  .  .  Rparen: example.go:109:36
  1881  .  .  .  .  .  .  }
  1882  .  .  .  .  .  }
  1883  .  .  .  .  }
  1884  .  .  .  .  Rbrace: example.go:110:1
  1885  .  .  .  }
  1886  .  .  }
  1887  .  .  12: *ast.FuncDecl {
  1888  .  .  .  Doc: *ast.CommentGroup {
  1889  .  .  .  .  List: []*ast.Comment (len = 1) {
  1890  .  .  .  .  .  0: *ast.Comment {
  1891  .  .  .  .  .  .  Slash: example.go:112:1
  1892  .  .  .  .  .  .  Text: "// Conv1 将up结构体字段映射到u"
  1893  .  .  .  .  .  }
  1894  .  .  .  .  }
  1895  .  .  .  }
  1896  .  .  .  Recv: nil
  1897  .  .  .  Name: *ast.Ident {
  1898  .  .  .  .  NamePos: example.go:113:6
  1899  .  .  .  .  Name: "Conv1"
  1900  .  .  .  .  Obj: *ast.Object {
  1901  .  .  .  .  .  Kind: func
  1902  .  .  .  .  .  Name: "Conv1"
  1903  .  .  .  .  .  Decl: *(obj @ 1887)
  1904  .  .  .  .  .  Data: nil
  1905  .  .  .  .  .  Type: nil
  1906  .  .  .  .  }
  1907  .  .  .  }
  1908  .  .  .  Type: *ast.FuncType {
  1909  .  .  .  .  Func: example.go:113:1
  1910  .  .  .  .  TypeParams: nil
  1911  .  .  .  .  Params: *ast.FieldList {
  1912  .  .  .  .  .  Opening: example.go:113:11
  1913  .  .  .  .  .  List: []*ast.Field (len = 2) {
  1914  .  .  .  .  .  .  0: *ast.Field {
  1915  .  .  .  .  .  .  .  Doc: nil
  1916  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1917  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1918  .  .  .  .  .  .  .  .  .  NamePos: example.go:113:12
  1919  .  .  .  .  .  .  .  .  .  Name: "up"
  1920  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1921  .  .  .  .  .  .  .  .  .  .  Kind: var
  1922  .  .  .  .  .  .  .  .  .  .  Name: "up"
  1923  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1914)
  1924  .  .  .  .  .  .  .  .  .  .  Data: nil
  1925  .  .  .  .  .  .  .  .  .  .  Type: nil
  1926  .  .  .  .  .  .  .  .  .  }
  1927  .  .  .  .  .  .  .  .  }
  1928  .  .  .  .  .  .  .  }
  1929  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1930  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1931  .  .  .  .  .  .  .  .  .  NamePos: example.go:113:15
  1932  .  .  .  .  .  .  .  .  .  Name: "model"
  1933  .  .  .  .  .  .  .  .  .  Obj: nil
  1934  .  .  .  .  .  .  .  .  }
  1935  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1936  .  .  .  .  .  .  .  .  .  NamePos: example.go:113:21
  1937  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  1938  .  .  .  .  .  .  .  .  .  Obj: nil
  1939  .  .  .  .  .  .  .  .  }
  1940  .  .  .  .  .  .  .  }
  1941  .  .  .  .  .  .  .  Tag: nil
  1942  .  .  .  .  .  .  .  Comment: nil
  1943  .  .  .  .  .  .  }
  1944  .  .  .  .  .  .  1: *ast.Field {
  1945  .  .  .  .  .  .  .  Doc: nil
  1946  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1947  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1948  .  .  .  .  .  .  .  .  .  NamePos: example.go:113:32
  1949  .  .  .  .  .  .  .  .  .  Name: "u"
  1950  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1951  .  .  .  .  .  .  .  .  .  .  Kind: var
  1952  .  .  .  .  .  .  .  .  .  .  Name: "u"
  1953  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1944)
  1954  .  .  .  .  .  .  .  .  .  .  Data: nil
  1955  .  .  .  .  .  .  .  .  .  .  Type: nil
  1956  .  .  .  .  .  .  .  .  .  }
  1957  .  .  .  .  .  .  .  .  }
  1958  .  .  .  .  .  .  .  }
  1959  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1960  .  .  .  .  .  .  .  .  Star: example.go:113:34
  1961  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1962  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1963  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:113:35
  1964  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1965  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1966  .  .  .  .  .  .  .  .  .  }
  1967  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1968  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:113:41
  1969  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1970  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1971  .  .  .  .  .  .  .  .  .  }
  1972  .  .  .  .  .  .  .  .  }
  1973  .  .  .  .  .  .  .  }
  1974  .  .  .  .  .  .  .  Tag: nil
  1975  .  .  .  .  .  .  .  Comment: nil
  1976  .  .  .  .  .  .  }
  1977  .  .  .  .  .  }
  1978  .  .  .  .  .  Closing: example.go:113:45
  1979  .  .  .  .  }
  1980  .  .  .  .  Results: nil
  1981  .  .  .  }
  1982  .  .  .  Body: *ast.BlockStmt {
  1983  .  .  .  .  Lbrace: example.go:113:47
  1984  .  .  .  .  List: []ast.Stmt (len = 1) {
  1985  .  .  .  .  .  0: *ast.ExprStmt {
  1986  .  .  .  .  .  .  X: *ast.CallExpr {
  1987  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1988  .  .  .  .  .  .  .  .  NamePos: example.go:114:2
  1989  .  .  .  .  .  .  .  .  Name: "panic"
  1990  .  .  .  .  .  .  .  .  Obj: nil
  1991  .  .  .  .  .  .  .  }
  1992  .  .  .  .  .  .  .  Lparen: example.go:114:7
  1993  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1994  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1995  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1996  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1997  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:114:8
  1998  .  .  .  .  .  .  .  .  .  .  .  Name: "stmapper"
  1999  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2000  .  .  .  .  .  .  .  .  .  .  }
  2001  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2002  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:114:17
  2003  .  .  .  .  .  .  .  .  .  .  .  Name: "BuildMapping"
  2004  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2005  .  .  .  .  .  .  .  .  .  .  }
  2006  .  .  .  .  .  .  .  .  .  }
  2007  .  .  .  .  .  .  .  .  .  Lparen: example.go:114:29
  2008  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  2009  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2010  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:114:30
  2011  .  .  .  .  .  .  .  .  .  .  .  Name: "up"
  2012  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1920)
  2013  .  .  .  .  .  .  .  .  .  .  }
  2014  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  2015  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:114:34
  2016  .  .  .  .  .  .  .  .  .  .  .  Name: "u"
  2017  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1950)
  2018  .  .  .  .  .  .  .  .  .  .  }
  2019  .  .  .  .  .  .  .  .  .  }
  2020  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2021  .  .  .  .  .  .  .  .  .  Rparen: example.go:114:35
  2022  .  .  .  .  .  .  .  .  }
  2023  .  .  .  .  .  .  .  }
  2024  .  .  .  .  .  .  .  Ellipsis: -
  2025  .  .  .  .  .  .  .  Rparen: example.go:114:36
  2026  .  .  .  .  .  .  }
  2027  .  .  .  .  .  }
  2028  .  .  .  .  }
  2029  .  .  .  .  Rbrace: example.go:115:1
  2030  .  .  .  }
  2031  .  .  }
  2032  .  .  13: *ast.FuncDecl {
  2033  .  .  .  Doc: *ast.CommentGroup {
  2034  .  .  .  .  List: []*ast.Comment (len = 1) {
  2035  .  .  .  .  .  0: *ast.Comment {
  2036  .  .  .  .  .  .  Slash: example.go:117:1
  2037  .  .  .  .  .  .  Text: "// Conv2 将up结构体映射到类型为User的结构体，并返回"
  2038  .  .  .  .  .  }
  2039  .  .  .  .  }
  2040  .  .  .  }
  2041  .  .  .  Recv: nil
  2042  .  .  .  Name: *ast.Ident {
  2043  .  .  .  .  NamePos: example.go:118:6
  2044  .  .  .  .  Name: "Conv2"
  2045  .  .  .  .  Obj: *ast.Object {
  2046  .  .  .  .  .  Kind: func
  2047  .  .  .  .  .  Name: "Conv2"
  2048  .  .  .  .  .  Decl: *(obj @ 2032)
  2049  .  .  .  .  .  Data: nil
  2050  .  .  .  .  .  Type: nil
  2051  .  .  .  .  }
  2052  .  .  .  }
  2053  .  .  .  Type: *ast.FuncType {
  2054  .  .  .  .  Func: example.go:118:1
  2055  .  .  .  .  TypeParams: nil
  2056  .  .  .  .  Params: *ast.FieldList {
  2057  .  .  .  .  .  Opening: example.go:118:11
  2058  .  .  .  .  .  List: []*ast.Field (len = 1) {
  2059  .  .  .  .  .  .  0: *ast.Field {
  2060  .  .  .  .  .  .  .  Doc: nil
  2061  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2062  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2063  .  .  .  .  .  .  .  .  .  NamePos: example.go:118:12
  2064  .  .  .  .  .  .  .  .  .  Name: "up"
  2065  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2066  .  .  .  .  .  .  .  .  .  .  Kind: var
  2067  .  .  .  .  .  .  .  .  .  .  Name: "up"
  2068  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2059)
  2069  .  .  .  .  .  .  .  .  .  .  Data: nil
  2070  .  .  .  .  .  .  .  .  .  .  Type: nil
  2071  .  .  .  .  .  .  .  .  .  }
  2072  .  .  .  .  .  .  .  .  }
  2073  .  .  .  .  .  .  .  }
  2074  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2075  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2076  .  .  .  .  .  .  .  .  .  NamePos: example.go:118:15
  2077  .  .  .  .  .  .  .  .  .  Name: "model"
  2078  .  .  .  .  .  .  .  .  .  Obj: nil
  2079  .  .  .  .  .  .  .  .  }
  2080  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2081  .  .  .  .  .  .  .  .  .  NamePos: example.go:118:21
  2082  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  2083  .  .  .  .  .  .  .  .  .  Obj: nil
  2084  .  .  .  .  .  .  .  .  }
  2085  .  .  .  .  .  .  .  }
  2086  .  .  .  .  .  .  .  Tag: nil
  2087  .  .  .  .  .  .  .  Comment: nil
  2088  .  .  .  .  .  .  }
  2089  .  .  .  .  .  }
  2090  .  .  .  .  .  Closing: example.go:118:30
  2091  .  .  .  .  }
  2092  .  .  .  .  Results: *ast.FieldList {
  2093  .  .  .  .  .  Opening: -
  2094  .  .  .  .  .  List: []*ast.Field (len = 1) {
  2095  .  .  .  .  .  .  0: *ast.Field {
  2096  .  .  .  .  .  .  .  Doc: nil
  2097  .  .  .  .  .  .  .  Names: nil
  2098  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2099  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2100  .  .  .  .  .  .  .  .  .  NamePos: example.go:118:32
  2101  .  .  .  .  .  .  .  .  .  Name: "model"
  2102  .  .  .  .  .  .  .  .  .  Obj: nil
  2103  .  .  .  .  .  .  .  .  }
  2104  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2105  .  .  .  .  .  .  .  .  .  NamePos: example.go:118:38
  2106  .  .  .  .  .  .  .  .  .  Name: "User"
  2107  .  .  .  .  .  .  .  .  .  Obj: nil
  2108  .  .  .  .  .  .  .  .  }
  2109  .  .  .  .  .  .  .  }
  2110  .  .  .  .  .  .  .  Tag: nil
  2111  .  .  .  .  .  .  .  Comment: nil
  2112  .  .  .  .  .  .  }
  2113  .  .  .  .  .  }
  2114  .  .  .  .  .  Closing: -
  2115  .  .  .  .  }
  2116  .  .  .  }
  2117  .  .  .  Body: *ast.BlockStmt {
  2118  .  .  .  .  Lbrace: example.go:118:43
  2119  .  .  .  .  List: []ast.Stmt (len = 1) {
  2120  .  .  .  .  .  0: *ast.ExprStmt {
  2121  .  .  .  .  .  .  X: *ast.CallExpr {
  2122  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2123  .  .  .  .  .  .  .  .  NamePos: example.go:119:2
  2124  .  .  .  .  .  .  .  .  Name: "panic"
  2125  .  .  .  .  .  .  .  .  Obj: nil
  2126  .  .  .  .  .  .  .  }
  2127  .  .  .  .  .  .  .  Lparen: example.go:119:7
  2128  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2129  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2130  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2131  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2132  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:119:8
  2133  .  .  .  .  .  .  .  .  .  .  .  Name: "stmapper"
  2134  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2135  .  .  .  .  .  .  .  .  .  .  }
  2136  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2137  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:119:17
  2138  .  .  .  .  .  .  .  .  .  .  .  Name: "BuildMappingRet"
  2139  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2140  .  .  .  .  .  .  .  .  .  .  }
  2141  .  .  .  .  .  .  .  .  .  }
  2142  .  .  .  .  .  .  .  .  .  Lparen: example.go:119:32
  2143  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2144  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2145  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:119:33
  2146  .  .  .  .  .  .  .  .  .  .  .  Name: "up"
  2147  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2065)
  2148  .  .  .  .  .  .  .  .  .  .  }
  2149  .  .  .  .  .  .  .  .  .  }
  2150  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2151  .  .  .  .  .  .  .  .  .  Rparen: example.go:119:35
  2152  .  .  .  .  .  .  .  .  }
  2153  .  .  .  .  .  .  .  }
  2154  .  .  .  .  .  .  .  Ellipsis: -
  2155  .  .  .  .  .  .  .  Rparen: example.go:119:36
  2156  .  .  .  .  .  .  }
  2157  .  .  .  .  .  }
  2158  .  .  .  .  }
  2159  .  .  .  .  Rbrace: example.go:120:1
  2160  .  .  .  }
  2161  .  .  }
  2162  .  .  14: *ast.FuncDecl {
  2163  .  .  .  Doc: *ast.CommentGroup {
  2164  .  .  .  .  List: []*ast.Comment (len = 1) {
  2165  .  .  .  .  .  0: *ast.Comment {
  2166  .  .  .  .  .  .  Slash: example.go:122:1
  2167  .  .  .  .  .  .  Text: "// Conv3 将结构体id和username映射到类型为User的结构体，并返回"
  2168  .  .  .  .  .  }
  2169  .  .  .  .  }
  2170  .  .  .  }
  2171  .  .  .  Recv: nil
  2172  .  .  .  Name: *ast.Ident {
  2173  .  .  .  .  NamePos: example.go:123:6
  2174  .  .  .  .  Name: "Conv3"
  2175  .  .  .  .  Obj: *ast.Object {
  2176  .  .  .  .  .  Kind: func
  2177  .  .  .  .  .  Name: "Conv3"
  2178  .  .  .  .  .  Decl: *(obj @ 2162)
  2179  .  .  .  .  .  Data: nil
  2180  .  .  .  .  .  Type: nil
  2181  .  .  .  .  }
  2182  .  .  .  }
  2183  .  .  .  Type: *ast.FuncType {
  2184  .  .  .  .  Func: example.go:123:1
  2185  .  .  .  .  TypeParams: nil
  2186  .  .  .  .  Params: *ast.FieldList {
  2187  .  .  .  .  .  Opening: example.go:123:11
  2188  .  .  .  .  .  List: []*ast.Field (len = 2) {
  2189  .  .  .  .  .  .  0: *ast.Field {
  2190  .  .  .  .  .  .  .  Doc: nil
  2191  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2192  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2193  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:12
  2194  .  .  .  .  .  .  .  .  .  Name: "id"
  2195  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2196  .  .  .  .  .  .  .  .  .  .  Kind: var
  2197  .  .  .  .  .  .  .  .  .  .  Name: "id"
  2198  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2189)
  2199  .  .  .  .  .  .  .  .  .  .  Data: nil
  2200  .  .  .  .  .  .  .  .  .  .  Type: nil
  2201  .  .  .  .  .  .  .  .  .  }
  2202  .  .  .  .  .  .  .  .  }
  2203  .  .  .  .  .  .  .  }
  2204  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2205  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2206  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:15
  2207  .  .  .  .  .  .  .  .  .  Name: "model"
  2208  .  .  .  .  .  .  .  .  .  Obj: nil
  2209  .  .  .  .  .  .  .  .  }
  2210  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2211  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:21
  2212  .  .  .  .  .  .  .  .  .  Name: "Id"
  2213  .  .  .  .  .  .  .  .  .  Obj: nil
  2214  .  .  .  .  .  .  .  .  }
  2215  .  .  .  .  .  .  .  }
  2216  .  .  .  .  .  .  .  Tag: nil
  2217  .  .  .  .  .  .  .  Comment: nil
  2218  .  .  .  .  .  .  }
  2219  .  .  .  .  .  .  1: *ast.Field {
  2220  .  .  .  .  .  .  .  Doc: nil
  2221  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2222  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2223  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:25
  2224  .  .  .  .  .  .  .  .  .  Name: "username"
  2225  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2226  .  .  .  .  .  .  .  .  .  .  Kind: var
  2227  .  .  .  .  .  .  .  .  .  .  Name: "username"
  2228  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2219)
  2229  .  .  .  .  .  .  .  .  .  .  Data: nil
  2230  .  .  .  .  .  .  .  .  .  .  Type: nil
  2231  .  .  .  .  .  .  .  .  .  }
  2232  .  .  .  .  .  .  .  .  }
  2233  .  .  .  .  .  .  .  }
  2234  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2235  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2236  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:34
  2237  .  .  .  .  .  .  .  .  .  Name: "model"
  2238  .  .  .  .  .  .  .  .  .  Obj: nil
  2239  .  .  .  .  .  .  .  .  }
  2240  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2241  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:40
  2242  .  .  .  .  .  .  .  .  .  Name: "Username"
  2243  .  .  .  .  .  .  .  .  .  Obj: nil
  2244  .  .  .  .  .  .  .  .  }
  2245  .  .  .  .  .  .  .  }
  2246  .  .  .  .  .  .  .  Tag: nil
  2247  .  .  .  .  .  .  .  Comment: nil
  2248  .  .  .  .  .  .  }
  2249  .  .  .  .  .  }
  2250  .  .  .  .  .  Closing: example.go:123:48
  2251  .  .  .  .  }
  2252  .  .  .  .  Results: *ast.FieldList {
  2253  .  .  .  .  .  Opening: example.go:123:50
  2254  .  .  .  .  .  List: []*ast.Field (len = 1) {
  2255  .  .  .  .  .  .  0: *ast.Field {
  2256  .  .  .  .  .  .  .  Doc: nil
  2257  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2258  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2259  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:51
  2260  .  .  .  .  .  .  .  .  .  Name: "u"
  2261  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2262  .  .  .  .  .  .  .  .  .  .  Kind: var
  2263  .  .  .  .  .  .  .  .  .  .  Name: "u"
  2264  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2255)
  2265  .  .  .  .  .  .  .  .  .  .  Data: nil
  2266  .  .  .  .  .  .  .  .  .  .  Type: nil
  2267  .  .  .  .  .  .  .  .  .  }
  2268  .  .  .  .  .  .  .  .  }
  2269  .  .  .  .  .  .  .  }
  2270  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2271  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2272  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:53
  2273  .  .  .  .  .  .  .  .  .  Name: "model"
  2274  .  .  .  .  .  .  .  .  .  Obj: nil
  2275  .  .  .  .  .  .  .  .  }
  2276  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2277  .  .  .  .  .  .  .  .  .  NamePos: example.go:123:59
  2278  .  .  .  .  .  .  .  .  .  Name: "User"
  2279  .  .  .  .  .  .  .  .  .  Obj: nil
  2280  .  .  .  .  .  .  .  .  }
  2281  .  .  .  .  .  .  .  }
  2282  .  .  .  .  .  .  .  Tag: nil
  2283  .  .  .  .  .  .  .  Comment: nil
  2284  .  .  .  .  .  .  }
  2285  .  .  .  .  .  }
  2286  .  .  .  .  .  Closing: example.go:123:63
  2287  .  .  .  .  }
  2288  .  .  .  }
  2289  .  .  .  Body: *ast.BlockStmt {
  2290  .  .  .  .  Lbrace: example.go:123:65
  2291  .  .  .  .  List: []ast.Stmt (len = 1) {
  2292  .  .  .  .  .  0: *ast.ExprStmt {
  2293  .  .  .  .  .  .  X: *ast.CallExpr {
  2294  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2295  .  .  .  .  .  .  .  .  NamePos: example.go:124:2
  2296  .  .  .  .  .  .  .  .  Name: "panic"
  2297  .  .  .  .  .  .  .  .  Obj: nil
  2298  .  .  .  .  .  .  .  }
  2299  .  .  .  .  .  .  .  Lparen: example.go:124:7
  2300  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2301  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2302  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2303  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2304  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:124:8
  2305  .  .  .  .  .  .  .  .  .  .  .  Name: "stmapper"
  2306  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2307  .  .  .  .  .  .  .  .  .  .  }
  2308  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2309  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:124:17
  2310  .  .  .  .  .  .  .  .  .  .  .  Name: "BuildMappingFrom"
  2311  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2312  .  .  .  .  .  .  .  .  .  .  }
  2313  .  .  .  .  .  .  .  .  .  }
  2314  .  .  .  .  .  .  .  .  .  Lparen: example.go:124:33
  2315  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  2316  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2317  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:124:34
  2318  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
  2319  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2195)
  2320  .  .  .  .  .  .  .  .  .  .  }
  2321  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  2322  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:124:38
  2323  .  .  .  .  .  .  .  .  .  .  .  Name: "username"
  2324  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2225)
  2325  .  .  .  .  .  .  .  .  .  .  }
  2326  .  .  .  .  .  .  .  .  .  }
  2327  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2328  .  .  .  .  .  .  .  .  .  Rparen: example.go:124:46
  2329  .  .  .  .  .  .  .  .  }
  2330  .  .  .  .  .  .  .  }
  2331  .  .  .  .  .  .  .  Ellipsis: -
  2332  .  .  .  .  .  .  .  Rparen: example.go:124:47
  2333  .  .  .  .  .  .  }
  2334  .  .  .  .  .  }
  2335  .  .  .  .  }
  2336  .  .  .  .  Rbrace: example.go:125:1
  2337  .  .  .  }
  2338  .  .  }
  2339  .  .  15: *ast.FuncDecl {
  2340  .  .  .  Doc: *ast.CommentGroup {
  2341  .  .  .  .  List: []*ast.Comment (len = 1) {
  2342  .  .  .  .  .  0: *ast.Comment {
  2343  .  .  .  .  .  .  Slash: example.go:127:1
  2344  .  .  .  .  .  .  Text: "// Conv4 将结构体id和username映射到类型为User的结构体"
  2345  .  .  .  .  .  }
  2346  .  .  .  .  }
  2347  .  .  .  }
  2348  .  .  .  Recv: nil
  2349  .  .  .  Name: *ast.Ident {
  2350  .  .  .  .  NamePos: example.go:128:6
  2351  .  .  .  .  Name: "Conv4"
  2352  .  .  .  .  Obj: *ast.Object {
  2353  .  .  .  .  .  Kind: func
  2354  .  .  .  .  .  Name: "Conv4"
  2355  .  .  .  .  .  Decl: *(obj @ 2339)
  2356  .  .  .  .  .  Data: nil
  2357  .  .  .  .  .  Type: nil
  2358  .  .  .  .  }
  2359  .  .  .  }
  2360  .  .  .  Type: *ast.FuncType {
  2361  .  .  .  .  Func: example.go:128:1
  2362  .  .  .  .  TypeParams: nil
  2363  .  .  .  .  Params: *ast.FieldList {
  2364  .  .  .  .  .  Opening: example.go:128:11
  2365  .  .  .  .  .  List: []*ast.Field (len = 3) {
  2366  .  .  .  .  .  .  0: *ast.Field {
  2367  .  .  .  .  .  .  .  Doc: nil
  2368  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2369  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2370  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:12
  2371  .  .  .  .  .  .  .  .  .  Name: "id"
  2372  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2373  .  .  .  .  .  .  .  .  .  .  Kind: var
  2374  .  .  .  .  .  .  .  .  .  .  Name: "id"
  2375  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2366)
  2376  .  .  .  .  .  .  .  .  .  .  Data: nil
  2377  .  .  .  .  .  .  .  .  .  .  Type: nil
  2378  .  .  .  .  .  .  .  .  .  }
  2379  .  .  .  .  .  .  .  .  }
  2380  .  .  .  .  .  .  .  }
  2381  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2382  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2383  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:15
  2384  .  .  .  .  .  .  .  .  .  Name: "model"
  2385  .  .  .  .  .  .  .  .  .  Obj: nil
  2386  .  .  .  .  .  .  .  .  }
  2387  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2388  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:21
  2389  .  .  .  .  .  .  .  .  .  Name: "Id"
  2390  .  .  .  .  .  .  .  .  .  Obj: nil
  2391  .  .  .  .  .  .  .  .  }
  2392  .  .  .  .  .  .  .  }
  2393  .  .  .  .  .  .  .  Tag: nil
  2394  .  .  .  .  .  .  .  Comment: nil
  2395  .  .  .  .  .  .  }
  2396  .  .  .  .  .  .  1: *ast.Field {
  2397  .  .  .  .  .  .  .  Doc: nil
  2398  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2399  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2400  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:25
  2401  .  .  .  .  .  .  .  .  .  Name: "username"
  2402  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2403  .  .  .  .  .  .  .  .  .  .  Kind: var
  2404  .  .  .  .  .  .  .  .  .  .  Name: "username"
  2405  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2396)
  2406  .  .  .  .  .  .  .  .  .  .  Data: nil
  2407  .  .  .  .  .  .  .  .  .  .  Type: nil
  2408  .  .  .  .  .  .  .  .  .  }
  2409  .  .  .  .  .  .  .  .  }
  2410  .  .  .  .  .  .  .  }
  2411  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2412  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2413  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:34
  2414  .  .  .  .  .  .  .  .  .  Name: "model"
  2415  .  .  .  .  .  .  .  .  .  Obj: nil
  2416  .  .  .  .  .  .  .  .  }
  2417  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2418  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:40
  2419  .  .  .  .  .  .  .  .  .  Name: "Username"
  2420  .  .  .  .  .  .  .  .  .  Obj: nil
  2421  .  .  .  .  .  .  .  .  }
  2422  .  .  .  .  .  .  .  }
  2423  .  .  .  .  .  .  .  Tag: nil
  2424  .  .  .  .  .  .  .  Comment: nil
  2425  .  .  .  .  .  .  }
  2426  .  .  .  .  .  .  2: *ast.Field {
  2427  .  .  .  .  .  .  .  Doc: nil
  2428  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2429  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2430  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:50
  2431  .  .  .  .  .  .  .  .  .  Name: "u"
  2432  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2433  .  .  .  .  .  .  .  .  .  .  Kind: var
  2434  .  .  .  .  .  .  .  .  .  .  Name: "u"
  2435  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2426)
  2436  .  .  .  .  .  .  .  .  .  .  Data: nil
  2437  .  .  .  .  .  .  .  .  .  .  Type: nil
  2438  .  .  .  .  .  .  .  .  .  }
  2439  .  .  .  .  .  .  .  .  }
  2440  .  .  .  .  .  .  .  }
  2441  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  2442  .  .  .  .  .  .  .  .  Star: example.go:128:52
  2443  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2444  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2445  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:53
  2446  .  .  .  .  .  .  .  .  .  .  Name: "model"
  2447  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2448  .  .  .  .  .  .  .  .  .  }
  2449  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2450  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:128:59
  2451  .  .  .  .  .  .  .  .  .  .  Name: "User"
  2452  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2453  .  .  .  .  .  .  .  .  .  }
  2454  .  .  .  .  .  .  .  .  }
  2455  .  .  .  .  .  .  .  }
  2456  .  .  .  .  .  .  .  Tag: nil
  2457  .  .  .  .  .  .  .  Comment: nil
  2458  .  .  .  .  .  .  }
  2459  .  .  .  .  .  }
  2460  .  .  .  .  .  Closing: example.go:128:63
  2461  .  .  .  .  }
  2462  .  .  .  .  Results: nil
  2463  .  .  .  }
  2464  .  .  .  Body: *ast.BlockStmt {
  2465  .  .  .  .  Lbrace: example.go:128:65
  2466  .  .  .  .  List: []ast.Stmt (len = 2) {
  2467  .  .  .  .  .  0: *ast.ExprStmt {
  2468  .  .  .  .  .  .  X: *ast.CallExpr {
  2469  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2470  .  .  .  .  .  .  .  .  NamePos: example.go:129:2
  2471  .  .  .  .  .  .  .  .  Name: "panic"
  2472  .  .  .  .  .  .  .  .  Obj: nil
  2473  .  .  .  .  .  .  .  }
  2474  .  .  .  .  .  .  .  Lparen: example.go:129:7
  2475  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2476  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2477  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2478  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2479  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:129:8
  2480  .  .  .  .  .  .  .  .  .  .  .  Name: "stmapper"
  2481  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2482  .  .  .  .  .  .  .  .  .  .  }
  2483  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2484  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:129:17
  2485  .  .  .  .  .  .  .  .  .  .  .  Name: "BuildMappingFrom"
  2486  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2487  .  .  .  .  .  .  .  .  .  .  }
  2488  .  .  .  .  .  .  .  .  .  }
  2489  .  .  .  .  .  .  .  .  .  Lparen: example.go:129:33
  2490  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  2491  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2492  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:129:34
  2493  .  .  .  .  .  .  .  .  .  .  .  Name: "id"
  2494  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2372)
  2495  .  .  .  .  .  .  .  .  .  .  }
  2496  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
  2497  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:129:38
  2498  .  .  .  .  .  .  .  .  .  .  .  Name: "username"
  2499  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2402)
  2500  .  .  .  .  .  .  .  .  .  .  }
  2501  .  .  .  .  .  .  .  .  .  }
  2502  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2503  .  .  .  .  .  .  .  .  .  Rparen: example.go:129:46
  2504  .  .  .  .  .  .  .  .  }
  2505  .  .  .  .  .  .  .  }
  2506  .  .  .  .  .  .  .  Ellipsis: -
  2507  .  .  .  .  .  .  .  Rparen: example.go:129:47
  2508  .  .  .  .  .  .  }
  2509  .  .  .  .  .  }
  2510  .  .  .  .  .  1: *ast.ExprStmt {
  2511  .  .  .  .  .  .  X: *ast.CallExpr {
  2512  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2513  .  .  .  .  .  .  .  .  NamePos: example.go:130:2
  2514  .  .  .  .  .  .  .  .  Name: "panic"
  2515  .  .  .  .  .  .  .  .  Obj: nil
  2516  .  .  .  .  .  .  .  }
  2517  .  .  .  .  .  .  .  Lparen: example.go:130:7
  2518  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2519  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2520  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2521  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2522  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:130:8
  2523  .  .  .  .  .  .  .  .  .  .  .  Name: "stmapper"
  2524  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2525  .  .  .  .  .  .  .  .  .  .  }
  2526  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2527  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:130:17
  2528  .  .  .  .  .  .  .  .  .  .  .  Name: "BuildMappingTo"
  2529  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2530  .  .  .  .  .  .  .  .  .  .  }
  2531  .  .  .  .  .  .  .  .  .  }
  2532  .  .  .  .  .  .  .  .  .  Lparen: example.go:130:31
  2533  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2534  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2535  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:130:32
  2536  .  .  .  .  .  .  .  .  .  .  .  Name: "u"
  2537  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2432)
  2538  .  .  .  .  .  .  .  .  .  .  }
  2539  .  .  .  .  .  .  .  .  .  }
  2540  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2541  .  .  .  .  .  .  .  .  .  Rparen: example.go:130:33
  2542  .  .  .  .  .  .  .  .  }
  2543  .  .  .  .  .  .  .  }
  2544  .  .  .  .  .  .  .  Ellipsis: -
  2545  .  .  .  .  .  .  .  Rparen: example.go:130:34
  2546  .  .  .  .  .  .  }
  2547  .  .  .  .  .  }
  2548  .  .  .  .  }
  2549  .  .  .  .  Rbrace: example.go:131:1
  2550  .  .  .  }
  2551  .  .  }
  2552  .  .  16: *ast.FuncDecl {
  2553  .  .  .  Doc: *ast.CommentGroup {
  2554  .  .  .  .  List: []*ast.Comment (len = 1) {
  2555  .  .  .  .  .  0: *ast.Comment {
  2556  .  .  .  .  .  .  Slash: example.go:133:1
  2557  .  .  .  .  .  .  Text: "// UserProtoToUser1 赋值是无用的"
  2558  .  .  .  .  .  }
  2559  .  .  .  .  }
  2560  .  .  .  }
  2561  .  .  .  Recv: nil
  2562  .  .  .  Name: *ast.Ident {
  2563  .  .  .  .  NamePos: example.go:134:6
  2564  .  .  .  .  Name: "UserProtoToUser1"
  2565  .  .  .  .  Obj: *ast.Object {
  2566  .  .  .  .  .  Kind: func
  2567  .  .  .  .  .  Name: "UserProtoToUser1"
  2568  .  .  .  .  .  Decl: *(obj @ 2552)
  2569  .  .  .  .  .  Data: nil
  2570  .  .  .  .  .  Type: nil
  2571  .  .  .  .  }
  2572  .  .  .  }
  2573  .  .  .  Type: *ast.FuncType {
  2574  .  .  .  .  Func: example.go:134:1
  2575  .  .  .  .  TypeParams: nil
  2576  .  .  .  .  Params: *ast.FieldList {
  2577  .  .  .  .  .  Opening: example.go:134:22
  2578  .  .  .  .  .  List: []*ast.Field (len = 2) {
  2579  .  .  .  .  .  .  0: *ast.Field {
  2580  .  .  .  .  .  .  .  Doc: nil
  2581  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2582  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2583  .  .  .  .  .  .  .  .  .  NamePos: example.go:134:23
  2584  .  .  .  .  .  .  .  .  .  Name: "u1"
  2585  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2586  .  .  .  .  .  .  .  .  .  .  Kind: var
  2587  .  .  .  .  .  .  .  .  .  .  Name: "u1"
  2588  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2579)
  2589  .  .  .  .  .  .  .  .  .  .  Data: nil
  2590  .  .  .  .  .  .  .  .  .  .  Type: nil
  2591  .  .  .  .  .  .  .  .  .  }
  2592  .  .  .  .  .  .  .  .  }
  2593  .  .  .  .  .  .  .  }
  2594  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2595  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2596  .  .  .  .  .  .  .  .  .  NamePos: example.go:134:26
  2597  .  .  .  .  .  .  .  .  .  Name: "model"
  2598  .  .  .  .  .  .  .  .  .  Obj: nil
  2599  .  .  .  .  .  .  .  .  }
  2600  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2601  .  .  .  .  .  .  .  .  .  NamePos: example.go:134:32
  2602  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  2603  .  .  .  .  .  .  .  .  .  Obj: nil
  2604  .  .  .  .  .  .  .  .  }
  2605  .  .  .  .  .  .  .  }
  2606  .  .  .  .  .  .  .  Tag: nil
  2607  .  .  .  .  .  .  .  Comment: nil
  2608  .  .  .  .  .  .  }
  2609  .  .  .  .  .  .  1: *ast.Field {
  2610  .  .  .  .  .  .  .  Doc: nil
  2611  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2612  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2613  .  .  .  .  .  .  .  .  .  NamePos: example.go:134:43
  2614  .  .  .  .  .  .  .  .  .  Name: "u2"
  2615  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2616  .  .  .  .  .  .  .  .  .  .  Kind: var
  2617  .  .  .  .  .  .  .  .  .  .  Name: "u2"
  2618  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2609)
  2619  .  .  .  .  .  .  .  .  .  .  Data: nil
  2620  .  .  .  .  .  .  .  .  .  .  Type: nil
  2621  .  .  .  .  .  .  .  .  .  }
  2622  .  .  .  .  .  .  .  .  }
  2623  .  .  .  .  .  .  .  }
  2624  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2625  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2626  .  .  .  .  .  .  .  .  .  NamePos: example.go:134:46
  2627  .  .  .  .  .  .  .  .  .  Name: "model"
  2628  .  .  .  .  .  .  .  .  .  Obj: nil
  2629  .  .  .  .  .  .  .  .  }
  2630  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2631  .  .  .  .  .  .  .  .  .  NamePos: example.go:134:52
  2632  .  .  .  .  .  .  .  .  .  Name: "User"
  2633  .  .  .  .  .  .  .  .  .  Obj: nil
  2634  .  .  .  .  .  .  .  .  }
  2635  .  .  .  .  .  .  .  }
  2636  .  .  .  .  .  .  .  Tag: nil
  2637  .  .  .  .  .  .  .  Comment: nil
  2638  .  .  .  .  .  .  }
  2639  .  .  .  .  .  }
  2640  .  .  .  .  .  Closing: example.go:134:56
  2641  .  .  .  .  }
  2642  .  .  .  .  Results: nil
  2643  .  .  .  }
  2644  .  .  .  Body: *ast.BlockStmt {
  2645  .  .  .  .  Lbrace: example.go:134:58
  2646  .  .  .  .  List: []ast.Stmt (len = 1) {
  2647  .  .  .  .  .  0: *ast.AssignStmt {
  2648  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  2649  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2650  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2651  .  .  .  .  .  .  .  .  .  NamePos: example.go:135:2
  2652  .  .  .  .  .  .  .  .  .  Name: "u2"
  2653  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2615)
  2654  .  .  .  .  .  .  .  .  }
  2655  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2656  .  .  .  .  .  .  .  .  .  NamePos: example.go:135:5
  2657  .  .  .  .  .  .  .  .  .  Name: "Id"
  2658  .  .  .  .  .  .  .  .  .  Obj: nil
  2659  .  .  .  .  .  .  .  .  }
  2660  .  .  .  .  .  .  .  }
  2661  .  .  .  .  .  .  }
  2662  .  .  .  .  .  .  TokPos: example.go:135:8
  2663  .  .  .  .  .  .  Tok: =
  2664  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2665  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2666  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2667  .  .  .  .  .  .  .  .  .  NamePos: example.go:135:10
  2668  .  .  .  .  .  .  .  .  .  Name: "u1"
  2669  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2585)
  2670  .  .  .  .  .  .  .  .  }
  2671  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2672  .  .  .  .  .  .  .  .  .  NamePos: example.go:135:13
  2673  .  .  .  .  .  .  .  .  .  Name: "Id"
  2674  .  .  .  .  .  .  .  .  .  Obj: nil
  2675  .  .  .  .  .  .  .  .  }
  2676  .  .  .  .  .  .  .  }
  2677  .  .  .  .  .  .  }
  2678  .  .  .  .  .  }
  2679  .  .  .  .  }
  2680  .  .  .  .  Rbrace: example.go:136:1
  2681  .  .  .  }
  2682  .  .  }
  2683  .  .  17: *ast.FuncDecl {
  2684  .  .  .  Doc: *ast.CommentGroup {
  2685  .  .  .  .  List: []*ast.Comment (len = 1) {
  2686  .  .  .  .  .  0: *ast.Comment {
  2687  .  .  .  .  .  .  Slash: example.go:138:1
  2688  .  .  .  .  .  .  Text: "// UserProtoToUser2 赋值是无用的"
  2689  .  .  .  .  .  }
  2690  .  .  .  .  }
  2691  .  .  .  }
  2692  .  .  .  Recv: nil
  2693  .  .  .  Name: *ast.Ident {
  2694  .  .  .  .  NamePos: example.go:139:6
  2695  .  .  .  .  Name: "UserProtoToUser2"
  2696  .  .  .  .  Obj: *ast.Object {
  2697  .  .  .  .  .  Kind: func
  2698  .  .  .  .  .  Name: "UserProtoToUser2"
  2699  .  .  .  .  .  Decl: *(obj @ 2683)
  2700  .  .  .  .  .  Data: nil
  2701  .  .  .  .  .  Type: nil
  2702  .  .  .  .  }
  2703  .  .  .  }
  2704  .  .  .  Type: *ast.FuncType {
  2705  .  .  .  .  Func: example.go:139:1
  2706  .  .  .  .  TypeParams: nil
  2707  .  .  .  .  Params: *ast.FieldList {
  2708  .  .  .  .  .  Opening: example.go:139:22
  2709  .  .  .  .  .  List: []*ast.Field (len = 2) {
  2710  .  .  .  .  .  .  0: *ast.Field {
  2711  .  .  .  .  .  .  .  Doc: nil
  2712  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2713  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2714  .  .  .  .  .  .  .  .  .  NamePos: example.go:139:23
  2715  .  .  .  .  .  .  .  .  .  Name: "u1"
  2716  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2717  .  .  .  .  .  .  .  .  .  .  Kind: var
  2718  .  .  .  .  .  .  .  .  .  .  Name: "u1"
  2719  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2710)
  2720  .  .  .  .  .  .  .  .  .  .  Data: nil
  2721  .  .  .  .  .  .  .  .  .  .  Type: nil
  2722  .  .  .  .  .  .  .  .  .  }
  2723  .  .  .  .  .  .  .  .  }
  2724  .  .  .  .  .  .  .  }
  2725  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  2726  .  .  .  .  .  .  .  .  Star: example.go:139:26
  2727  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2728  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2729  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:139:27
  2730  .  .  .  .  .  .  .  .  .  .  Name: "model"
  2731  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2732  .  .  .  .  .  .  .  .  .  }
  2733  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2734  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:139:33
  2735  .  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  2736  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2737  .  .  .  .  .  .  .  .  .  }
  2738  .  .  .  .  .  .  .  .  }
  2739  .  .  .  .  .  .  .  }
  2740  .  .  .  .  .  .  .  Tag: nil
  2741  .  .  .  .  .  .  .  Comment: nil
  2742  .  .  .  .  .  .  }
  2743  .  .  .  .  .  .  1: *ast.Field {
  2744  .  .  .  .  .  .  .  Doc: nil
  2745  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2746  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2747  .  .  .  .  .  .  .  .  .  NamePos: example.go:139:44
  2748  .  .  .  .  .  .  .  .  .  Name: "u2"
  2749  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2750  .  .  .  .  .  .  .  .  .  .  Kind: var
  2751  .  .  .  .  .  .  .  .  .  .  Name: "u2"
  2752  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2743)
  2753  .  .  .  .  .  .  .  .  .  .  Data: nil
  2754  .  .  .  .  .  .  .  .  .  .  Type: nil
  2755  .  .  .  .  .  .  .  .  .  }
  2756  .  .  .  .  .  .  .  .  }
  2757  .  .  .  .  .  .  .  }
  2758  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2759  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2760  .  .  .  .  .  .  .  .  .  NamePos: example.go:139:47
  2761  .  .  .  .  .  .  .  .  .  Name: "model"
  2762  .  .  .  .  .  .  .  .  .  Obj: nil
  2763  .  .  .  .  .  .  .  .  }
  2764  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2765  .  .  .  .  .  .  .  .  .  NamePos: example.go:139:53
  2766  .  .  .  .  .  .  .  .  .  Name: "User"
  2767  .  .  .  .  .  .  .  .  .  Obj: nil
  2768  .  .  .  .  .  .  .  .  }
  2769  .  .  .  .  .  .  .  }
  2770  .  .  .  .  .  .  .  Tag: nil
  2771  .  .  .  .  .  .  .  Comment: nil
  2772  .  .  .  .  .  .  }
  2773  .  .  .  .  .  }
  2774  .  .  .  .  .  Closing: example.go:139:57
  2775  .  .  .  .  }
  2776  .  .  .  .  Results: nil
  2777  .  .  .  }
  2778  .  .  .  Body: *ast.BlockStmt {
  2779  .  .  .  .  Lbrace: example.go:139:59
  2780  .  .  .  .  List: []ast.Stmt (len = 1) {
  2781  .  .  .  .  .  0: *ast.AssignStmt {
  2782  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  2783  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2784  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2785  .  .  .  .  .  .  .  .  .  NamePos: example.go:140:2
  2786  .  .  .  .  .  .  .  .  .  Name: "u2"
  2787  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2749)
  2788  .  .  .  .  .  .  .  .  }
  2789  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2790  .  .  .  .  .  .  .  .  .  NamePos: example.go:140:5
  2791  .  .  .  .  .  .  .  .  .  Name: "Id"
  2792  .  .  .  .  .  .  .  .  .  Obj: nil
  2793  .  .  .  .  .  .  .  .  }
  2794  .  .  .  .  .  .  .  }
  2795  .  .  .  .  .  .  }
  2796  .  .  .  .  .  .  TokPos: example.go:140:8
  2797  .  .  .  .  .  .  Tok: =
  2798  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2799  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2800  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2801  .  .  .  .  .  .  .  .  .  NamePos: example.go:140:10
  2802  .  .  .  .  .  .  .  .  .  Name: "u1"
  2803  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2716)
  2804  .  .  .  .  .  .  .  .  }
  2805  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2806  .  .  .  .  .  .  .  .  .  NamePos: example.go:140:13
  2807  .  .  .  .  .  .  .  .  .  Name: "Id"
  2808  .  .  .  .  .  .  .  .  .  Obj: nil
  2809  .  .  .  .  .  .  .  .  }
  2810  .  .  .  .  .  .  .  }
  2811  .  .  .  .  .  .  }
  2812  .  .  .  .  .  }
  2813  .  .  .  .  }
  2814  .  .  .  .  Rbrace: example.go:141:1
  2815  .  .  .  }
  2816  .  .  }
  2817  .  .  18: *ast.FuncDecl {
  2818  .  .  .  Doc: nil
  2819  .  .  .  Recv: nil
  2820  .  .  .  Name: *ast.Ident {
  2821  .  .  .  .  NamePos: example.go:143:6
  2822  .  .  .  .  Name: "UserProtoToUser3"
  2823  .  .  .  .  Obj: *ast.Object {
  2824  .  .  .  .  .  Kind: func
  2825  .  .  .  .  .  Name: "UserProtoToUser3"
  2826  .  .  .  .  .  Decl: *(obj @ 2817)
  2827  .  .  .  .  .  Data: nil
  2828  .  .  .  .  .  Type: nil
  2829  .  .  .  .  }
  2830  .  .  .  }
  2831  .  .  .  Type: *ast.FuncType {
  2832  .  .  .  .  Func: example.go:143:1
  2833  .  .  .  .  TypeParams: nil
  2834  .  .  .  .  Params: *ast.FieldList {
  2835  .  .  .  .  .  Opening: example.go:143:22
  2836  .  .  .  .  .  List: []*ast.Field (len = 2) {
  2837  .  .  .  .  .  .  0: *ast.Field {
  2838  .  .  .  .  .  .  .  Doc: nil
  2839  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2840  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2841  .  .  .  .  .  .  .  .  .  NamePos: example.go:143:23
  2842  .  .  .  .  .  .  .  .  .  Name: "u1"
  2843  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2844  .  .  .  .  .  .  .  .  .  .  Kind: var
  2845  .  .  .  .  .  .  .  .  .  .  Name: "u1"
  2846  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2837)
  2847  .  .  .  .  .  .  .  .  .  .  Data: nil
  2848  .  .  .  .  .  .  .  .  .  .  Type: nil
  2849  .  .  .  .  .  .  .  .  .  }
  2850  .  .  .  .  .  .  .  .  }
  2851  .  .  .  .  .  .  .  }
  2852  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2853  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2854  .  .  .  .  .  .  .  .  .  NamePos: example.go:143:26
  2855  .  .  .  .  .  .  .  .  .  Name: "model"
  2856  .  .  .  .  .  .  .  .  .  Obj: nil
  2857  .  .  .  .  .  .  .  .  }
  2858  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2859  .  .  .  .  .  .  .  .  .  NamePos: example.go:143:32
  2860  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  2861  .  .  .  .  .  .  .  .  .  Obj: nil
  2862  .  .  .  .  .  .  .  .  }
  2863  .  .  .  .  .  .  .  }
  2864  .  .  .  .  .  .  .  Tag: nil
  2865  .  .  .  .  .  .  .  Comment: nil
  2866  .  .  .  .  .  .  }
  2867  .  .  .  .  .  .  1: *ast.Field {
  2868  .  .  .  .  .  .  .  Doc: nil
  2869  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2870  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2871  .  .  .  .  .  .  .  .  .  NamePos: example.go:143:43
  2872  .  .  .  .  .  .  .  .  .  Name: "u2"
  2873  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2874  .  .  .  .  .  .  .  .  .  .  Kind: var
  2875  .  .  .  .  .  .  .  .  .  .  Name: "u2"
  2876  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2867)
  2877  .  .  .  .  .  .  .  .  .  .  Data: nil
  2878  .  .  .  .  .  .  .  .  .  .  Type: nil
  2879  .  .  .  .  .  .  .  .  .  }
  2880  .  .  .  .  .  .  .  .  }
  2881  .  .  .  .  .  .  .  }
  2882  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  2883  .  .  .  .  .  .  .  .  Star: example.go:143:46
  2884  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2885  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2886  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:143:47
  2887  .  .  .  .  .  .  .  .  .  .  Name: "model"
  2888  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2889  .  .  .  .  .  .  .  .  .  }
  2890  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2891  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:143:53
  2892  .  .  .  .  .  .  .  .  .  .  Name: "User"
  2893  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2894  .  .  .  .  .  .  .  .  .  }
  2895  .  .  .  .  .  .  .  .  }
  2896  .  .  .  .  .  .  .  }
  2897  .  .  .  .  .  .  .  Tag: nil
  2898  .  .  .  .  .  .  .  Comment: nil
  2899  .  .  .  .  .  .  }
  2900  .  .  .  .  .  }
  2901  .  .  .  .  .  Closing: example.go:143:57
  2902  .  .  .  .  }
  2903  .  .  .  .  Results: nil
  2904  .  .  .  }
  2905  .  .  .  Body: *ast.BlockStmt {
  2906  .  .  .  .  Lbrace: example.go:143:59
  2907  .  .  .  .  List: []ast.Stmt (len = 1) {
  2908  .  .  .  .  .  0: *ast.AssignStmt {
  2909  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  2910  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2911  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2912  .  .  .  .  .  .  .  .  .  NamePos: example.go:144:2
  2913  .  .  .  .  .  .  .  .  .  Name: "u2"
  2914  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2873)
  2915  .  .  .  .  .  .  .  .  }
  2916  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2917  .  .  .  .  .  .  .  .  .  NamePos: example.go:144:5
  2918  .  .  .  .  .  .  .  .  .  Name: "Id"
  2919  .  .  .  .  .  .  .  .  .  Obj: nil
  2920  .  .  .  .  .  .  .  .  }
  2921  .  .  .  .  .  .  .  }
  2922  .  .  .  .  .  .  }
  2923  .  .  .  .  .  .  TokPos: example.go:144:8
  2924  .  .  .  .  .  .  Tok: =
  2925  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  2926  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  2927  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2928  .  .  .  .  .  .  .  .  .  NamePos: example.go:144:10
  2929  .  .  .  .  .  .  .  .  .  Name: "u1"
  2930  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2843)
  2931  .  .  .  .  .  .  .  .  }
  2932  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2933  .  .  .  .  .  .  .  .  .  NamePos: example.go:144:13
  2934  .  .  .  .  .  .  .  .  .  Name: "Id"
  2935  .  .  .  .  .  .  .  .  .  Obj: nil
  2936  .  .  .  .  .  .  .  .  }
  2937  .  .  .  .  .  .  .  }
  2938  .  .  .  .  .  .  }
  2939  .  .  .  .  .  }
  2940  .  .  .  .  }
  2941  .  .  .  .  Rbrace: example.go:145:1
  2942  .  .  .  }
  2943  .  .  }
  2944  .  .  19: *ast.FuncDecl {
  2945  .  .  .  Doc: nil
  2946  .  .  .  Recv: nil
  2947  .  .  .  Name: *ast.Ident {
  2948  .  .  .  .  NamePos: example.go:147:6
  2949  .  .  .  .  Name: "UserProtoToUser4"
  2950  .  .  .  .  Obj: *ast.Object {
  2951  .  .  .  .  .  Kind: func
  2952  .  .  .  .  .  Name: "UserProtoToUser4"
  2953  .  .  .  .  .  Decl: *(obj @ 2944)
  2954  .  .  .  .  .  Data: nil
  2955  .  .  .  .  .  Type: nil
  2956  .  .  .  .  }
  2957  .  .  .  }
  2958  .  .  .  Type: *ast.FuncType {
  2959  .  .  .  .  Func: example.go:147:1
  2960  .  .  .  .  TypeParams: nil
  2961  .  .  .  .  Params: *ast.FieldList {
  2962  .  .  .  .  .  Opening: example.go:147:22
  2963  .  .  .  .  .  List: []*ast.Field (len = 2) {
  2964  .  .  .  .  .  .  0: *ast.Field {
  2965  .  .  .  .  .  .  .  Doc: nil
  2966  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2967  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2968  .  .  .  .  .  .  .  .  .  NamePos: example.go:147:23
  2969  .  .  .  .  .  .  .  .  .  Name: "u1"
  2970  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2971  .  .  .  .  .  .  .  .  .  .  Kind: var
  2972  .  .  .  .  .  .  .  .  .  .  Name: "u1"
  2973  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2964)
  2974  .  .  .  .  .  .  .  .  .  .  Data: nil
  2975  .  .  .  .  .  .  .  .  .  .  Type: nil
  2976  .  .  .  .  .  .  .  .  .  }
  2977  .  .  .  .  .  .  .  .  }
  2978  .  .  .  .  .  .  .  }
  2979  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  2980  .  .  .  .  .  .  .  .  Star: example.go:147:26
  2981  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2982  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2983  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:147:27
  2984  .  .  .  .  .  .  .  .  .  .  Name: "model"
  2985  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2986  .  .  .  .  .  .  .  .  .  }
  2987  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2988  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:147:33
  2989  .  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  2990  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2991  .  .  .  .  .  .  .  .  .  }
  2992  .  .  .  .  .  .  .  .  }
  2993  .  .  .  .  .  .  .  }
  2994  .  .  .  .  .  .  .  Tag: nil
  2995  .  .  .  .  .  .  .  Comment: nil
  2996  .  .  .  .  .  .  }
  2997  .  .  .  .  .  .  1: *ast.Field {
  2998  .  .  .  .  .  .  .  Doc: nil
  2999  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3000  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3001  .  .  .  .  .  .  .  .  .  NamePos: example.go:147:44
  3002  .  .  .  .  .  .  .  .  .  Name: "u2"
  3003  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3004  .  .  .  .  .  .  .  .  .  .  Kind: var
  3005  .  .  .  .  .  .  .  .  .  .  Name: "u2"
  3006  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2997)
  3007  .  .  .  .  .  .  .  .  .  .  Data: nil
  3008  .  .  .  .  .  .  .  .  .  .  Type: nil
  3009  .  .  .  .  .  .  .  .  .  }
  3010  .  .  .  .  .  .  .  .  }
  3011  .  .  .  .  .  .  .  }
  3012  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  3013  .  .  .  .  .  .  .  .  Star: example.go:147:47
  3014  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  3015  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3016  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:147:48
  3017  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3018  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3019  .  .  .  .  .  .  .  .  .  }
  3020  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3021  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:147:54
  3022  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3023  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3024  .  .  .  .  .  .  .  .  .  }
  3025  .  .  .  .  .  .  .  .  }
  3026  .  .  .  .  .  .  .  }
  3027  .  .  .  .  .  .  .  Tag: nil
  3028  .  .  .  .  .  .  .  Comment: nil
  3029  .  .  .  .  .  .  }
  3030  .  .  .  .  .  }
  3031  .  .  .  .  .  Closing: example.go:147:58
  3032  .  .  .  .  }
  3033  .  .  .  .  Results: nil
  3034  .  .  .  }
  3035  .  .  .  Body: *ast.BlockStmt {
  3036  .  .  .  .  Lbrace: example.go:147:60
  3037  .  .  .  .  List: []ast.Stmt (len = 1) {
  3038  .  .  .  .  .  0: *ast.AssignStmt {
  3039  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3040  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  3041  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3042  .  .  .  .  .  .  .  .  .  NamePos: example.go:148:2
  3043  .  .  .  .  .  .  .  .  .  Name: "u2"
  3044  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3003)
  3045  .  .  .  .  .  .  .  .  }
  3046  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3047  .  .  .  .  .  .  .  .  .  NamePos: example.go:148:5
  3048  .  .  .  .  .  .  .  .  .  Name: "Id"
  3049  .  .  .  .  .  .  .  .  .  Obj: nil
  3050  .  .  .  .  .  .  .  .  }
  3051  .  .  .  .  .  .  .  }
  3052  .  .  .  .  .  .  }
  3053  .  .  .  .  .  .  TokPos: example.go:148:8
  3054  .  .  .  .  .  .  Tok: =
  3055  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3056  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  3057  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3058  .  .  .  .  .  .  .  .  .  NamePos: example.go:148:10
  3059  .  .  .  .  .  .  .  .  .  Name: "u1"
  3060  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2970)
  3061  .  .  .  .  .  .  .  .  }
  3062  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3063  .  .  .  .  .  .  .  .  .  NamePos: example.go:148:13
  3064  .  .  .  .  .  .  .  .  .  Name: "Id"
  3065  .  .  .  .  .  .  .  .  .  Obj: nil
  3066  .  .  .  .  .  .  .  .  }
  3067  .  .  .  .  .  .  .  }
  3068  .  .  .  .  .  .  }
  3069  .  .  .  .  .  }
  3070  .  .  .  .  }
  3071  .  .  .  .  Rbrace: example.go:149:1
  3072  .  .  .  }
  3073  .  .  }
  3074  .  .  20: *ast.FuncDecl {
  3075  .  .  .  Doc: nil
  3076  .  .  .  Recv: nil
  3077  .  .  .  Name: *ast.Ident {
  3078  .  .  .  .  NamePos: example.go:151:6
  3079  .  .  .  .  Name: "ToUser1"
  3080  .  .  .  .  Obj: *ast.Object {
  3081  .  .  .  .  .  Kind: func
  3082  .  .  .  .  .  Name: "ToUser1"
  3083  .  .  .  .  .  Decl: *(obj @ 3074)
  3084  .  .  .  .  .  Data: nil
  3085  .  .  .  .  .  Type: nil
  3086  .  .  .  .  }
  3087  .  .  .  }
  3088  .  .  .  Type: *ast.FuncType {
  3089  .  .  .  .  Func: example.go:151:1
  3090  .  .  .  .  TypeParams: nil
  3091  .  .  .  .  Params: *ast.FieldList {
  3092  .  .  .  .  .  Opening: example.go:151:13
  3093  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3094  .  .  .  .  .  .  0: *ast.Field {
  3095  .  .  .  .  .  .  .  Doc: nil
  3096  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3097  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3098  .  .  .  .  .  .  .  .  .  NamePos: example.go:151:14
  3099  .  .  .  .  .  .  .  .  .  Name: "u"
  3100  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3101  .  .  .  .  .  .  .  .  .  .  Kind: var
  3102  .  .  .  .  .  .  .  .  .  .  Name: "u"
  3103  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3094)
  3104  .  .  .  .  .  .  .  .  .  .  Data: nil
  3105  .  .  .  .  .  .  .  .  .  .  Type: nil
  3106  .  .  .  .  .  .  .  .  .  }
  3107  .  .  .  .  .  .  .  .  }
  3108  .  .  .  .  .  .  .  }
  3109  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3110  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3111  .  .  .  .  .  .  .  .  .  NamePos: example.go:151:16
  3112  .  .  .  .  .  .  .  .  .  Name: "model"
  3113  .  .  .  .  .  .  .  .  .  Obj: nil
  3114  .  .  .  .  .  .  .  .  }
  3115  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3116  .  .  .  .  .  .  .  .  .  NamePos: example.go:151:22
  3117  .  .  .  .  .  .  .  .  .  Name: "User"
  3118  .  .  .  .  .  .  .  .  .  Obj: nil
  3119  .  .  .  .  .  .  .  .  }
  3120  .  .  .  .  .  .  .  }
  3121  .  .  .  .  .  .  .  Tag: nil
  3122  .  .  .  .  .  .  .  Comment: nil
  3123  .  .  .  .  .  .  }
  3124  .  .  .  .  .  }
  3125  .  .  .  .  .  Closing: example.go:151:26
  3126  .  .  .  .  }
  3127  .  .  .  .  Results: *ast.FieldList {
  3128  .  .  .  .  .  Opening: -
  3129  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3130  .  .  .  .  .  .  0: *ast.Field {
  3131  .  .  .  .  .  .  .  Doc: nil
  3132  .  .  .  .  .  .  .  Names: nil
  3133  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3134  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3135  .  .  .  .  .  .  .  .  .  NamePos: example.go:151:28
  3136  .  .  .  .  .  .  .  .  .  Name: "model"
  3137  .  .  .  .  .  .  .  .  .  Obj: nil
  3138  .  .  .  .  .  .  .  .  }
  3139  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3140  .  .  .  .  .  .  .  .  .  NamePos: example.go:151:34
  3141  .  .  .  .  .  .  .  .  .  Name: "User"
  3142  .  .  .  .  .  .  .  .  .  Obj: nil
  3143  .  .  .  .  .  .  .  .  }
  3144  .  .  .  .  .  .  .  }
  3145  .  .  .  .  .  .  .  Tag: nil
  3146  .  .  .  .  .  .  .  Comment: nil
  3147  .  .  .  .  .  .  }
  3148  .  .  .  .  .  }
  3149  .  .  .  .  .  Closing: -
  3150  .  .  .  .  }
  3151  .  .  .  }
  3152  .  .  .  Body: *ast.BlockStmt {
  3153  .  .  .  .  Lbrace: example.go:151:39
  3154  .  .  .  .  List: []ast.Stmt (len = 1) {
  3155  .  .  .  .  .  0: *ast.ReturnStmt {
  3156  .  .  .  .  .  .  Return: example.go:152:2
  3157  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3158  .  .  .  .  .  .  .  0: *ast.CompositeLit {
  3159  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3160  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3161  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:152:9
  3162  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3163  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3164  .  .  .  .  .  .  .  .  .  }
  3165  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3166  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:152:15
  3167  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3168  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3169  .  .  .  .  .  .  .  .  .  }
  3170  .  .  .  .  .  .  .  .  }
  3171  .  .  .  .  .  .  .  .  Lbrace: example.go:152:19
  3172  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  3173  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  3174  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  3175  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:153:3
  3176  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3177  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3178  .  .  .  .  .  .  .  .  .  .  }
  3179  .  .  .  .  .  .  .  .  .  .  Colon: example.go:153:5
  3180  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  3181  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3182  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:153:7
  3183  .  .  .  .  .  .  .  .  .  .  .  .  Name: "u"
  3184  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3100)
  3185  .  .  .  .  .  .  .  .  .  .  .  }
  3186  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3187  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:153:9
  3188  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3189  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3190  .  .  .  .  .  .  .  .  .  .  .  }
  3191  .  .  .  .  .  .  .  .  .  .  }
  3192  .  .  .  .  .  .  .  .  .  }
  3193  .  .  .  .  .  .  .  .  }
  3194  .  .  .  .  .  .  .  .  Rbrace: example.go:154:2
  3195  .  .  .  .  .  .  .  .  Incomplete: false
  3196  .  .  .  .  .  .  .  }
  3197  .  .  .  .  .  .  }
  3198  .  .  .  .  .  }
  3199  .  .  .  .  }
  3200  .  .  .  .  Rbrace: example.go:155:1
  3201  .  .  .  }
  3202  .  .  }
  3203  .  .  21: *ast.FuncDecl {
  3204  .  .  .  Doc: nil
  3205  .  .  .  Recv: nil
  3206  .  .  .  Name: *ast.Ident {
  3207  .  .  .  .  NamePos: example.go:157:6
  3208  .  .  .  .  Name: "ToUser2"
  3209  .  .  .  .  Obj: *ast.Object {
  3210  .  .  .  .  .  Kind: func
  3211  .  .  .  .  .  Name: "ToUser2"
  3212  .  .  .  .  .  Decl: *(obj @ 3203)
  3213  .  .  .  .  .  Data: nil
  3214  .  .  .  .  .  Type: nil
  3215  .  .  .  .  }
  3216  .  .  .  }
  3217  .  .  .  Type: *ast.FuncType {
  3218  .  .  .  .  Func: example.go:157:1
  3219  .  .  .  .  TypeParams: nil
  3220  .  .  .  .  Params: *ast.FieldList {
  3221  .  .  .  .  .  Opening: example.go:157:13
  3222  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3223  .  .  .  .  .  .  0: *ast.Field {
  3224  .  .  .  .  .  .  .  Doc: nil
  3225  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3226  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3227  .  .  .  .  .  .  .  .  .  NamePos: example.go:157:14
  3228  .  .  .  .  .  .  .  .  .  Name: "u"
  3229  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3230  .  .  .  .  .  .  .  .  .  .  Kind: var
  3231  .  .  .  .  .  .  .  .  .  .  Name: "u"
  3232  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3223)
  3233  .  .  .  .  .  .  .  .  .  .  Data: nil
  3234  .  .  .  .  .  .  .  .  .  .  Type: nil
  3235  .  .  .  .  .  .  .  .  .  }
  3236  .  .  .  .  .  .  .  .  }
  3237  .  .  .  .  .  .  .  }
  3238  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  3239  .  .  .  .  .  .  .  .  Star: example.go:157:16
  3240  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  3241  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3242  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:157:17
  3243  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3244  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3245  .  .  .  .  .  .  .  .  .  }
  3246  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3247  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:157:23
  3248  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3249  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3250  .  .  .  .  .  .  .  .  .  }
  3251  .  .  .  .  .  .  .  .  }
  3252  .  .  .  .  .  .  .  }
  3253  .  .  .  .  .  .  .  Tag: nil
  3254  .  .  .  .  .  .  .  Comment: nil
  3255  .  .  .  .  .  .  }
  3256  .  .  .  .  .  }
  3257  .  .  .  .  .  Closing: example.go:157:27
  3258  .  .  .  .  }
  3259  .  .  .  .  Results: *ast.FieldList {
  3260  .  .  .  .  .  Opening: -
  3261  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3262  .  .  .  .  .  .  0: *ast.Field {
  3263  .  .  .  .  .  .  .  Doc: nil
  3264  .  .  .  .  .  .  .  Names: nil
  3265  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3266  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3267  .  .  .  .  .  .  .  .  .  NamePos: example.go:157:29
  3268  .  .  .  .  .  .  .  .  .  Name: "model"
  3269  .  .  .  .  .  .  .  .  .  Obj: nil
  3270  .  .  .  .  .  .  .  .  }
  3271  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3272  .  .  .  .  .  .  .  .  .  NamePos: example.go:157:35
  3273  .  .  .  .  .  .  .  .  .  Name: "User"
  3274  .  .  .  .  .  .  .  .  .  Obj: nil
  3275  .  .  .  .  .  .  .  .  }
  3276  .  .  .  .  .  .  .  }
  3277  .  .  .  .  .  .  .  Tag: nil
  3278  .  .  .  .  .  .  .  Comment: nil
  3279  .  .  .  .  .  .  }
  3280  .  .  .  .  .  }
  3281  .  .  .  .  .  Closing: -
  3282  .  .  .  .  }
  3283  .  .  .  }
  3284  .  .  .  Body: *ast.BlockStmt {
  3285  .  .  .  .  Lbrace: example.go:157:40
  3286  .  .  .  .  List: []ast.Stmt (len = 1) {
  3287  .  .  .  .  .  0: *ast.ReturnStmt {
  3288  .  .  .  .  .  .  Return: example.go:158:2
  3289  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3290  .  .  .  .  .  .  .  0: *ast.CompositeLit {
  3291  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3292  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3293  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:158:9
  3294  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3295  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3296  .  .  .  .  .  .  .  .  .  }
  3297  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3298  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:158:15
  3299  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3300  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3301  .  .  .  .  .  .  .  .  .  }
  3302  .  .  .  .  .  .  .  .  }
  3303  .  .  .  .  .  .  .  .  Lbrace: example.go:158:19
  3304  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  3305  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  3306  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  3307  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:159:3
  3308  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3309  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3310  .  .  .  .  .  .  .  .  .  .  }
  3311  .  .  .  .  .  .  .  .  .  .  Colon: example.go:159:5
  3312  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  3313  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3314  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:159:7
  3315  .  .  .  .  .  .  .  .  .  .  .  .  Name: "u"
  3316  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3229)
  3317  .  .  .  .  .  .  .  .  .  .  .  }
  3318  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3319  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:159:9
  3320  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3321  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3322  .  .  .  .  .  .  .  .  .  .  .  }
  3323  .  .  .  .  .  .  .  .  .  .  }
  3324  .  .  .  .  .  .  .  .  .  }
  3325  .  .  .  .  .  .  .  .  }
  3326  .  .  .  .  .  .  .  .  Rbrace: example.go:160:2
  3327  .  .  .  .  .  .  .  .  Incomplete: false
  3328  .  .  .  .  .  .  .  }
  3329  .  .  .  .  .  .  }
  3330  .  .  .  .  .  }
  3331  .  .  .  .  }
  3332  .  .  .  .  Rbrace: example.go:161:1
  3333  .  .  .  }
  3334  .  .  }
  3335  .  .  22: *ast.FuncDecl {
  3336  .  .  .  Doc: nil
  3337  .  .  .  Recv: nil
  3338  .  .  .  Name: *ast.Ident {
  3339  .  .  .  .  NamePos: example.go:163:6
  3340  .  .  .  .  Name: "ToUser3"
  3341  .  .  .  .  Obj: *ast.Object {
  3342  .  .  .  .  .  Kind: func
  3343  .  .  .  .  .  Name: "ToUser3"
  3344  .  .  .  .  .  Decl: *(obj @ 3335)
  3345  .  .  .  .  .  Data: nil
  3346  .  .  .  .  .  Type: nil
  3347  .  .  .  .  }
  3348  .  .  .  }
  3349  .  .  .  Type: *ast.FuncType {
  3350  .  .  .  .  Func: example.go:163:1
  3351  .  .  .  .  TypeParams: nil
  3352  .  .  .  .  Params: *ast.FieldList {
  3353  .  .  .  .  .  Opening: example.go:163:13
  3354  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3355  .  .  .  .  .  .  0: *ast.Field {
  3356  .  .  .  .  .  .  .  Doc: nil
  3357  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3358  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3359  .  .  .  .  .  .  .  .  .  NamePos: example.go:163:14
  3360  .  .  .  .  .  .  .  .  .  Name: "u"
  3361  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3362  .  .  .  .  .  .  .  .  .  .  Kind: var
  3363  .  .  .  .  .  .  .  .  .  .  Name: "u"
  3364  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3355)
  3365  .  .  .  .  .  .  .  .  .  .  Data: nil
  3366  .  .  .  .  .  .  .  .  .  .  Type: nil
  3367  .  .  .  .  .  .  .  .  .  }
  3368  .  .  .  .  .  .  .  .  }
  3369  .  .  .  .  .  .  .  }
  3370  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3371  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3372  .  .  .  .  .  .  .  .  .  NamePos: example.go:163:16
  3373  .  .  .  .  .  .  .  .  .  Name: "model"
  3374  .  .  .  .  .  .  .  .  .  Obj: nil
  3375  .  .  .  .  .  .  .  .  }
  3376  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3377  .  .  .  .  .  .  .  .  .  NamePos: example.go:163:22
  3378  .  .  .  .  .  .  .  .  .  Name: "User"
  3379  .  .  .  .  .  .  .  .  .  Obj: nil
  3380  .  .  .  .  .  .  .  .  }
  3381  .  .  .  .  .  .  .  }
  3382  .  .  .  .  .  .  .  Tag: nil
  3383  .  .  .  .  .  .  .  Comment: nil
  3384  .  .  .  .  .  .  }
  3385  .  .  .  .  .  }
  3386  .  .  .  .  .  Closing: example.go:163:26
  3387  .  .  .  .  }
  3388  .  .  .  .  Results: *ast.FieldList {
  3389  .  .  .  .  .  Opening: -
  3390  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3391  .  .  .  .  .  .  0: *ast.Field {
  3392  .  .  .  .  .  .  .  Doc: nil
  3393  .  .  .  .  .  .  .  Names: nil
  3394  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  3395  .  .  .  .  .  .  .  .  Star: example.go:163:28
  3396  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  3397  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3398  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:163:29
  3399  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3400  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3401  .  .  .  .  .  .  .  .  .  }
  3402  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3403  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:163:35
  3404  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3405  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3406  .  .  .  .  .  .  .  .  .  }
  3407  .  .  .  .  .  .  .  .  }
  3408  .  .  .  .  .  .  .  }
  3409  .  .  .  .  .  .  .  Tag: nil
  3410  .  .  .  .  .  .  .  Comment: nil
  3411  .  .  .  .  .  .  }
  3412  .  .  .  .  .  }
  3413  .  .  .  .  .  Closing: -
  3414  .  .  .  .  }
  3415  .  .  .  }
  3416  .  .  .  Body: *ast.BlockStmt {
  3417  .  .  .  .  Lbrace: example.go:163:40
  3418  .  .  .  .  List: []ast.Stmt (len = 1) {
  3419  .  .  .  .  .  0: *ast.ReturnStmt {
  3420  .  .  .  .  .  .  Return: example.go:164:2
  3421  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3422  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  3423  .  .  .  .  .  .  .  .  OpPos: example.go:164:9
  3424  .  .  .  .  .  .  .  .  Op: &
  3425  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  3426  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3427  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3428  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:164:10
  3429  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3430  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3431  .  .  .  .  .  .  .  .  .  .  }
  3432  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3433  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:164:16
  3434  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3435  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3436  .  .  .  .  .  .  .  .  .  .  }
  3437  .  .  .  .  .  .  .  .  .  }
  3438  .  .  .  .  .  .  .  .  .  Lbrace: example.go:164:20
  3439  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  3440  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  3441  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  3442  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:165:3
  3443  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3444  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3445  .  .  .  .  .  .  .  .  .  .  .  }
  3446  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:165:5
  3447  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  3448  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3449  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:165:7
  3450  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "u"
  3451  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3361)
  3452  .  .  .  .  .  .  .  .  .  .  .  .  }
  3453  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3454  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:165:9
  3455  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3456  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3457  .  .  .  .  .  .  .  .  .  .  .  .  }
  3458  .  .  .  .  .  .  .  .  .  .  .  }
  3459  .  .  .  .  .  .  .  .  .  .  }
  3460  .  .  .  .  .  .  .  .  .  }
  3461  .  .  .  .  .  .  .  .  .  Rbrace: example.go:166:2
  3462  .  .  .  .  .  .  .  .  .  Incomplete: false
  3463  .  .  .  .  .  .  .  .  }
  3464  .  .  .  .  .  .  .  }
  3465  .  .  .  .  .  .  }
  3466  .  .  .  .  .  }
  3467  .  .  .  .  }
  3468  .  .  .  .  Rbrace: example.go:167:1
  3469  .  .  .  }
  3470  .  .  }
  3471  .  .  23: *ast.FuncDecl {
  3472  .  .  .  Doc: nil
  3473  .  .  .  Recv: nil
  3474  .  .  .  Name: *ast.Ident {
  3475  .  .  .  .  NamePos: example.go:169:6
  3476  .  .  .  .  Name: "ToUser4"
  3477  .  .  .  .  Obj: *ast.Object {
  3478  .  .  .  .  .  Kind: func
  3479  .  .  .  .  .  Name: "ToUser4"
  3480  .  .  .  .  .  Decl: *(obj @ 3471)
  3481  .  .  .  .  .  Data: nil
  3482  .  .  .  .  .  Type: nil
  3483  .  .  .  .  }
  3484  .  .  .  }
  3485  .  .  .  Type: *ast.FuncType {
  3486  .  .  .  .  Func: example.go:169:1
  3487  .  .  .  .  TypeParams: nil
  3488  .  .  .  .  Params: *ast.FieldList {
  3489  .  .  .  .  .  Opening: example.go:169:13
  3490  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3491  .  .  .  .  .  .  0: *ast.Field {
  3492  .  .  .  .  .  .  .  Doc: nil
  3493  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3494  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3495  .  .  .  .  .  .  .  .  .  NamePos: example.go:169:14
  3496  .  .  .  .  .  .  .  .  .  Name: "u"
  3497  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3498  .  .  .  .  .  .  .  .  .  .  Kind: var
  3499  .  .  .  .  .  .  .  .  .  .  Name: "u"
  3500  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3491)
  3501  .  .  .  .  .  .  .  .  .  .  Data: nil
  3502  .  .  .  .  .  .  .  .  .  .  Type: nil
  3503  .  .  .  .  .  .  .  .  .  }
  3504  .  .  .  .  .  .  .  .  }
  3505  .  .  .  .  .  .  .  }
  3506  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  3507  .  .  .  .  .  .  .  .  Star: example.go:169:16
  3508  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  3509  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3510  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:169:17
  3511  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3512  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3513  .  .  .  .  .  .  .  .  .  }
  3514  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3515  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:169:23
  3516  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3517  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3518  .  .  .  .  .  .  .  .  .  }
  3519  .  .  .  .  .  .  .  .  }
  3520  .  .  .  .  .  .  .  }
  3521  .  .  .  .  .  .  .  Tag: nil
  3522  .  .  .  .  .  .  .  Comment: nil
  3523  .  .  .  .  .  .  }
  3524  .  .  .  .  .  }
  3525  .  .  .  .  .  Closing: example.go:169:27
  3526  .  .  .  .  }
  3527  .  .  .  .  Results: *ast.FieldList {
  3528  .  .  .  .  .  Opening: -
  3529  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3530  .  .  .  .  .  .  0: *ast.Field {
  3531  .  .  .  .  .  .  .  Doc: nil
  3532  .  .  .  .  .  .  .  Names: nil
  3533  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  3534  .  .  .  .  .  .  .  .  Star: example.go:169:29
  3535  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  3536  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3537  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:169:30
  3538  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3539  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3540  .  .  .  .  .  .  .  .  .  }
  3541  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3542  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:169:36
  3543  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3544  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3545  .  .  .  .  .  .  .  .  .  }
  3546  .  .  .  .  .  .  .  .  }
  3547  .  .  .  .  .  .  .  }
  3548  .  .  .  .  .  .  .  Tag: nil
  3549  .  .  .  .  .  .  .  Comment: nil
  3550  .  .  .  .  .  .  }
  3551  .  .  .  .  .  }
  3552  .  .  .  .  .  Closing: -
  3553  .  .  .  .  }
  3554  .  .  .  }
  3555  .  .  .  Body: *ast.BlockStmt {
  3556  .  .  .  .  Lbrace: example.go:169:41
  3557  .  .  .  .  List: []ast.Stmt (len = 1) {
  3558  .  .  .  .  .  0: *ast.ReturnStmt {
  3559  .  .  .  .  .  .  Return: example.go:170:2
  3560  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3561  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  3562  .  .  .  .  .  .  .  .  OpPos: example.go:170:9
  3563  .  .  .  .  .  .  .  .  Op: &
  3564  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  3565  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3566  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3567  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:170:10
  3568  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3569  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3570  .  .  .  .  .  .  .  .  .  .  }
  3571  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3572  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:170:16
  3573  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3574  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3575  .  .  .  .  .  .  .  .  .  .  }
  3576  .  .  .  .  .  .  .  .  .  }
  3577  .  .  .  .  .  .  .  .  .  Lbrace: example.go:170:20
  3578  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  3579  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  3580  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  3581  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:171:3
  3582  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3583  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3584  .  .  .  .  .  .  .  .  .  .  .  }
  3585  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:171:5
  3586  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  3587  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3588  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:171:7
  3589  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "u"
  3590  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3497)
  3591  .  .  .  .  .  .  .  .  .  .  .  .  }
  3592  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3593  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:171:9
  3594  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3595  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3596  .  .  .  .  .  .  .  .  .  .  .  .  }
  3597  .  .  .  .  .  .  .  .  .  .  .  }
  3598  .  .  .  .  .  .  .  .  .  .  }
  3599  .  .  .  .  .  .  .  .  .  }
  3600  .  .  .  .  .  .  .  .  .  Rbrace: example.go:172:2
  3601  .  .  .  .  .  .  .  .  .  Incomplete: false
  3602  .  .  .  .  .  .  .  .  }
  3603  .  .  .  .  .  .  .  }
  3604  .  .  .  .  .  .  }
  3605  .  .  .  .  .  }
  3606  .  .  .  .  }
  3607  .  .  .  .  Rbrace: example.go:173:1
  3608  .  .  .  }
  3609  .  .  }
  3610  .  .  24: *ast.FuncDecl {
  3611  .  .  .  Doc: nil
  3612  .  .  .  Recv: nil
  3613  .  .  .  Name: *ast.Ident {
  3614  .  .  .  .  NamePos: example.go:175:6
  3615  .  .  .  .  Name: "ToUserSlice1"
  3616  .  .  .  .  Obj: *ast.Object {
  3617  .  .  .  .  .  Kind: func
  3618  .  .  .  .  .  Name: "ToUserSlice1"
  3619  .  .  .  .  .  Decl: *(obj @ 3610)
  3620  .  .  .  .  .  Data: nil
  3621  .  .  .  .  .  Type: nil
  3622  .  .  .  .  }
  3623  .  .  .  }
  3624  .  .  .  Type: *ast.FuncType {
  3625  .  .  .  .  Func: example.go:175:1
  3626  .  .  .  .  TypeParams: nil
  3627  .  .  .  .  Params: *ast.FieldList {
  3628  .  .  .  .  .  Opening: example.go:175:18
  3629  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3630  .  .  .  .  .  .  0: *ast.Field {
  3631  .  .  .  .  .  .  .  Doc: nil
  3632  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3633  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3634  .  .  .  .  .  .  .  .  .  NamePos: example.go:175:19
  3635  .  .  .  .  .  .  .  .  .  Name: "us"
  3636  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3637  .  .  .  .  .  .  .  .  .  .  Kind: var
  3638  .  .  .  .  .  .  .  .  .  .  Name: "us"
  3639  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3630)
  3640  .  .  .  .  .  .  .  .  .  .  Data: nil
  3641  .  .  .  .  .  .  .  .  .  .  Type: nil
  3642  .  .  .  .  .  .  .  .  .  }
  3643  .  .  .  .  .  .  .  .  }
  3644  .  .  .  .  .  .  .  }
  3645  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  3646  .  .  .  .  .  .  .  .  Lbrack: example.go:175:22
  3647  .  .  .  .  .  .  .  .  Len: nil
  3648  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
  3649  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3650  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:175:24
  3651  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3652  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3653  .  .  .  .  .  .  .  .  .  }
  3654  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3655  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:175:30
  3656  .  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  3657  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3658  .  .  .  .  .  .  .  .  .  }
  3659  .  .  .  .  .  .  .  .  }
  3660  .  .  .  .  .  .  .  }
  3661  .  .  .  .  .  .  .  Tag: nil
  3662  .  .  .  .  .  .  .  Comment: nil
  3663  .  .  .  .  .  .  }
  3664  .  .  .  .  .  }
  3665  .  .  .  .  .  Closing: example.go:175:39
  3666  .  .  .  .  }
  3667  .  .  .  .  Results: *ast.FieldList {
  3668  .  .  .  .  .  Opening: -
  3669  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3670  .  .  .  .  .  .  0: *ast.Field {
  3671  .  .  .  .  .  .  .  Doc: nil
  3672  .  .  .  .  .  .  .  Names: nil
  3673  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  3674  .  .  .  .  .  .  .  .  Lbrack: example.go:175:41
  3675  .  .  .  .  .  .  .  .  Len: nil
  3676  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
  3677  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3678  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:175:43
  3679  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3680  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3681  .  .  .  .  .  .  .  .  .  }
  3682  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3683  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:175:49
  3684  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3685  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3686  .  .  .  .  .  .  .  .  .  }
  3687  .  .  .  .  .  .  .  .  }
  3688  .  .  .  .  .  .  .  }
  3689  .  .  .  .  .  .  .  Tag: nil
  3690  .  .  .  .  .  .  .  Comment: nil
  3691  .  .  .  .  .  .  }
  3692  .  .  .  .  .  }
  3693  .  .  .  .  .  Closing: -
  3694  .  .  .  .  }
  3695  .  .  .  }
  3696  .  .  .  Body: *ast.BlockStmt {
  3697  .  .  .  .  Lbrace: example.go:175:54
  3698  .  .  .  .  List: []ast.Stmt (len = 3) {
  3699  .  .  .  .  .  0: *ast.AssignStmt {
  3700  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3701  .  .  .  .  .  .  .  0: *ast.Ident {
  3702  .  .  .  .  .  .  .  .  NamePos: example.go:176:2
  3703  .  .  .  .  .  .  .  .  Name: "res"
  3704  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3705  .  .  .  .  .  .  .  .  .  Kind: var
  3706  .  .  .  .  .  .  .  .  .  Name: "res"
  3707  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3699)
  3708  .  .  .  .  .  .  .  .  .  Data: nil
  3709  .  .  .  .  .  .  .  .  .  Type: nil
  3710  .  .  .  .  .  .  .  .  }
  3711  .  .  .  .  .  .  .  }
  3712  .  .  .  .  .  .  }
  3713  .  .  .  .  .  .  TokPos: example.go:176:6
  3714  .  .  .  .  .  .  Tok: :=
  3715  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3716  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3717  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  3718  .  .  .  .  .  .  .  .  .  NamePos: example.go:176:9
  3719  .  .  .  .  .  .  .  .  .  Name: "make"
  3720  .  .  .  .  .  .  .  .  .  Obj: nil
  3721  .  .  .  .  .  .  .  .  }
  3722  .  .  .  .  .  .  .  .  Lparen: example.go:176:13
  3723  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  3724  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
  3725  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:176:14
  3726  .  .  .  .  .  .  .  .  .  .  Len: nil
  3727  .  .  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
  3728  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3729  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:176:16
  3730  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3731  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3732  .  .  .  .  .  .  .  .  .  .  .  }
  3733  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3734  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:176:22
  3735  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3736  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3737  .  .  .  .  .  .  .  .  .  .  .  }
  3738  .  .  .  .  .  .  .  .  .  .  }
  3739  .  .  .  .  .  .  .  .  .  }
  3740  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  3741  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  3742  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:176:28
  3743  .  .  .  .  .  .  .  .  .  .  .  Name: "len"
  3744  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3745  .  .  .  .  .  .  .  .  .  .  }
  3746  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:176:31
  3747  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  3748  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3749  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:176:32
  3750  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  3751  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3636)
  3752  .  .  .  .  .  .  .  .  .  .  .  }
  3753  .  .  .  .  .  .  .  .  .  .  }
  3754  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  3755  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:176:34
  3756  .  .  .  .  .  .  .  .  .  }
  3757  .  .  .  .  .  .  .  .  }
  3758  .  .  .  .  .  .  .  .  Ellipsis: -
  3759  .  .  .  .  .  .  .  .  Rparen: example.go:176:35
  3760  .  .  .  .  .  .  .  }
  3761  .  .  .  .  .  .  }
  3762  .  .  .  .  .  }
  3763  .  .  .  .  .  1: *ast.RangeStmt {
  3764  .  .  .  .  .  .  For: example.go:177:2
  3765  .  .  .  .  .  .  Key: *ast.Ident {
  3766  .  .  .  .  .  .  .  NamePos: example.go:177:6
  3767  .  .  .  .  .  .  .  Name: "i"
  3768  .  .  .  .  .  .  .  Obj: *ast.Object {
  3769  .  .  .  .  .  .  .  .  Kind: var
  3770  .  .  .  .  .  .  .  .  Name: "i"
  3771  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
  3772  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3773  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 3765)
  3774  .  .  .  .  .  .  .  .  .  }
  3775  .  .  .  .  .  .  .  .  .  TokPos: example.go:177:8
  3776  .  .  .  .  .  .  .  .  .  Tok: :=
  3777  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3778  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  3779  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
  3780  .  .  .  .  .  .  .  .  .  .  .  Op: range
  3781  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3782  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:177:17
  3783  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  3784  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3636)
  3785  .  .  .  .  .  .  .  .  .  .  .  }
  3786  .  .  .  .  .  .  .  .  .  .  }
  3787  .  .  .  .  .  .  .  .  .  }
  3788  .  .  .  .  .  .  .  .  }
  3789  .  .  .  .  .  .  .  .  Data: nil
  3790  .  .  .  .  .  .  .  .  Type: nil
  3791  .  .  .  .  .  .  .  }
  3792  .  .  .  .  .  .  }
  3793  .  .  .  .  .  .  Value: nil
  3794  .  .  .  .  .  .  TokPos: example.go:177:8
  3795  .  .  .  .  .  .  Tok: :=
  3796  .  .  .  .  .  .  Range: example.go:177:11
  3797  .  .  .  .  .  .  X: *(obj @ 3781)
  3798  .  .  .  .  .  .  Body: *ast.BlockStmt {
  3799  .  .  .  .  .  .  .  Lbrace: example.go:177:20
  3800  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  3801  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  3802  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3803  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  3804  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3805  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:178:3
  3806  .  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
  3807  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3704)
  3808  .  .  .  .  .  .  .  .  .  .  .  }
  3809  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:178:6
  3810  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  3811  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:178:7
  3812  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  3813  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3768)
  3814  .  .  .  .  .  .  .  .  .  .  .  }
  3815  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:178:8
  3816  .  .  .  .  .  .  .  .  .  .  }
  3817  .  .  .  .  .  .  .  .  .  }
  3818  .  .  .  .  .  .  .  .  .  TokPos: example.go:178:10
  3819  .  .  .  .  .  .  .  .  .  Tok: =
  3820  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3821  .  .  .  .  .  .  .  .  .  .  0: *ast.CompositeLit {
  3822  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  3823  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3824  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:178:12
  3825  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3826  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3827  .  .  .  .  .  .  .  .  .  .  .  .  }
  3828  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3829  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:178:18
  3830  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3831  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3832  .  .  .  .  .  .  .  .  .  .  .  .  }
  3833  .  .  .  .  .  .  .  .  .  .  .  }
  3834  .  .  .  .  .  .  .  .  .  .  .  Lbrace: example.go:178:22
  3835  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  3836  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  3837  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  3838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:179:4
  3839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3841  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3842  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:179:6
  3843  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  3844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.IndexExpr {
  3845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3846  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:179:8
  3847  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  3848  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3636)
  3849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:179:10
  3851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  3852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:179:11
  3853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  3854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3768)
  3855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:179:12
  3857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:179:14
  3860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  3861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3863  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  3864  .  .  .  .  .  .  .  .  .  .  .  .  }
  3865  .  .  .  .  .  .  .  .  .  .  .  }
  3866  .  .  .  .  .  .  .  .  .  .  .  Rbrace: example.go:180:3
  3867  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  3868  .  .  .  .  .  .  .  .  .  .  }
  3869  .  .  .  .  .  .  .  .  .  }
  3870  .  .  .  .  .  .  .  .  }
  3871  .  .  .  .  .  .  .  }
  3872  .  .  .  .  .  .  .  Rbrace: example.go:181:2
  3873  .  .  .  .  .  .  }
  3874  .  .  .  .  .  }
  3875  .  .  .  .  .  2: *ast.ReturnStmt {
  3876  .  .  .  .  .  .  Return: example.go:183:2
  3877  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  3878  .  .  .  .  .  .  .  0: *ast.Ident {
  3879  .  .  .  .  .  .  .  .  NamePos: example.go:183:9
  3880  .  .  .  .  .  .  .  .  Name: "res"
  3881  .  .  .  .  .  .  .  .  Obj: *(obj @ 3704)
  3882  .  .  .  .  .  .  .  }
  3883  .  .  .  .  .  .  }
  3884  .  .  .  .  .  }
  3885  .  .  .  .  }
  3886  .  .  .  .  Rbrace: example.go:184:1
  3887  .  .  .  }
  3888  .  .  }
  3889  .  .  25: *ast.FuncDecl {
  3890  .  .  .  Doc: nil
  3891  .  .  .  Recv: nil
  3892  .  .  .  Name: *ast.Ident {
  3893  .  .  .  .  NamePos: example.go:186:6
  3894  .  .  .  .  Name: "ToUserSlice2"
  3895  .  .  .  .  Obj: *ast.Object {
  3896  .  .  .  .  .  Kind: func
  3897  .  .  .  .  .  Name: "ToUserSlice2"
  3898  .  .  .  .  .  Decl: *(obj @ 3889)
  3899  .  .  .  .  .  Data: nil
  3900  .  .  .  .  .  Type: nil
  3901  .  .  .  .  }
  3902  .  .  .  }
  3903  .  .  .  Type: *ast.FuncType {
  3904  .  .  .  .  Func: example.go:186:1
  3905  .  .  .  .  TypeParams: nil
  3906  .  .  .  .  Params: *ast.FieldList {
  3907  .  .  .  .  .  Opening: example.go:186:18
  3908  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3909  .  .  .  .  .  .  0: *ast.Field {
  3910  .  .  .  .  .  .  .  Doc: nil
  3911  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  3912  .  .  .  .  .  .  .  .  0: *ast.Ident {
  3913  .  .  .  .  .  .  .  .  .  NamePos: example.go:186:19
  3914  .  .  .  .  .  .  .  .  .  Name: "us"
  3915  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3916  .  .  .  .  .  .  .  .  .  .  Kind: var
  3917  .  .  .  .  .  .  .  .  .  .  Name: "us"
  3918  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3909)
  3919  .  .  .  .  .  .  .  .  .  .  Data: nil
  3920  .  .  .  .  .  .  .  .  .  .  Type: nil
  3921  .  .  .  .  .  .  .  .  .  }
  3922  .  .  .  .  .  .  .  .  }
  3923  .  .  .  .  .  .  .  }
  3924  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  3925  .  .  .  .  .  .  .  .  Lbrack: example.go:186:22
  3926  .  .  .  .  .  .  .  .  Len: nil
  3927  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  3928  .  .  .  .  .  .  .  .  .  Star: example.go:186:24
  3929  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  3930  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3931  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:186:25
  3932  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3933  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3934  .  .  .  .  .  .  .  .  .  .  }
  3935  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3936  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:186:31
  3937  .  .  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  3938  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3939  .  .  .  .  .  .  .  .  .  .  }
  3940  .  .  .  .  .  .  .  .  .  }
  3941  .  .  .  .  .  .  .  .  }
  3942  .  .  .  .  .  .  .  }
  3943  .  .  .  .  .  .  .  Tag: nil
  3944  .  .  .  .  .  .  .  Comment: nil
  3945  .  .  .  .  .  .  }
  3946  .  .  .  .  .  }
  3947  .  .  .  .  .  Closing: example.go:186:40
  3948  .  .  .  .  }
  3949  .  .  .  .  Results: *ast.FieldList {
  3950  .  .  .  .  .  Opening: -
  3951  .  .  .  .  .  List: []*ast.Field (len = 1) {
  3952  .  .  .  .  .  .  0: *ast.Field {
  3953  .  .  .  .  .  .  .  Doc: nil
  3954  .  .  .  .  .  .  .  Names: nil
  3955  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  3956  .  .  .  .  .  .  .  .  Lbrack: example.go:186:42
  3957  .  .  .  .  .  .  .  .  Len: nil
  3958  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
  3959  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  3960  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:186:44
  3961  .  .  .  .  .  .  .  .  .  .  Name: "model"
  3962  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3963  .  .  .  .  .  .  .  .  .  }
  3964  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  3965  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:186:50
  3966  .  .  .  .  .  .  .  .  .  .  Name: "User"
  3967  .  .  .  .  .  .  .  .  .  .  Obj: nil
  3968  .  .  .  .  .  .  .  .  .  }
  3969  .  .  .  .  .  .  .  .  }
  3970  .  .  .  .  .  .  .  }
  3971  .  .  .  .  .  .  .  Tag: nil
  3972  .  .  .  .  .  .  .  Comment: nil
  3973  .  .  .  .  .  .  }
  3974  .  .  .  .  .  }
  3975  .  .  .  .  .  Closing: -
  3976  .  .  .  .  }
  3977  .  .  .  }
  3978  .  .  .  Body: *ast.BlockStmt {
  3979  .  .  .  .  Lbrace: example.go:186:55
  3980  .  .  .  .  List: []ast.Stmt (len = 3) {
  3981  .  .  .  .  .  0: *ast.AssignStmt {
  3982  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  3983  .  .  .  .  .  .  .  0: *ast.Ident {
  3984  .  .  .  .  .  .  .  .  NamePos: example.go:187:2
  3985  .  .  .  .  .  .  .  .  Name: "res"
  3986  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  3987  .  .  .  .  .  .  .  .  .  Kind: var
  3988  .  .  .  .  .  .  .  .  .  Name: "res"
  3989  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 3981)
  3990  .  .  .  .  .  .  .  .  .  Data: nil
  3991  .  .  .  .  .  .  .  .  .  Type: nil
  3992  .  .  .  .  .  .  .  .  }
  3993  .  .  .  .  .  .  .  }
  3994  .  .  .  .  .  .  }
  3995  .  .  .  .  .  .  TokPos: example.go:187:6
  3996  .  .  .  .  .  .  Tok: :=
  3997  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  3998  .  .  .  .  .  .  .  0: *ast.CallExpr {
  3999  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4000  .  .  .  .  .  .  .  .  .  NamePos: example.go:187:9
  4001  .  .  .  .  .  .  .  .  .  Name: "make"
  4002  .  .  .  .  .  .  .  .  .  Obj: nil
  4003  .  .  .  .  .  .  .  .  }
  4004  .  .  .  .  .  .  .  .  Lparen: example.go:187:13
  4005  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  4006  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
  4007  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:187:14
  4008  .  .  .  .  .  .  .  .  .  .  Len: nil
  4009  .  .  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
  4010  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4011  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:187:16
  4012  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4013  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4014  .  .  .  .  .  .  .  .  .  .  .  }
  4015  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4016  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:187:22
  4017  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4018  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4019  .  .  .  .  .  .  .  .  .  .  .  }
  4020  .  .  .  .  .  .  .  .  .  .  }
  4021  .  .  .  .  .  .  .  .  .  }
  4022  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  4023  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4024  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:187:28
  4025  .  .  .  .  .  .  .  .  .  .  .  Name: "len"
  4026  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4027  .  .  .  .  .  .  .  .  .  .  }
  4028  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:187:31
  4029  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4030  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4031  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:187:32
  4032  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4033  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3915)
  4034  .  .  .  .  .  .  .  .  .  .  .  }
  4035  .  .  .  .  .  .  .  .  .  .  }
  4036  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4037  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:187:34
  4038  .  .  .  .  .  .  .  .  .  }
  4039  .  .  .  .  .  .  .  .  }
  4040  .  .  .  .  .  .  .  .  Ellipsis: -
  4041  .  .  .  .  .  .  .  .  Rparen: example.go:187:35
  4042  .  .  .  .  .  .  .  }
  4043  .  .  .  .  .  .  }
  4044  .  .  .  .  .  }
  4045  .  .  .  .  .  1: *ast.RangeStmt {
  4046  .  .  .  .  .  .  For: example.go:188:2
  4047  .  .  .  .  .  .  Key: *ast.Ident {
  4048  .  .  .  .  .  .  .  NamePos: example.go:188:6
  4049  .  .  .  .  .  .  .  Name: "i"
  4050  .  .  .  .  .  .  .  Obj: *ast.Object {
  4051  .  .  .  .  .  .  .  .  Kind: var
  4052  .  .  .  .  .  .  .  .  Name: "i"
  4053  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
  4054  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4055  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 4047)
  4056  .  .  .  .  .  .  .  .  .  }
  4057  .  .  .  .  .  .  .  .  .  TokPos: example.go:188:8
  4058  .  .  .  .  .  .  .  .  .  Tok: :=
  4059  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4060  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  4061  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
  4062  .  .  .  .  .  .  .  .  .  .  .  Op: range
  4063  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4064  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:188:17
  4065  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4066  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3915)
  4067  .  .  .  .  .  .  .  .  .  .  .  }
  4068  .  .  .  .  .  .  .  .  .  .  }
  4069  .  .  .  .  .  .  .  .  .  }
  4070  .  .  .  .  .  .  .  .  }
  4071  .  .  .  .  .  .  .  .  Data: nil
  4072  .  .  .  .  .  .  .  .  Type: nil
  4073  .  .  .  .  .  .  .  }
  4074  .  .  .  .  .  .  }
  4075  .  .  .  .  .  .  Value: nil
  4076  .  .  .  .  .  .  TokPos: example.go:188:8
  4077  .  .  .  .  .  .  Tok: :=
  4078  .  .  .  .  .  .  Range: example.go:188:11
  4079  .  .  .  .  .  .  X: *(obj @ 4063)
  4080  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4081  .  .  .  .  .  .  .  Lbrace: example.go:188:20
  4082  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4083  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  4084  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4085  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  4086  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4087  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:189:3
  4088  .  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
  4089  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3986)
  4090  .  .  .  .  .  .  .  .  .  .  .  }
  4091  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:189:6
  4092  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  4093  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:189:7
  4094  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  4095  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4050)
  4096  .  .  .  .  .  .  .  .  .  .  .  }
  4097  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:189:8
  4098  .  .  .  .  .  .  .  .  .  .  }
  4099  .  .  .  .  .  .  .  .  .  }
  4100  .  .  .  .  .  .  .  .  .  TokPos: example.go:189:10
  4101  .  .  .  .  .  .  .  .  .  Tok: =
  4102  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4103  .  .  .  .  .  .  .  .  .  .  0: *ast.CompositeLit {
  4104  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  4105  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4106  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:189:12
  4107  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4108  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4109  .  .  .  .  .  .  .  .  .  .  .  .  }
  4110  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4111  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:189:18
  4112  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4113  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4114  .  .  .  .  .  .  .  .  .  .  .  .  }
  4115  .  .  .  .  .  .  .  .  .  .  .  }
  4116  .  .  .  .  .  .  .  .  .  .  .  Lbrace: example.go:189:22
  4117  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  4118  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  4119  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  4120  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:190:4
  4121  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  4122  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4123  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4124  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:190:6
  4125  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  4126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.IndexExpr {
  4127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:190:8
  4129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 3915)
  4131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:190:10
  4133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  4134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:190:11
  4135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  4136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4050)
  4137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:190:12
  4139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4140  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4141  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:190:14
  4142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  4143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4145  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4146  .  .  .  .  .  .  .  .  .  .  .  .  }
  4147  .  .  .  .  .  .  .  .  .  .  .  }
  4148  .  .  .  .  .  .  .  .  .  .  .  Rbrace: example.go:191:3
  4149  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  4150  .  .  .  .  .  .  .  .  .  .  }
  4151  .  .  .  .  .  .  .  .  .  }
  4152  .  .  .  .  .  .  .  .  }
  4153  .  .  .  .  .  .  .  }
  4154  .  .  .  .  .  .  .  Rbrace: example.go:192:2
  4155  .  .  .  .  .  .  }
  4156  .  .  .  .  .  }
  4157  .  .  .  .  .  2: *ast.ReturnStmt {
  4158  .  .  .  .  .  .  Return: example.go:194:2
  4159  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4160  .  .  .  .  .  .  .  0: *ast.Ident {
  4161  .  .  .  .  .  .  .  .  NamePos: example.go:194:9
  4162  .  .  .  .  .  .  .  .  Name: "res"
  4163  .  .  .  .  .  .  .  .  Obj: *(obj @ 3986)
  4164  .  .  .  .  .  .  .  }
  4165  .  .  .  .  .  .  }
  4166  .  .  .  .  .  }
  4167  .  .  .  .  }
  4168  .  .  .  .  Rbrace: example.go:195:1
  4169  .  .  .  }
  4170  .  .  }
  4171  .  .  26: *ast.FuncDecl {
  4172  .  .  .  Doc: nil
  4173  .  .  .  Recv: nil
  4174  .  .  .  Name: *ast.Ident {
  4175  .  .  .  .  NamePos: example.go:197:6
  4176  .  .  .  .  Name: "ToUserSlice3"
  4177  .  .  .  .  Obj: *ast.Object {
  4178  .  .  .  .  .  Kind: func
  4179  .  .  .  .  .  Name: "ToUserSlice3"
  4180  .  .  .  .  .  Decl: *(obj @ 4171)
  4181  .  .  .  .  .  Data: nil
  4182  .  .  .  .  .  Type: nil
  4183  .  .  .  .  }
  4184  .  .  .  }
  4185  .  .  .  Type: *ast.FuncType {
  4186  .  .  .  .  Func: example.go:197:1
  4187  .  .  .  .  TypeParams: nil
  4188  .  .  .  .  Params: *ast.FieldList {
  4189  .  .  .  .  .  Opening: example.go:197:18
  4190  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4191  .  .  .  .  .  .  0: *ast.Field {
  4192  .  .  .  .  .  .  .  Doc: nil
  4193  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4194  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4195  .  .  .  .  .  .  .  .  .  NamePos: example.go:197:19
  4196  .  .  .  .  .  .  .  .  .  Name: "us"
  4197  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4198  .  .  .  .  .  .  .  .  .  .  Kind: var
  4199  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4200  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4191)
  4201  .  .  .  .  .  .  .  .  .  .  Data: nil
  4202  .  .  .  .  .  .  .  .  .  .  Type: nil
  4203  .  .  .  .  .  .  .  .  .  }
  4204  .  .  .  .  .  .  .  .  }
  4205  .  .  .  .  .  .  .  }
  4206  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  4207  .  .  .  .  .  .  .  .  Lbrack: example.go:197:22
  4208  .  .  .  .  .  .  .  .  Len: nil
  4209  .  .  .  .  .  .  .  .  Elt: *ast.SelectorExpr {
  4210  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4211  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:197:24
  4212  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4213  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4214  .  .  .  .  .  .  .  .  .  }
  4215  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4216  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:197:30
  4217  .  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  4218  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4219  .  .  .  .  .  .  .  .  .  }
  4220  .  .  .  .  .  .  .  .  }
  4221  .  .  .  .  .  .  .  }
  4222  .  .  .  .  .  .  .  Tag: nil
  4223  .  .  .  .  .  .  .  Comment: nil
  4224  .  .  .  .  .  .  }
  4225  .  .  .  .  .  }
  4226  .  .  .  .  .  Closing: example.go:197:39
  4227  .  .  .  .  }
  4228  .  .  .  .  Results: *ast.FieldList {
  4229  .  .  .  .  .  Opening: -
  4230  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4231  .  .  .  .  .  .  0: *ast.Field {
  4232  .  .  .  .  .  .  .  Doc: nil
  4233  .  .  .  .  .  .  .  Names: nil
  4234  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  4235  .  .  .  .  .  .  .  .  Lbrack: example.go:197:41
  4236  .  .  .  .  .  .  .  .  Len: nil
  4237  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  4238  .  .  .  .  .  .  .  .  .  Star: example.go:197:43
  4239  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  4240  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4241  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:197:44
  4242  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4243  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4244  .  .  .  .  .  .  .  .  .  .  }
  4245  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4246  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:197:50
  4247  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4248  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4249  .  .  .  .  .  .  .  .  .  .  }
  4250  .  .  .  .  .  .  .  .  .  }
  4251  .  .  .  .  .  .  .  .  }
  4252  .  .  .  .  .  .  .  }
  4253  .  .  .  .  .  .  .  Tag: nil
  4254  .  .  .  .  .  .  .  Comment: nil
  4255  .  .  .  .  .  .  }
  4256  .  .  .  .  .  }
  4257  .  .  .  .  .  Closing: -
  4258  .  .  .  .  }
  4259  .  .  .  }
  4260  .  .  .  Body: *ast.BlockStmt {
  4261  .  .  .  .  Lbrace: example.go:197:55
  4262  .  .  .  .  List: []ast.Stmt (len = 3) {
  4263  .  .  .  .  .  0: *ast.AssignStmt {
  4264  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4265  .  .  .  .  .  .  .  0: *ast.Ident {
  4266  .  .  .  .  .  .  .  .  NamePos: example.go:198:2
  4267  .  .  .  .  .  .  .  .  Name: "res"
  4268  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4269  .  .  .  .  .  .  .  .  .  Kind: var
  4270  .  .  .  .  .  .  .  .  .  Name: "res"
  4271  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4263)
  4272  .  .  .  .  .  .  .  .  .  Data: nil
  4273  .  .  .  .  .  .  .  .  .  Type: nil
  4274  .  .  .  .  .  .  .  .  }
  4275  .  .  .  .  .  .  .  }
  4276  .  .  .  .  .  .  }
  4277  .  .  .  .  .  .  TokPos: example.go:198:6
  4278  .  .  .  .  .  .  Tok: :=
  4279  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4280  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4281  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4282  .  .  .  .  .  .  .  .  .  NamePos: example.go:198:9
  4283  .  .  .  .  .  .  .  .  .  Name: "make"
  4284  .  .  .  .  .  .  .  .  .  Obj: nil
  4285  .  .  .  .  .  .  .  .  }
  4286  .  .  .  .  .  .  .  .  Lparen: example.go:198:13
  4287  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  4288  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
  4289  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:198:14
  4290  .  .  .  .  .  .  .  .  .  .  Len: nil
  4291  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  4292  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:198:16
  4293  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  4294  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4295  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:198:17
  4296  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4297  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4298  .  .  .  .  .  .  .  .  .  .  .  .  }
  4299  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4300  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:198:23
  4301  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4302  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4303  .  .  .  .  .  .  .  .  .  .  .  .  }
  4304  .  .  .  .  .  .  .  .  .  .  .  }
  4305  .  .  .  .  .  .  .  .  .  .  }
  4306  .  .  .  .  .  .  .  .  .  }
  4307  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  4308  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4309  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:198:29
  4310  .  .  .  .  .  .  .  .  .  .  .  Name: "len"
  4311  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4312  .  .  .  .  .  .  .  .  .  .  }
  4313  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:198:32
  4314  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4315  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4316  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:198:33
  4317  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4318  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4197)
  4319  .  .  .  .  .  .  .  .  .  .  .  }
  4320  .  .  .  .  .  .  .  .  .  .  }
  4321  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4322  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:198:35
  4323  .  .  .  .  .  .  .  .  .  }
  4324  .  .  .  .  .  .  .  .  }
  4325  .  .  .  .  .  .  .  .  Ellipsis: -
  4326  .  .  .  .  .  .  .  .  Rparen: example.go:198:36
  4327  .  .  .  .  .  .  .  }
  4328  .  .  .  .  .  .  }
  4329  .  .  .  .  .  }
  4330  .  .  .  .  .  1: *ast.RangeStmt {
  4331  .  .  .  .  .  .  For: example.go:199:2
  4332  .  .  .  .  .  .  Key: *ast.Ident {
  4333  .  .  .  .  .  .  .  NamePos: example.go:199:6
  4334  .  .  .  .  .  .  .  Name: "i"
  4335  .  .  .  .  .  .  .  Obj: *ast.Object {
  4336  .  .  .  .  .  .  .  .  Kind: var
  4337  .  .  .  .  .  .  .  .  Name: "i"
  4338  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
  4339  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4340  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 4332)
  4341  .  .  .  .  .  .  .  .  .  }
  4342  .  .  .  .  .  .  .  .  .  TokPos: example.go:199:8
  4343  .  .  .  .  .  .  .  .  .  Tok: :=
  4344  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4345  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  4346  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
  4347  .  .  .  .  .  .  .  .  .  .  .  Op: range
  4348  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4349  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:199:17
  4350  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4351  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4197)
  4352  .  .  .  .  .  .  .  .  .  .  .  }
  4353  .  .  .  .  .  .  .  .  .  .  }
  4354  .  .  .  .  .  .  .  .  .  }
  4355  .  .  .  .  .  .  .  .  }
  4356  .  .  .  .  .  .  .  .  Data: nil
  4357  .  .  .  .  .  .  .  .  Type: nil
  4358  .  .  .  .  .  .  .  }
  4359  .  .  .  .  .  .  }
  4360  .  .  .  .  .  .  Value: nil
  4361  .  .  .  .  .  .  TokPos: example.go:199:8
  4362  .  .  .  .  .  .  Tok: :=
  4363  .  .  .  .  .  .  Range: example.go:199:11
  4364  .  .  .  .  .  .  X: *(obj @ 4348)
  4365  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4366  .  .  .  .  .  .  .  Lbrace: example.go:199:20
  4367  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4368  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  4369  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4370  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  4371  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4372  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:200:3
  4373  .  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
  4374  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4268)
  4375  .  .  .  .  .  .  .  .  .  .  .  }
  4376  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:200:6
  4377  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  4378  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:200:7
  4379  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  4380  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4335)
  4381  .  .  .  .  .  .  .  .  .  .  .  }
  4382  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:200:8
  4383  .  .  .  .  .  .  .  .  .  .  }
  4384  .  .  .  .  .  .  .  .  .  }
  4385  .  .  .  .  .  .  .  .  .  TokPos: example.go:200:10
  4386  .  .  .  .  .  .  .  .  .  Tok: =
  4387  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4388  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  4389  .  .  .  .  .  .  .  .  .  .  .  OpPos: example.go:200:12
  4390  .  .  .  .  .  .  .  .  .  .  .  Op: &
  4391  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  4392  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  4393  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4394  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:200:13
  4395  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4396  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4397  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4398  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4399  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:200:19
  4400  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4401  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4402  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4403  .  .  .  .  .  .  .  .  .  .  .  .  }
  4404  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: example.go:200:23
  4405  .  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  4406  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  4407  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  4408  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:201:4
  4409  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  4410  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4411  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4412  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:201:6
  4413  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  4414  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.IndexExpr {
  4415  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4416  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:201:8
  4417  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4418  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4197)
  4419  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4420  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:201:10
  4421  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  4422  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:201:11
  4423  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  4424  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4335)
  4425  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4426  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:201:12
  4427  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4428  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4429  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:201:14
  4430  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  4431  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4432  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4433  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4434  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4435  .  .  .  .  .  .  .  .  .  .  .  .  }
  4436  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: example.go:202:3
  4437  .  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  4438  .  .  .  .  .  .  .  .  .  .  .  }
  4439  .  .  .  .  .  .  .  .  .  .  }
  4440  .  .  .  .  .  .  .  .  .  }
  4441  .  .  .  .  .  .  .  .  }
  4442  .  .  .  .  .  .  .  }
  4443  .  .  .  .  .  .  .  Rbrace: example.go:203:2
  4444  .  .  .  .  .  .  }
  4445  .  .  .  .  .  }
  4446  .  .  .  .  .  2: *ast.ReturnStmt {
  4447  .  .  .  .  .  .  Return: example.go:205:2
  4448  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4449  .  .  .  .  .  .  .  0: *ast.Ident {
  4450  .  .  .  .  .  .  .  .  NamePos: example.go:205:9
  4451  .  .  .  .  .  .  .  .  Name: "res"
  4452  .  .  .  .  .  .  .  .  Obj: *(obj @ 4268)
  4453  .  .  .  .  .  .  .  }
  4454  .  .  .  .  .  .  }
  4455  .  .  .  .  .  }
  4456  .  .  .  .  }
  4457  .  .  .  .  Rbrace: example.go:206:1
  4458  .  .  .  }
  4459  .  .  }
  4460  .  .  27: *ast.FuncDecl {
  4461  .  .  .  Doc: nil
  4462  .  .  .  Recv: nil
  4463  .  .  .  Name: *ast.Ident {
  4464  .  .  .  .  NamePos: example.go:208:6
  4465  .  .  .  .  Name: "ToUserSlice4"
  4466  .  .  .  .  Obj: *ast.Object {
  4467  .  .  .  .  .  Kind: func
  4468  .  .  .  .  .  Name: "ToUserSlice4"
  4469  .  .  .  .  .  Decl: *(obj @ 4460)
  4470  .  .  .  .  .  Data: nil
  4471  .  .  .  .  .  Type: nil
  4472  .  .  .  .  }
  4473  .  .  .  }
  4474  .  .  .  Type: *ast.FuncType {
  4475  .  .  .  .  Func: example.go:208:1
  4476  .  .  .  .  TypeParams: nil
  4477  .  .  .  .  Params: *ast.FieldList {
  4478  .  .  .  .  .  Opening: example.go:208:18
  4479  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4480  .  .  .  .  .  .  0: *ast.Field {
  4481  .  .  .  .  .  .  .  Doc: nil
  4482  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4483  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4484  .  .  .  .  .  .  .  .  .  NamePos: example.go:208:19
  4485  .  .  .  .  .  .  .  .  .  Name: "us"
  4486  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4487  .  .  .  .  .  .  .  .  .  .  Kind: var
  4488  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4489  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4480)
  4490  .  .  .  .  .  .  .  .  .  .  Data: nil
  4491  .  .  .  .  .  .  .  .  .  .  Type: nil
  4492  .  .  .  .  .  .  .  .  .  }
  4493  .  .  .  .  .  .  .  .  }
  4494  .  .  .  .  .  .  .  }
  4495  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  4496  .  .  .  .  .  .  .  .  Lbrack: example.go:208:22
  4497  .  .  .  .  .  .  .  .  Len: nil
  4498  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  4499  .  .  .  .  .  .  .  .  .  Star: example.go:208:24
  4500  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  4501  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4502  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:208:25
  4503  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4504  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4505  .  .  .  .  .  .  .  .  .  .  }
  4506  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4507  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:208:31
  4508  .  .  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  4509  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4510  .  .  .  .  .  .  .  .  .  .  }
  4511  .  .  .  .  .  .  .  .  .  }
  4512  .  .  .  .  .  .  .  .  }
  4513  .  .  .  .  .  .  .  }
  4514  .  .  .  .  .  .  .  Tag: nil
  4515  .  .  .  .  .  .  .  Comment: nil
  4516  .  .  .  .  .  .  }
  4517  .  .  .  .  .  }
  4518  .  .  .  .  .  Closing: example.go:208:40
  4519  .  .  .  .  }
  4520  .  .  .  .  Results: *ast.FieldList {
  4521  .  .  .  .  .  Opening: -
  4522  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4523  .  .  .  .  .  .  0: *ast.Field {
  4524  .  .  .  .  .  .  .  Doc: nil
  4525  .  .  .  .  .  .  .  Names: nil
  4526  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  4527  .  .  .  .  .  .  .  .  Lbrack: example.go:208:42
  4528  .  .  .  .  .  .  .  .  Len: nil
  4529  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  4530  .  .  .  .  .  .  .  .  .  Star: example.go:208:44
  4531  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  4532  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4533  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:208:45
  4534  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4535  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4536  .  .  .  .  .  .  .  .  .  .  }
  4537  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4538  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:208:51
  4539  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4540  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4541  .  .  .  .  .  .  .  .  .  .  }
  4542  .  .  .  .  .  .  .  .  .  }
  4543  .  .  .  .  .  .  .  .  }
  4544  .  .  .  .  .  .  .  }
  4545  .  .  .  .  .  .  .  Tag: nil
  4546  .  .  .  .  .  .  .  Comment: nil
  4547  .  .  .  .  .  .  }
  4548  .  .  .  .  .  }
  4549  .  .  .  .  .  Closing: -
  4550  .  .  .  .  }
  4551  .  .  .  }
  4552  .  .  .  Body: *ast.BlockStmt {
  4553  .  .  .  .  Lbrace: example.go:208:56
  4554  .  .  .  .  List: []ast.Stmt (len = 3) {
  4555  .  .  .  .  .  0: *ast.AssignStmt {
  4556  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4557  .  .  .  .  .  .  .  0: *ast.Ident {
  4558  .  .  .  .  .  .  .  .  NamePos: example.go:209:2
  4559  .  .  .  .  .  .  .  .  Name: "res"
  4560  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4561  .  .  .  .  .  .  .  .  .  Kind: var
  4562  .  .  .  .  .  .  .  .  .  Name: "res"
  4563  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4555)
  4564  .  .  .  .  .  .  .  .  .  Data: nil
  4565  .  .  .  .  .  .  .  .  .  Type: nil
  4566  .  .  .  .  .  .  .  .  }
  4567  .  .  .  .  .  .  .  }
  4568  .  .  .  .  .  .  }
  4569  .  .  .  .  .  .  TokPos: example.go:209:6
  4570  .  .  .  .  .  .  Tok: :=
  4571  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4572  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4573  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4574  .  .  .  .  .  .  .  .  .  NamePos: example.go:209:9
  4575  .  .  .  .  .  .  .  .  .  Name: "make"
  4576  .  .  .  .  .  .  .  .  .  Obj: nil
  4577  .  .  .  .  .  .  .  .  }
  4578  .  .  .  .  .  .  .  .  Lparen: example.go:209:13
  4579  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  4580  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
  4581  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:209:14
  4582  .  .  .  .  .  .  .  .  .  .  Len: nil
  4583  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  4584  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:209:16
  4585  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  4586  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4587  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:209:17
  4588  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4589  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4590  .  .  .  .  .  .  .  .  .  .  .  .  }
  4591  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4592  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:209:23
  4593  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4594  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4595  .  .  .  .  .  .  .  .  .  .  .  .  }
  4596  .  .  .  .  .  .  .  .  .  .  .  }
  4597  .  .  .  .  .  .  .  .  .  .  }
  4598  .  .  .  .  .  .  .  .  .  }
  4599  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  4600  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4601  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:209:29
  4602  .  .  .  .  .  .  .  .  .  .  .  Name: "len"
  4603  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4604  .  .  .  .  .  .  .  .  .  .  }
  4605  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:209:32
  4606  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4607  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4608  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:209:33
  4609  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4610  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4486)
  4611  .  .  .  .  .  .  .  .  .  .  .  }
  4612  .  .  .  .  .  .  .  .  .  .  }
  4613  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4614  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:209:35
  4615  .  .  .  .  .  .  .  .  .  }
  4616  .  .  .  .  .  .  .  .  }
  4617  .  .  .  .  .  .  .  .  Ellipsis: -
  4618  .  .  .  .  .  .  .  .  Rparen: example.go:209:36
  4619  .  .  .  .  .  .  .  }
  4620  .  .  .  .  .  .  }
  4621  .  .  .  .  .  }
  4622  .  .  .  .  .  1: *ast.RangeStmt {
  4623  .  .  .  .  .  .  For: example.go:210:2
  4624  .  .  .  .  .  .  Key: *ast.Ident {
  4625  .  .  .  .  .  .  .  NamePos: example.go:210:6
  4626  .  .  .  .  .  .  .  Name: "i"
  4627  .  .  .  .  .  .  .  Obj: *ast.Object {
  4628  .  .  .  .  .  .  .  .  Kind: var
  4629  .  .  .  .  .  .  .  .  Name: "i"
  4630  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
  4631  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4632  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 4624)
  4633  .  .  .  .  .  .  .  .  .  }
  4634  .  .  .  .  .  .  .  .  .  TokPos: example.go:210:8
  4635  .  .  .  .  .  .  .  .  .  Tok: :=
  4636  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4637  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  4638  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
  4639  .  .  .  .  .  .  .  .  .  .  .  Op: range
  4640  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4641  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:210:17
  4642  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4643  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4486)
  4644  .  .  .  .  .  .  .  .  .  .  .  }
  4645  .  .  .  .  .  .  .  .  .  .  }
  4646  .  .  .  .  .  .  .  .  .  }
  4647  .  .  .  .  .  .  .  .  }
  4648  .  .  .  .  .  .  .  .  Data: nil
  4649  .  .  .  .  .  .  .  .  Type: nil
  4650  .  .  .  .  .  .  .  }
  4651  .  .  .  .  .  .  }
  4652  .  .  .  .  .  .  Value: nil
  4653  .  .  .  .  .  .  TokPos: example.go:210:8
  4654  .  .  .  .  .  .  Tok: :=
  4655  .  .  .  .  .  .  Range: example.go:210:11
  4656  .  .  .  .  .  .  X: *(obj @ 4640)
  4657  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4658  .  .  .  .  .  .  .  Lbrace: example.go:210:20
  4659  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4660  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  4661  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4662  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  4663  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4664  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:211:3
  4665  .  .  .  .  .  .  .  .  .  .  .  .  Name: "res"
  4666  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4560)
  4667  .  .  .  .  .  .  .  .  .  .  .  }
  4668  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:211:6
  4669  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  4670  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:211:7
  4671  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  4672  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4627)
  4673  .  .  .  .  .  .  .  .  .  .  .  }
  4674  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:211:8
  4675  .  .  .  .  .  .  .  .  .  .  }
  4676  .  .  .  .  .  .  .  .  .  }
  4677  .  .  .  .  .  .  .  .  .  TokPos: example.go:211:10
  4678  .  .  .  .  .  .  .  .  .  Tok: =
  4679  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4680  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  4681  .  .  .  .  .  .  .  .  .  .  .  OpPos: example.go:211:12
  4682  .  .  .  .  .  .  .  .  .  .  .  Op: &
  4683  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  4684  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  4685  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:211:13
  4687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4689  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4690  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:211:19
  4692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4694  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4695  .  .  .  .  .  .  .  .  .  .  .  .  }
  4696  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: example.go:211:23
  4697  .  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  4698  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  4699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  4700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:212:4
  4701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  4702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:212:6
  4705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  4706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.IndexExpr {
  4707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:212:8
  4709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4486)
  4711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:212:10
  4713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  4714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:212:11
  4715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  4716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4627)
  4717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:212:12
  4719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:212:14
  4722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  4723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4726  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4727  .  .  .  .  .  .  .  .  .  .  .  .  }
  4728  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: example.go:213:3
  4729  .  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  4730  .  .  .  .  .  .  .  .  .  .  .  }
  4731  .  .  .  .  .  .  .  .  .  .  }
  4732  .  .  .  .  .  .  .  .  .  }
  4733  .  .  .  .  .  .  .  .  }
  4734  .  .  .  .  .  .  .  }
  4735  .  .  .  .  .  .  .  Rbrace: example.go:214:2
  4736  .  .  .  .  .  .  }
  4737  .  .  .  .  .  }
  4738  .  .  .  .  .  2: *ast.ReturnStmt {
  4739  .  .  .  .  .  .  Return: example.go:216:2
  4740  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  4741  .  .  .  .  .  .  .  0: *ast.Ident {
  4742  .  .  .  .  .  .  .  .  NamePos: example.go:216:9
  4743  .  .  .  .  .  .  .  .  Name: "res"
  4744  .  .  .  .  .  .  .  .  Obj: *(obj @ 4560)
  4745  .  .  .  .  .  .  .  }
  4746  .  .  .  .  .  .  }
  4747  .  .  .  .  .  }
  4748  .  .  .  .  }
  4749  .  .  .  .  Rbrace: example.go:217:1
  4750  .  .  .  }
  4751  .  .  }
  4752  .  .  28: *ast.FuncDecl {
  4753  .  .  .  Doc: nil
  4754  .  .  .  Recv: nil
  4755  .  .  .  Name: *ast.Ident {
  4756  .  .  .  .  NamePos: example.go:219:6
  4757  .  .  .  .  Name: "ToUserSlice5"
  4758  .  .  .  .  Obj: *ast.Object {
  4759  .  .  .  .  .  Kind: func
  4760  .  .  .  .  .  Name: "ToUserSlice5"
  4761  .  .  .  .  .  Decl: *(obj @ 4752)
  4762  .  .  .  .  .  Data: nil
  4763  .  .  .  .  .  Type: nil
  4764  .  .  .  .  }
  4765  .  .  .  }
  4766  .  .  .  Type: *ast.FuncType {
  4767  .  .  .  .  Func: example.go:219:1
  4768  .  .  .  .  TypeParams: nil
  4769  .  .  .  .  Params: *ast.FieldList {
  4770  .  .  .  .  .  Opening: example.go:219:18
  4771  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4772  .  .  .  .  .  .  0: *ast.Field {
  4773  .  .  .  .  .  .  .  Doc: nil
  4774  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4775  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4776  .  .  .  .  .  .  .  .  .  NamePos: example.go:219:19
  4777  .  .  .  .  .  .  .  .  .  Name: "us"
  4778  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4779  .  .  .  .  .  .  .  .  .  .  Kind: var
  4780  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4781  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4772)
  4782  .  .  .  .  .  .  .  .  .  .  Data: nil
  4783  .  .  .  .  .  .  .  .  .  .  Type: nil
  4784  .  .  .  .  .  .  .  .  .  }
  4785  .  .  .  .  .  .  .  .  }
  4786  .  .  .  .  .  .  .  }
  4787  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  4788  .  .  .  .  .  .  .  .  Lbrack: example.go:219:22
  4789  .  .  .  .  .  .  .  .  Len: nil
  4790  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  4791  .  .  .  .  .  .  .  .  .  Star: example.go:219:24
  4792  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  4793  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4794  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:219:25
  4795  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4796  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4797  .  .  .  .  .  .  .  .  .  .  }
  4798  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4799  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:219:31
  4800  .  .  .  .  .  .  .  .  .  .  .  Name: "UserProto"
  4801  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4802  .  .  .  .  .  .  .  .  .  .  }
  4803  .  .  .  .  .  .  .  .  .  }
  4804  .  .  .  .  .  .  .  .  }
  4805  .  .  .  .  .  .  .  }
  4806  .  .  .  .  .  .  .  Tag: nil
  4807  .  .  .  .  .  .  .  Comment: nil
  4808  .  .  .  .  .  .  }
  4809  .  .  .  .  .  }
  4810  .  .  .  .  .  Closing: example.go:219:40
  4811  .  .  .  .  }
  4812  .  .  .  .  Results: *ast.FieldList {
  4813  .  .  .  .  .  Opening: example.go:219:42
  4814  .  .  .  .  .  List: []*ast.Field (len = 1) {
  4815  .  .  .  .  .  .  0: *ast.Field {
  4816  .  .  .  .  .  .  .  Doc: nil
  4817  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  4818  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4819  .  .  .  .  .  .  .  .  .  NamePos: example.go:219:43
  4820  .  .  .  .  .  .  .  .  .  Name: "u"
  4821  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  4822  .  .  .  .  .  .  .  .  .  .  Kind: var
  4823  .  .  .  .  .  .  .  .  .  .  Name: "u"
  4824  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 4815)
  4825  .  .  .  .  .  .  .  .  .  .  Data: nil
  4826  .  .  .  .  .  .  .  .  .  .  Type: nil
  4827  .  .  .  .  .  .  .  .  .  }
  4828  .  .  .  .  .  .  .  .  }
  4829  .  .  .  .  .  .  .  }
  4830  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  4831  .  .  .  .  .  .  .  .  Lbrack: example.go:219:45
  4832  .  .  .  .  .  .  .  .  Len: nil
  4833  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  4834  .  .  .  .  .  .  .  .  .  Star: example.go:219:47
  4835  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  4836  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4837  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:219:48
  4838  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4839  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4840  .  .  .  .  .  .  .  .  .  .  }
  4841  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4842  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:219:54
  4843  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4844  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4845  .  .  .  .  .  .  .  .  .  .  }
  4846  .  .  .  .  .  .  .  .  .  }
  4847  .  .  .  .  .  .  .  .  }
  4848  .  .  .  .  .  .  .  }
  4849  .  .  .  .  .  .  .  Tag: nil
  4850  .  .  .  .  .  .  .  Comment: nil
  4851  .  .  .  .  .  .  }
  4852  .  .  .  .  .  }
  4853  .  .  .  .  .  Closing: example.go:219:58
  4854  .  .  .  .  }
  4855  .  .  .  }
  4856  .  .  .  Body: *ast.BlockStmt {
  4857  .  .  .  .  Lbrace: example.go:219:60
  4858  .  .  .  .  List: []ast.Stmt (len = 3) {
  4859  .  .  .  .  .  0: *ast.AssignStmt {
  4860  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4861  .  .  .  .  .  .  .  0: *ast.Ident {
  4862  .  .  .  .  .  .  .  .  NamePos: example.go:220:2
  4863  .  .  .  .  .  .  .  .  Name: "u"
  4864  .  .  .  .  .  .  .  .  Obj: *(obj @ 4821)
  4865  .  .  .  .  .  .  .  }
  4866  .  .  .  .  .  .  }
  4867  .  .  .  .  .  .  TokPos: example.go:220:4
  4868  .  .  .  .  .  .  Tok: =
  4869  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4870  .  .  .  .  .  .  .  0: *ast.CallExpr {
  4871  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4872  .  .  .  .  .  .  .  .  .  NamePos: example.go:220:6
  4873  .  .  .  .  .  .  .  .  .  Name: "make"
  4874  .  .  .  .  .  .  .  .  .  Obj: nil
  4875  .  .  .  .  .  .  .  .  }
  4876  .  .  .  .  .  .  .  .  Lparen: example.go:220:10
  4877  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  4878  .  .  .  .  .  .  .  .  .  0: *ast.ArrayType {
  4879  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:220:11
  4880  .  .  .  .  .  .  .  .  .  .  Len: nil
  4881  .  .  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  4882  .  .  .  .  .  .  .  .  .  .  .  Star: example.go:220:13
  4883  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  4884  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4885  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:220:14
  4886  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4887  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4888  .  .  .  .  .  .  .  .  .  .  .  .  }
  4889  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4890  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:220:20
  4891  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4892  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4893  .  .  .  .  .  .  .  .  .  .  .  .  }
  4894  .  .  .  .  .  .  .  .  .  .  .  }
  4895  .  .  .  .  .  .  .  .  .  .  }
  4896  .  .  .  .  .  .  .  .  .  }
  4897  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
  4898  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  4899  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:220:26
  4900  .  .  .  .  .  .  .  .  .  .  .  Name: "len"
  4901  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4902  .  .  .  .  .  .  .  .  .  .  }
  4903  .  .  .  .  .  .  .  .  .  .  Lparen: example.go:220:29
  4904  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  4905  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  4906  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:220:30
  4907  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4908  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4778)
  4909  .  .  .  .  .  .  .  .  .  .  .  }
  4910  .  .  .  .  .  .  .  .  .  .  }
  4911  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  4912  .  .  .  .  .  .  .  .  .  .  Rparen: example.go:220:32
  4913  .  .  .  .  .  .  .  .  .  }
  4914  .  .  .  .  .  .  .  .  }
  4915  .  .  .  .  .  .  .  .  Ellipsis: -
  4916  .  .  .  .  .  .  .  .  Rparen: example.go:220:33
  4917  .  .  .  .  .  .  .  }
  4918  .  .  .  .  .  .  }
  4919  .  .  .  .  .  }
  4920  .  .  .  .  .  1: *ast.RangeStmt {
  4921  .  .  .  .  .  .  For: example.go:221:2
  4922  .  .  .  .  .  .  Key: *ast.Ident {
  4923  .  .  .  .  .  .  .  NamePos: example.go:221:6
  4924  .  .  .  .  .  .  .  Name: "i"
  4925  .  .  .  .  .  .  .  Obj: *ast.Object {
  4926  .  .  .  .  .  .  .  .  Kind: var
  4927  .  .  .  .  .  .  .  .  Name: "i"
  4928  .  .  .  .  .  .  .  .  Decl: *ast.AssignStmt {
  4929  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4930  .  .  .  .  .  .  .  .  .  .  0: *(obj @ 4922)
  4931  .  .  .  .  .  .  .  .  .  }
  4932  .  .  .  .  .  .  .  .  .  TokPos: example.go:221:8
  4933  .  .  .  .  .  .  .  .  .  Tok: :=
  4934  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4935  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  4936  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
  4937  .  .  .  .  .  .  .  .  .  .  .  Op: range
  4938  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4939  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:221:17
  4940  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  4941  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4778)
  4942  .  .  .  .  .  .  .  .  .  .  .  }
  4943  .  .  .  .  .  .  .  .  .  .  }
  4944  .  .  .  .  .  .  .  .  .  }
  4945  .  .  .  .  .  .  .  .  }
  4946  .  .  .  .  .  .  .  .  Data: nil
  4947  .  .  .  .  .  .  .  .  Type: nil
  4948  .  .  .  .  .  .  .  }
  4949  .  .  .  .  .  .  }
  4950  .  .  .  .  .  .  Value: nil
  4951  .  .  .  .  .  .  TokPos: example.go:221:8
  4952  .  .  .  .  .  .  Tok: :=
  4953  .  .  .  .  .  .  Range: example.go:221:11
  4954  .  .  .  .  .  .  X: *(obj @ 4938)
  4955  .  .  .  .  .  .  Body: *ast.BlockStmt {
  4956  .  .  .  .  .  .  .  Lbrace: example.go:221:20
  4957  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  4958  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
  4959  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  4960  .  .  .  .  .  .  .  .  .  .  0: *ast.IndexExpr {
  4961  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4962  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:222:3
  4963  .  .  .  .  .  .  .  .  .  .  .  .  Name: "u"
  4964  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4821)
  4965  .  .  .  .  .  .  .  .  .  .  .  }
  4966  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:222:4
  4967  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  4968  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:222:5
  4969  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  4970  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4925)
  4971  .  .  .  .  .  .  .  .  .  .  .  }
  4972  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:222:6
  4973  .  .  .  .  .  .  .  .  .  .  }
  4974  .  .  .  .  .  .  .  .  .  }
  4975  .  .  .  .  .  .  .  .  .  TokPos: example.go:222:8
  4976  .  .  .  .  .  .  .  .  .  Tok: =
  4977  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  4978  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
  4979  .  .  .  .  .  .  .  .  .  .  .  OpPos: example.go:222:10
  4980  .  .  .  .  .  .  .  .  .  .  .  Op: &
  4981  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
  4982  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  4983  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  4984  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:222:11
  4985  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  4986  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4987  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4988  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  4989  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:222:17
  4990  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  4991  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  4992  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  4993  .  .  .  .  .  .  .  .  .  .  .  .  }
  4994  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: example.go:222:21
  4995  .  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
  4996  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
  4997  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
  4998  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:223:4
  4999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  5000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  5001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: example.go:223:6
  5003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
  5004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.IndexExpr {
  5005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  5006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:223:8
  5007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "us"
  5008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4778)
  5009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrack: example.go:223:10
  5011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Index: *ast.Ident {
  5012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:223:11
  5013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "i"
  5014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 4925)
  5015  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5016  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrack: example.go:223:12
  5017  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  5019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: example.go:223:14
  5020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  5021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  5022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5023  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5024  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  5025  .  .  .  .  .  .  .  .  .  .  .  .  }
  5026  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: example.go:224:3
  5027  .  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
  5028  .  .  .  .  .  .  .  .  .  .  .  }
  5029  .  .  .  .  .  .  .  .  .  .  }
  5030  .  .  .  .  .  .  .  .  .  }
  5031  .  .  .  .  .  .  .  .  }
  5032  .  .  .  .  .  .  .  }
  5033  .  .  .  .  .  .  .  Rbrace: example.go:225:2
  5034  .  .  .  .  .  .  }
  5035  .  .  .  .  .  }
  5036  .  .  .  .  .  2: *ast.ReturnStmt {
  5037  .  .  .  .  .  .  Return: example.go:227:2
  5038  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  5039  .  .  .  .  .  .  .  0: *ast.Ident {
  5040  .  .  .  .  .  .  .  .  NamePos: example.go:227:9
  5041  .  .  .  .  .  .  .  .  Name: "u"
  5042  .  .  .  .  .  .  .  .  Obj: *(obj @ 4821)
  5043  .  .  .  .  .  .  .  }
  5044  .  .  .  .  .  .  }
  5045  .  .  .  .  .  }
  5046  .  .  .  .  }
  5047  .  .  .  .  Rbrace: example.go:228:1
  5048  .  .  .  }
  5049  .  .  }
  5050  .  }
  5051  .  FileStart: example.go:1:1
  5052  .  FileEnd: example.go:228:3
  5053  .  Scope: *ast.Scope {
  5054  .  .  Outer: nil
  5055  .  .  Objects: map[string]*ast.Object (len = 28) {
  5056  .  .  .  "Conv4": *(obj @ 2352)
  5057  .  .  .  "Conv3": *(obj @ 2175)
  5058  .  .  .  "MyInteger": *(obj @ 135)
  5059  .  .  .  "MyIntegerPointer": *(obj @ 173)
  5060  .  .  .  "OuterStruct": *(obj @ 214)
  5061  .  .  .  "ToUserSlice2": *(obj @ 3895)
  5062  .  .  .  "UserProtoToUser4": *(obj @ 2950)
  5063  .  .  .  "Conv": *(obj @ 1766)
  5064  .  .  .  "ToUser3": *(obj @ 3341)
  5065  .  .  .  "ToUserSlice3": *(obj @ 4177)
  5066  .  .  .  "TypeTestType": *(obj @ 104)
  5067  .  .  .  "ToUser1": *(obj @ 3080)
  5068  .  .  .  "ToUserSlice1": *(obj @ 3616)
  5069  .  .  .  "OuterStructPointer": *(obj @ 252)
  5070  .  .  .  "Interface": *(obj @ 349)
  5071  .  .  .  "UserProtoToUser2": *(obj @ 2696)
  5072  .  .  .  "TestType": *(obj @ 73)
  5073  .  .  .  "UserProtoToUser3": *(obj @ 2823)
  5074  .  .  .  "ToUser2": *(obj @ 3209)
  5075  .  .  .  "ToUser4": *(obj @ 3477)
  5076  .  .  .  "ToUserSlice4": *(obj @ 4466)
  5077  .  .  .  "St": *(obj @ 290)
  5078  .  .  .  "UserProto": *(obj @ 413)
  5079  .  .  .  "Conv1": *(obj @ 1900)
  5080  .  .  .  "Conv2": *(obj @ 2045)
  5081  .  .  .  "User": *(obj @ 1708)
  5082  .  .  .  "UserProtoToUser1": *(obj @ 2565)
  5083  .  .  .  "ToUserSlice5": *(obj @ 4758)
  5084  .  .  }
  5085  .  }
  5086  .  Imports: []*ast.ImportSpec (len = 4) {
  5087  .  .  0: *(obj @ 15)
  5088  .  .  1: *(obj @ 26)
  5089  .  .  2: *(obj @ 37)
  5090  .  .  3: *(obj @ 48)
  5091  .  }
  5092  .  Unresolved: []*ast.Ident (len = 95) {
  5093  .  .  0: *(obj @ 83)
  5094  .  .  1: *(obj @ 146)
  5095  .  .  2: *(obj @ 186)
  5096  .  .  3: *(obj @ 225)
  5097  .  .  4: *(obj @ 263)
  5098  .  .  5: *(obj @ 320)
  5099  .  .  6: *(obj @ 450)
  5100  .  .  7: *(obj @ 486)
  5101  .  .  8: *(obj @ 749)
  5102  .  .  9: *(obj @ 785)
  5103  .  .  10: *(obj @ 883)
  5104  .  .  11: *(obj @ 919)
  5105  .  .  12: *(obj @ 952)
  5106  .  .  13: *(obj @ 991)
  5107  .  .  14: *(obj @ 1032)
  5108  .  .  15: *(obj @ 1075)
  5109  .  .  16: *(obj @ 1184)
  5110  .  .  17: *(obj @ 1216)
  5111  .  .  18: *(obj @ 1248)
  5112  .  .  19: *(obj @ 1287)
  5113  .  .  20: *(obj @ 1640)
  5114  .  .  21: *(obj @ 1672)
  5115  .  .  22: *(obj @ 1738)
  5116  .  .  23: *(obj @ 1842)
  5117  .  .  24: *(obj @ 1851)
  5118  .  .  25: *(obj @ 1930)
  5119  .  .  26: *(obj @ 1962)
  5120  .  .  27: *(obj @ 1987)
  5121  .  .  28: *(obj @ 1996)
  5122  .  .  29: *(obj @ 2075)
  5123  .  .  30: *(obj @ 2099)
  5124  .  .  31: *(obj @ 2122)
  5125  .  .  32: *(obj @ 2131)
  5126  .  .  33: *(obj @ 2205)
  5127  .  .  34: *(obj @ 2235)
  5128  .  .  35: *(obj @ 2271)
  5129  .  .  36: *(obj @ 2294)
  5130  .  .  37: *(obj @ 2303)
  5131  .  .  38: *(obj @ 2382)
  5132  .  .  39: *(obj @ 2412)
  5133  .  .  40: *(obj @ 2444)
  5134  .  .  41: *(obj @ 2469)
  5135  .  .  42: *(obj @ 2478)
  5136  .  .  43: *(obj @ 2512)
  5137  .  .  44: *(obj @ 2521)
  5138  .  .  45: *(obj @ 2595)
  5139  .  .  46: *(obj @ 2625)
  5140  .  .  47: *(obj @ 2728)
  5141  .  .  48: *(obj @ 2759)
  5142  .  .  49: *(obj @ 2853)
  5143  .  .  50: *(obj @ 2885)
  5144  .  .  51: *(obj @ 2982)
  5145  .  .  52: *(obj @ 3015)
  5146  .  .  53: *(obj @ 3110)
  5147  .  .  54: *(obj @ 3134)
  5148  .  .  55: *(obj @ 3160)
  5149  .  .  56: *(obj @ 3241)
  5150  .  .  57: *(obj @ 3266)
  5151  .  .  58: *(obj @ 3292)
  5152  .  .  59: *(obj @ 3371)
  5153  .  .  60: *(obj @ 3397)
  5154  .  .  61: *(obj @ 3427)
  5155  .  .  62: *(obj @ 3509)
  5156  .  .  63: *(obj @ 3536)
  5157  .  .  64: *(obj @ 3566)
  5158  .  .  65: *(obj @ 3649)
  5159  .  .  66: *(obj @ 3677)
  5160  .  .  67: *(obj @ 3717)
  5161  .  .  68: *(obj @ 3728)
  5162  .  .  69: *(obj @ 3741)
  5163  .  .  70: *(obj @ 3823)
  5164  .  .  71: *(obj @ 3930)
  5165  .  .  72: *(obj @ 3959)
  5166  .  .  73: *(obj @ 3999)
  5167  .  .  74: *(obj @ 4010)
  5168  .  .  75: *(obj @ 4023)
  5169  .  .  76: *(obj @ 4105)
  5170  .  .  77: *(obj @ 4210)
  5171  .  .  78: *(obj @ 4240)
  5172  .  .  79: *(obj @ 4281)
  5173  .  .  80: *(obj @ 4294)
  5174  .  .  81: *(obj @ 4308)
  5175  .  .  82: *(obj @ 4393)
  5176  .  .  83: *(obj @ 4501)
  5177  .  .  84: *(obj @ 4532)
  5178  .  .  85: *(obj @ 4573)
  5179  .  .  86: *(obj @ 4586)
  5180  .  .  87: *(obj @ 4600)
  5181  .  .  88: *(obj @ 4685)
  5182  .  .  89: *(obj @ 4793)
  5183  .  .  90: *(obj @ 4836)
  5184  .  .  91: *(obj @ 4871)
  5185  .  .  92: *(obj @ 4884)
  5186  .  .  93: *(obj @ 4898)
  5187  .  .  94: *(obj @ 4983)
  5188  .  }
  5189  .  Comments: []*ast.CommentGroup (len = 41) {
  5190  .  .  0: *(obj @ 429)
  5191  .  .  1: *(obj @ 463)
  5192  .  .  2: *(obj @ 496)
  5193  .  .  3: *(obj @ 530)
  5194  .  .  4: *(obj @ 567)
  5195  .  .  5: *(obj @ 605)
  5196  .  .  6: *(obj @ 646)
  5197  .  .  7: *(obj @ 684)
  5198  .  .  8: *(obj @ 725)
  5199  .  .  9: *(obj @ 759)
  5200  .  .  10: *(obj @ 796)
  5201  .  .  11: *(obj @ 826)
  5202  .  .  12: *(obj @ 859)
  5203  .  .  13: *(obj @ 893)
  5204  .  .  14: *(obj @ 930)
  5205  .  .  15: *(obj @ 967)
  5206  .  .  16: *(obj @ 1007)
  5207  .  .  17: *(obj @ 1048)
  5208  .  .  18: *(obj @ 1092)
  5209  .  .  19: *(obj @ 1126)
  5210  .  .  20: *(obj @ 1163)
  5211  .  .  21: *(obj @ 1193)
  5212  .  .  22: *(obj @ 1226)
  5213  .  .  23: *(obj @ 1263)
  5214  .  .  24: *(obj @ 1303)
  5215  .  .  25: *(obj @ 1333)
  5216  .  .  26: *(obj @ 1366)
  5217  .  .  27: *(obj @ 1396)
  5218  .  .  28: *(obj @ 1429)
  5219  .  .  29: *(obj @ 1459)
  5220  .  .  30: *(obj @ 1492)
  5221  .  .  31: *(obj @ 1522)
  5222  .  .  32: *(obj @ 1555)
  5223  .  .  33: *(obj @ 1585)
  5224  .  .  34: *(obj @ 1618)
  5225  .  .  35: *(obj @ 1888)
  5226  .  .  36: *(obj @ 2033)
  5227  .  .  37: *(obj @ 2163)
  5228  .  .  38: *(obj @ 2340)
  5229  .  .  39: *(obj @ 2553)
  5230  .  .  40: *(obj @ 2684)
  5231  .  }
  5232  .  GoVersion: ""
  5233  }
